[{"C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\index.js":"1","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\App.js":"2","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\context.js":"3","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\reportWebVitals.js":"4","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Redux\\redux-store.js":"5","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Redux\\company-profile-reducer.js":"6","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\AppStyles.js":"7","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\assets\\icons.js":"8","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Redux\\form-reducer.js":"9","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Redux\\company-token-reducer.js":"10","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Redux\\car-reducer.js":"11","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Redux\\hourly-reducer.js":"12","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Redux\\reset-widget-inputs-reducer.js":"13","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\CheckOut.js":"14","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Redux\\gate-meeting-reducer.js":"15","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CompanyProfile\\CompanyProfile.js":"16","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\Helpers\\Preloader\\Preloader.js":"17","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\api\\api.js":"18","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\Confirmation\\Confirmation.js":"19","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\FleetForm\\FleetFormContainerComponent.js":"20","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\AdressFormContainerComponent.js":"21","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\Preview\\PreviewContainerComponent.js":"22","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\Payment\\PaymentContainerComponent.js":"23","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\Payment\\PaymentUIComponent.js":"24","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\Preview\\PreviewUIComponent.js":"25","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\AdressFormStyles.js":"26","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\AdressFormUIComponent.js":"27","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\FleetForm\\FleetFormUIComponent.js":"28","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\ReservationFailed\\ReservationFailed.js":"29","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\Helpers\\Switch\\Switch.js":"30","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\Helpers\\Modal\\Modal.js":"31","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\IncorrectAdressError\\IncorrectAddressError.js":"32","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\Luggage\\Luggage.js":"33","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\SafetySeat\\SafetySeat.js":"34","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\PassengerQuantity\\PassengerQuantity.js":"35","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\Hours\\Hours.js":"36","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\CustomFormInput\\CustomFormInput.js":"37","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\GoogleMap\\Directions\\Directions.js":"38","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\GoogleMap\\GoogleMapContainer\\GoogleMap.js":"39","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\TermsOfUse\\TermOfUse\\TermOfUse.js":"40","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\TermsOfUse\\PrivacyPolicy\\PrivacyPolicy.js":"41","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\GoogleMap\\mapStyles.js":"42","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\GoogleMap\\GoogleMapContainer\\GoogleMapStyles.js":"43"},{"size":4163,"mtime":1654508755161,"results":"44","hashOfConfig":"45"},{"size":24994,"mtime":1656673651768,"results":"46","hashOfConfig":"45"},{"size":110,"mtime":1642058614732,"results":"47","hashOfConfig":"45"},{"size":375,"mtime":1625493823979,"results":"48","hashOfConfig":"45"},{"size":1025,"mtime":1635563186265,"results":"49","hashOfConfig":"45"},{"size":3340,"mtime":1654573350883,"results":"50","hashOfConfig":"45"},{"size":8318,"mtime":1642484025211,"results":"51","hashOfConfig":"45"},{"size":64128,"mtime":1654582530006,"results":"52","hashOfConfig":"45"},{"size":8151,"mtime":1657013952915,"results":"53","hashOfConfig":"45"},{"size":1450,"mtime":1644918201380,"results":"54","hashOfConfig":"45"},{"size":2081,"mtime":1654573350883,"results":"55","hashOfConfig":"45"},{"size":2023,"mtime":1635563186264,"results":"56","hashOfConfig":"45"},{"size":1158,"mtime":1636522466937,"results":"57","hashOfConfig":"45"},{"size":2253,"mtime":1642496672189,"results":"58","hashOfConfig":"45"},{"size":1137,"mtime":1635563186263,"results":"59","hashOfConfig":"45"},{"size":4603,"mtime":1651233412173,"results":"60","hashOfConfig":"45"},{"size":1403,"mtime":1654573482432,"results":"61","hashOfConfig":"45"},{"size":3494,"mtime":1657270910338,"results":"62","hashOfConfig":"45"},{"size":4488,"mtime":1645503730110,"results":"63","hashOfConfig":"45"},{"size":3089,"mtime":1654574832203,"results":"64","hashOfConfig":"45"},{"size":18787,"mtime":1656669075576,"results":"65","hashOfConfig":"45"},{"size":3055,"mtime":1654575003981,"results":"66","hashOfConfig":"45"},{"size":8175,"mtime":1654574832201,"results":"67","hashOfConfig":"45"},{"size":32984,"mtime":1656671988170,"results":"68","hashOfConfig":"45"},{"size":36457,"mtime":1656673015809,"results":"69","hashOfConfig":"45"},{"size":8627,"mtime":1642129336436,"results":"70","hashOfConfig":"45"},{"size":27344,"mtime":1656676023920,"results":"71","hashOfConfig":"45"},{"size":22370,"mtime":1656670138597,"results":"72","hashOfConfig":"45"},{"size":2307,"mtime":1645503730118,"results":"73","hashOfConfig":"45"},{"size":4983,"mtime":1656672170614,"results":"74","hashOfConfig":"45"},{"size":2275,"mtime":1654573350895,"results":"75","hashOfConfig":"45"},{"size":3728,"mtime":1645503473703,"results":"76","hashOfConfig":"45"},{"size":4140,"mtime":1651233412169,"results":"77","hashOfConfig":"45"},{"size":8509,"mtime":1654573352585,"results":"78","hashOfConfig":"45"},{"size":5701,"mtime":1656668438633,"results":"79","hashOfConfig":"45"},{"size":5007,"mtime":1651233412168,"results":"80","hashOfConfig":"45"},{"size":6394,"mtime":1642129990133,"results":"81","hashOfConfig":"45"},{"size":2911,"mtime":1654161518749,"results":"82","hashOfConfig":"45"},{"size":14936,"mtime":1656653698617,"results":"83","hashOfConfig":"45"},{"size":57182,"mtime":1645504430321,"results":"84","hashOfConfig":"45"},{"size":5662,"mtime":1645504430321,"results":"85","hashOfConfig":"45"},{"size":65,"mtime":1642046501906,"results":"86","hashOfConfig":"45"},{"size":4095,"mtime":1642046102619,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"k8hfuh",{"filePath":"91","messages":"92","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"90"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"90"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"90"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"90"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"90"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"90"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"90"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\index.js",[],["205","206"],"C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\App.js",["207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233"],"// import Accordion from \"@material-ui/core/Accordion\"\r\n// import AccordionDetails from \"@material-ui/core/AccordionDetails\"\r\n// import AccordionSummary from \"@material-ui/core/AccordionSummary\"\r\n// import Card from \"@material-ui/core/Card\"\r\n// import CssBaseline from \"@material-ui/core/CssBaseline\"\r\nimport Slide from \"@material-ui/core/Slide\"\r\n// import { ThemeProvider } from \"@material-ui/styles\"\r\n// import { isMobile } from 'react-device-detect';\r\nimport React, { useContext, useEffect, useState } from \"react\"\r\nimport Draggable from \"react-draggable\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  BookNowIcon,\r\n  BookNowIconForMobile,\r\n  // CloseWidgetIcon,\r\n} from \"./assets/icons\"\r\nimport CheckOut from \"./Components/CheckoutForm/CheckOut/CheckOut\"\r\nimport CompanyProfile from \"./Components/CompanyProfile/CompanyProfile\"\r\nimport {\r\n  getCompanyProfile,\r\n  initializing,\r\n} from \"./Redux/company-profile-reducer\"\r\n\r\n// import theme from \"./Theme\"\r\n\r\nimport { userScreenHeight, userScreenWidth, useStyles } from \"./AppStyles\"\r\nimport { AppBar, useMediaQuery } from \"@material-ui/core\"\r\nimport { useRef } from \"react\"\r\n// import Slide1 from \"@mui/material/Slide\"\r\nimport { Preloader } from \"./Components/Helpers/Preloader/Preloader\"\r\nimport styles from \"./AppStyles.module.scss\"\r\nimport ThemeContext from \"./context\"\r\nimport styled from \"styled-components\"\r\nimport \"./StylesForResetingEmbeddingWebsitesStyles.scss\"\r\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\r\n\r\nlet xOrdinate = 0\r\nlet yOrdinate = 0\r\n// const cardHeight = document.getElementById(\"mainContent\").clientHeight\r\n\r\nconst App = (props) => {\r\n  // const classes = useStyles(props)\r\n  // const [positionsX, setPositionsX] = useState(null)\r\n  // const [positionsY, setPositionsY] = useState(null)\r\n  // useEffect(() => {\r\n  //   console.log(window.positionX)\r\n  //   setPositionsX(window.positionX)\r\n  //   setPositionsY(window.positionY)\r\n  //   console.log(positionsX, positionsY)\r\n  // }, [positionsX, positionsY])\r\n\r\n  const [activeStep, setActiveStep] = React.useState(0)\r\n  let position = React.useRef({\r\n    x: window.positionX,\r\n    y: -50,\r\n  })\r\n  // console.log(position)\r\n  const [expanded, setExpanded] = React.useState(false)\r\n  const [disabled, setDisabled] = React.useState(false)\r\n  // const [disabledWidget, setDisabledWidget] = React.useState(false)\r\n  // const [open, setOpen] = React.useState(false)\r\n  const [heightOfCard, setHeightOfCard] = React.useState(0)\r\n  const refOfCard = useRef(null)\r\n  const [heightOfBookNow, setHeightOfBookNow] = React.useState(0)\r\n  const [backgroundScrollStop, setBackgroundScrollStop] = React.useState(false)\r\n  const [\r\n    backgroundScrollStopForTimePicker,\r\n    setBackgroundScrollStopForTimePicker,\r\n  ] = React.useState(false)\r\n  // const [draggable, setDraggable] = React.useState(false)\r\n\r\n  const refOfBookNow = useRef(null)\r\n\r\n  const handleClose = () => {\r\n    setExpanded(false)\r\n    document.body.style.overflowY = \"unset\"\r\n    // position.current.y = 10\r\n\r\n    if (userScreenWidth - xOrdinate < 500) {\r\n      position.current.x = userScreenWidth - 390\r\n    }\r\n  }\r\n  {\r\n    /* Этот обработчик для того чтобы при закрытии виджета кнопка book now стояла в самом краю без этого она сдвигаетсяв лево */\r\n  }\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    yOrdinate = position.current.y\r\n    xOrdinate = position.current.x\r\n    position.current.y = -10\r\n    if (userScreenWidth - xOrdinate < 500) {\r\n      position.current.x = userScreenWidth - 390\r\n    }\r\n    if (xOrdinate < -20) {\r\n      position.current.x = 0\r\n    }\r\n\r\n    setExpanded(isExpanded ? panel : false)\r\n  }\r\n\r\n  const enableAccordionButton = (e) => {\r\n    setTimeout(() => {\r\n      setDisabled(false)\r\n    }, 200)\r\n\r\n    {\r\n      /*Этот обработчик чтобы сам раскрывшийся виджет не выходил за рамки экрана если перетаскивается за пределы то он возвращается */\r\n    }\r\n    if (expanded) {\r\n      yOrdinate = position.current.y\r\n      xOrdinate = position.current.x\r\n      if (xOrdinate + 500 > userScreenWidth) {\r\n        position.current.x = userScreenWidth - 380\r\n      }\r\n      if (xOrdinate < -20) {\r\n        position.current.x = 0\r\n      }\r\n      if (yOrdinate - (heightOfCard + 75) < -userScreenHeight) {\r\n        position.current.y = -userScreenHeight + (heightOfCard + 75)\r\n      }\r\n      if (yOrdinate > 0) {\r\n        position.current.y = 0\r\n      }\r\n    }\r\n    if (yOrdinate - heightOfCard < -userScreenHeight) {\r\n      position.current.y = -userScreenHeight + (heightOfCard + 75)\r\n    }\r\n    {\r\n      /*Тот же обратчик только для иконки Book Now! с пульсацией до раскрытой иконке*/\r\n    }\r\n    yOrdinate = position.current.y\r\n    xOrdinate = position.current.x\r\n    if (xOrdinate < 0) {\r\n      position.current.x = -60\r\n    }\r\n    if (xOrdinate + 300 > userScreenWidth) {\r\n      position.current.x = userScreenWidth - 390\r\n    }\r\n    if (yOrdinate - 105 < -userScreenHeight) {\r\n      position.current.y = -userScreenHeight + 240\r\n    }\r\n\r\n    if (yOrdinate > 0) {\r\n      position.current.y = 0\r\n    }\r\n    // console.log(position.current.y)\r\n    // console.log(userScreenHeight)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (backgroundScrollStop) {\r\n      document.body.style.overflow = \"hidden\"\r\n    } else {\r\n      document.body.style.overflow = \"unset\"\r\n    }\r\n  }, [backgroundScrollStop])\r\n\r\n  const settingHeight = () => {\r\n    setHeightOfCard(refOfCard.current?.clientHeight)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    settingHeight()\r\n    setHeightOfBookNow(refOfBookNow.current.clientHeight)\r\n  }, [heightOfBookNow])\r\n  // props.getCompanyToken()\r\n  // React.useEffect(() => {\r\n  //   if (props.loading) {\r\n  //     setDisabled(true)\r\n  //   } else {\r\n  //     setDisabled(false)\r\n  //   }\r\n  // }, [props.loading])\r\n  const handleDrag = (e, ui) => {\r\n    position.current.x = ui.x\r\n    position.current.y = ui.y\r\n    if (!expanded)\r\n      setTimeout(() => {\r\n        setDisabled(true)\r\n      }, 150)\r\n  }\r\n\r\n  const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1)\r\n  const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1)\r\n\r\n  const jwtToken = localStorage.getItem(\"Authorization\")\r\n\r\n  useEffect(() => {\r\n    localStorage.removeItem(\"captcha\")\r\n    props.getCompanyProfile()\r\n  }, [])\r\n\r\n  const Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />\r\n  })\r\n\r\n  // const isMobile = useMediaQuery(\"(max-width:530px)\")\r\n  const isiPad = useMediaQuery(\"(max-width:1024px)\")\r\n  const isMobile = useMediaQuery(\"(max-width:500px)\")\r\n\r\n  let stylesForBody = `\r\n  pointer-events: none;\r\n    z-index: 1000000000; \r\n    position: fixed;\r\n  bottom: 0;\r\n  width: 100%;\r\n  \r\n  `\r\n  //   bottom: 50px;\r\n  // right: 0;\r\n  // left: 50px;\r\n  document.getElementById(\"widget-by-bookinglane\").style = stylesForBody\r\n\r\n  const containerRef = React.useRef(null)\r\n\r\n  const leftOrRight = window.leftOrRight\r\n\r\n  const positioningForWithoutDraggableAppXAndY = React.useRef({\r\n    x: window.positionXforWithoutDraggableApp,\r\n    y: window.positionYforWithoutDraggableApp,\r\n  })\r\n  // console.log(window)\r\n  // var iframe = document.createElement(\"iframe\")\r\n  // // iframe.setAttribute(\"id\", \"widget-by-bookinglane\")\r\n  // document.getElementsByTagName(\"h1\").appendChild(iframe)\r\n\r\n  // var metaForScale = document.createElement(\"meta\")\r\n  // metaForScale.setAttribute(\"name\", \"viewport\")\r\n  // metaForScale.setAttribute(\r\n  //   \"content\",\r\n  //   \"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"\r\n  // )\r\n  // useEffect(() => {}, [\r\n  //   document.getElementsByTagName(\"head\")[0].appendChild(metaForScale),\r\n  // ])\r\n\r\n  // console.log(\"success\")\r\n  // document.body.querySelector(\".jss3\").style.display = \"block\"\r\n\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n    inputsBackground,\r\n    bookNowIconCircleBorderColor,\r\n    bookNowIconBackgroundColor,\r\n    bookNowIconInnerElementsColor,\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <>\r\n      {/* {props.getCompanyToken() && ( */}\r\n      <>\r\n        {isMobile ? (\r\n          <>\r\n            <div\r\n              ref={containerRef}\r\n              className={styles.mainBookNowWrapper}\r\n              style={{\r\n                left: `${positioningForWithoutDraggableAppXAndY.current.x}px`,\r\n                bottom: `${positioningForWithoutDraggableAppXAndY.current.y}px`,\r\n              }}\r\n            >\r\n              <BookNowIconBlock\r\n                // elevation={0}\r\n                // disabled={disabled}\r\n                onClick={() => {\r\n                  handleChange()\r\n                  setBackgroundScrollStop(true)\r\n                  setExpanded(true)\r\n                }}\r\n                bookNowIconCircleBorderColor={bookNowIconCircleBorderColor}\r\n                bookNowIconBackgroundColor={bookNowIconBackgroundColor}\r\n                disabled={disabled}\r\n                ref={refOfBookNow}\r\n                id=\"booknowIconMobile\"\r\n                style={{\r\n                  left:\r\n                    leftOrRight == \"left\"\r\n                      ? `calc(${positioningForWithoutDraggableAppXAndY.current.x}px - 15px)`\r\n                      : `calc(${positioningForWithoutDraggableAppXAndY.current.x}px + 50px)`,\r\n                  right: \"0\",\r\n                  bottom: `calc(${positioningForWithoutDraggableAppXAndY.current.y}px - 30px)`,\r\n                  display: expanded ? \"none\" : \"block\",\r\n                }}\r\n              >\r\n                <BookNowIconForMobile color={bookNowIconInnerElementsColor} />\r\n                <span\r\n                  className={styles.bookNowMobile}\r\n                  style={{\r\n                    color: bookNowIconInnerElementsColor,\r\n                    fontFamily: \"'Vazir', sans-serif\",\r\n                    fontSize: \"13px\",\r\n                    position: \"absolute\",\r\n                    bottom: \"24%\",\r\n                    left: \"11%\",\r\n                    whiteSpace: \"nowrap\",\r\n                    fontFamily: \"Roboto\",\r\n                    lineHeight: \"initial\",\r\n                  }}\r\n                >\r\n                  BOOK NOW!\r\n                </span>\r\n              </BookNowIconBlock>\r\n\r\n              <div\r\n                className={\r\n                  expanded\r\n                    ? styles.cardContainerShowMobile\r\n                    : styles.cardContainerHiddenMobile\r\n                }\r\n              >\r\n                <div\r\n                  // position=\"sticky\"\r\n                  className={styles.divForStickyHeader}\r\n                >\r\n                  <div className=\"companyProfileClassForDrag\">\r\n                    {/* этот класс c div-oм для реакт драга чтобы можно было перетаскивать по шапке виджета*/}\r\n                    <div className={styles.companyProfile}>\r\n                      {/* это для pointer cursora */}\r\n                      <CompanyProfile\r\n                        setExpanded={handleClose}\r\n                        initializing={props.initializing}\r\n                        expanded={expanded}\r\n                        setActiveStep={setActiveStep}\r\n                        setBackgroundScrollStop={setBackgroundScrollStop}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  ref={refOfCard}\r\n                  // style={{ borderRadius: \"10px\" }}\r\n                  className={styles.contentContainerMobile}\r\n                  style={{\r\n                    background: ThemeProviderAppBackgroundColor,\r\n                  }}\r\n                >\r\n                  {props.initializing ? (\r\n                    <CheckOut\r\n                      isFetching={props.isFetching}\r\n                      setExpanded={handleClose}\r\n                      activeStep={activeStep}\r\n                      setActiveStep={setActiveStep}\r\n                      nextStep={nextStep}\r\n                      backStep={backStep}\r\n                      setBackgroundScrollStop={setBackgroundScrollStop}\r\n                    />\r\n                  ) : (\r\n                    <Preloader />\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* {!jwtToken && null} */}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {/* {forBostonLimousineToDisplayIconOnTheLeft && (\r\n              \r\n            )} */}\r\n            {isiPad && (\r\n              <div\r\n                ref={containerRef}\r\n                className={styles.mainBookNowWrapper}\r\n                style={{\r\n                  marginLeft:\r\n                    leftOrRight == \"left\"\r\n                      ? `${positioningForWithoutDraggableAppXAndY.current.x}px`\r\n                      : `calc(${positioningForWithoutDraggableAppXAndY.current.x}px - 180px)`,\r\n                  bottom: `${positioningForWithoutDraggableAppXAndY.current.y}px`,\r\n                }}\r\n              >\r\n                <BookNowIconBlock\r\n                  // elevation={0}\r\n                  // disabled={disabled}\r\n                  onClick={() => {\r\n                    handleChange()\r\n                    setBackgroundScrollStop(true)\r\n                    setExpanded(true)\r\n                  }}\r\n                  bookNowIconCircleBorderColor={bookNowIconCircleBorderColor}\r\n                  bookNowIconBackgroundColor={bookNowIconBackgroundColor}\r\n                  disabled={disabled}\r\n                  ref={refOfBookNow}\r\n                  id=\"booknowIcon\"\r\n                  style={{\r\n                    left: `${positioningForWithoutDraggableAppXAndY.current.x}px`,\r\n                    bottom: `${positioningForWithoutDraggableAppXAndY.current.y}px`,\r\n                    display: expanded ? \"none\" : \"block\",\r\n                  }}\r\n                >\r\n                  <BookNowIcon color={bookNowIconInnerElementsColor} />\r\n                  <span\r\n                    className={styles.bookNow}\r\n                    style={{\r\n                      color: bookNowIconInnerElementsColor,\r\n                      fontFamily: \"'Vazir', sans-serif\",\r\n                      fontSize: \"15px\",\r\n                      position: \"absolute\",\r\n                      bottom: \"24%\",\r\n                      left: \"11%\",\r\n                      whiteSpace: \"nowrap\",\r\n                      fontFamily: \"Roboto\",\r\n                      lineHeight: \"initial\",\r\n                    }}\r\n                  >\r\n                    BOOK NOW!\r\n                  </span>\r\n                </BookNowIconBlock>\r\n                {/* {jwtToken && ( */}\r\n                <div\r\n                  className={\r\n                    expanded\r\n                      ? styles.cardContainerShow\r\n                      : styles.cardContainerHidden\r\n                  }\r\n                  style={{\r\n                    border: `1px solid ${borderColorForOuterApp}`,\r\n                    borderRadius: borderRadiusesForWholeApp,\r\n                  }}\r\n                >\r\n                  <div\r\n                    // position=\"sticky\"\r\n                    className={styles.divForStickyHeader}\r\n                  >\r\n                    <div className=\"companyProfileClassForDrag\">\r\n                      {/* этот класс c div-oм для реакт драга чтобы можно было перетаскивать по шапке виджета*/}\r\n                      <div\r\n                        className={styles.companyProfile}\r\n                        style={{\r\n                          borderTopRightRadius: borderRadiusesForWholeApp,\r\n                          borderTopLeftRadius: borderRadiusesForWholeApp,\r\n                        }}\r\n                      >\r\n                        {/* это для pointer cursora */}\r\n                        <CompanyProfile\r\n                          setExpanded={handleClose}\r\n                          initializing={props.initializing}\r\n                          expanded={expanded}\r\n                          setActiveStep={setActiveStep}\r\n                          setBackgroundScrollStop={setBackgroundScrollStop}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    // style={{ borderRadius: \"10px\" }}\r\n                    className={styles.contentContainer}\r\n                    style={{\r\n                      background: ThemeProviderAppBackgroundColor,\r\n                      borderBottomRightRadius: borderRadiusesForWholeApp,\r\n                      borderBottomLeftRadius: borderRadiusesForWholeApp,\r\n                    }}\r\n                  >\r\n                    {props.initializing ? (\r\n                      <CheckOut\r\n                        isFetching={props.isFetching}\r\n                        setExpanded={handleClose}\r\n                        activeStep={activeStep}\r\n                        setActiveStep={setActiveStep}\r\n                        nextStep={nextStep}\r\n                        backStep={backStep}\r\n                        setBackgroundScrollStop={setBackgroundScrollStop}\r\n                      />\r\n                    ) : (\r\n                      <Preloader />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                {/* )}\r\n                {!jwtToken && null} */}\r\n              </div>\r\n            )}\r\n\r\n            {!isiPad && (\r\n              <Draggable\r\n                onDrag={handleDrag}\r\n                onStop={enableAccordionButton}\r\n                position={position.current}\r\n                // defaultPosition={{ x: userScreenWidth, y: 25 }}\r\n\r\n                // disabled={false}\r\n                // bounds=\"body\"\r\n                handle=\".companyProfileClassForDrag, #booknowIcon\"\r\n              >\r\n                <div ref={containerRef} className={styles.mainBookNowWrapper}>\r\n                  <BookNowIconBlock\r\n                    // elevation={0}\r\n                    // disabled={disabled}\r\n                    onClick={() => {\r\n                      handleChange()\r\n                      setBackgroundScrollStop(true)\r\n                      setExpanded(true)\r\n                    }}\r\n                    // className={\r\n                    //   disabled\r\n                    //     ? styles.mainBookNowIconDisabledWhileDragging\r\n                    //     : styles.mainBookNowIconEnabledWhileDragging\r\n                    // }\r\n                    style={{ display: expanded ? \"none\" : \"block\" }}\r\n                    bookNowIconCircleBorderColor={bookNowIconCircleBorderColor}\r\n                    bookNowIconBackgroundColor={bookNowIconBackgroundColor}\r\n                    disabled={disabled}\r\n                    ref={refOfBookNow}\r\n                    id=\"booknowIcon\"\r\n                  >\r\n                    {/* <div className={styles.letterB}></div> */}\r\n                    <BookNowIcon color={bookNowIconInnerElementsColor} />\r\n                    <span\r\n                      className={styles.bookNow}\r\n                      style={{\r\n                        color: bookNowIconInnerElementsColor,\r\n                        fontFamily: \"'Vazir', sans-serif\",\r\n                        fontSize: \"15px\",\r\n                        position: \"absolute\",\r\n                        bottom: \"24%\",\r\n                        left: \"11%\",\r\n                        whiteSpace: \"nowrap\",\r\n                        fontFamily: \"Roboto\",\r\n                        lineHeight: \"initial\",\r\n                      }}\r\n                    >\r\n                      BOOK NOW!\r\n                    </span>\r\n                  </BookNowIconBlock>\r\n                  {/* {jwtToken && ( */}\r\n                  <div\r\n                    className={\r\n                      expanded\r\n                        ? styles.cardContainerShow\r\n                        : styles.cardContainerHidden\r\n                    }\r\n                    ref={refOfCard}\r\n                    style={{\r\n                      border: `1px solid ${borderColorForOuterApp}`,\r\n                      borderRadius: borderRadiusesForWholeApp,\r\n                    }}\r\n                  >\r\n                    <div\r\n                      // position=\"sticky\"\r\n                      className={styles.divForStickyHeader}\r\n                    >\r\n                      <div className=\"companyProfileClassForDrag\">\r\n                        {/* этот класс c div-oм для реакт драга чтобы можно было перетаскивать по шапке виджета*/}\r\n                        <div\r\n                          className={styles.companyProfile}\r\n                          style={{\r\n                            borderTopRightRadius: borderRadiusesForWholeApp,\r\n                            borderTopLeftRadius: borderRadiusesForWholeApp,\r\n                          }}\r\n                        >\r\n                          {/* это для pointer cursora */}\r\n                          <CompanyProfile\r\n                            setExpanded={handleClose}\r\n                            initializing={props.initializing}\r\n                            expanded={expanded}\r\n                            setActiveStep={setActiveStep}\r\n                            setBackgroundScrollStop={setBackgroundScrollStop}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      // ref={refOfCard}\r\n                      // style={{ borderRadius: \"10px\" }}\r\n                      className={styles.contentContainer}\r\n                      style={{\r\n                        background: ThemeProviderAppBackgroundColor,\r\n                        borderBottomRightRadius: borderRadiusesForWholeApp,\r\n                        borderBottomLeftRadius: borderRadiusesForWholeApp,\r\n                      }}\r\n                    >\r\n                      {props.initializing ? (\r\n                        <CheckOut\r\n                          isFetching={props.isFetching}\r\n                          setExpanded={handleClose}\r\n                          activeStep={activeStep}\r\n                          setActiveStep={setActiveStep}\r\n                          nextStep={nextStep}\r\n                          backStep={backStep}\r\n                          setBackgroundScrollStop={setBackgroundScrollStop}\r\n                        />\r\n                      ) : (\r\n                        <Preloader />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {/* )}\r\n                  {!jwtToken && null} */}\r\n                </div>\r\n              </Draggable>\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n      {/* )} */}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isFetching: state.cars.isFetching,\r\n    companyName: state.companyProfile.profile.companyName,\r\n    initializing: state.companyProfile.initializing,\r\n    // loading: state.companyToken.loading,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getCompanyProfile })(App)\r\n\r\nconst BookNowIconBlock = styled.div`\r\n  pointer-events: ${(props) => {\r\n    if (props.disabled) {\r\n      return \"none\"\r\n    } else {\r\n      return \"auto\"\r\n    }\r\n  }};\r\n  opacity: ${(props) => {\r\n    if (props.disabled) {\r\n      return \" 0.5\"\r\n    }\r\n  }};\r\n  @keyframes pulse {\r\n    10% {\r\n      -moz-box-shadow: 0 0 0 0 ${(props) => props.bookNowIconCircleBorderColor};\r\n      box-shadow: 0 0 0 0 ${(props) => props.bookNowIconCircleBorderColor};\r\n    }\r\n    38% {\r\n      -moz-box-shadow: 0 0 0 0 ${(props) => props.bookNowIconCircleBorderColor};\r\n      box-shadow: 0 0 3px 4.5px ${(props) => props.bookNowIconCircleBorderColor};\r\n    }\r\n    100% {\r\n      -moz-box-shadow: 0 0 0 0 ${(props) => props.bookNowIconCircleBorderColor};\r\n      box-shadow: 0 0 0 0 tranparent;\r\n    }\r\n  }\r\n\r\n  // padding-left: 0px;\r\n  // &:before {\r\n  //   background-color: white;\r\n  // }\r\n\r\n  // padding: 0px;\r\n  width: 104px;\r\n  height: 104px;\r\n  position: fixed;\r\n  bottom: 0px;\r\n  left: 0;\r\n  cursor: pointer;\r\n  transition: 0ms;\r\n  animation-name: pulse;\r\n  animation-iteration-count: infinite;\r\n  animation-duration: 2s;\r\n  background-color: ${(props) => props.bookNowIconBackgroundColor};\r\n  filter: opacity(1);\r\n  -webkit-filter: opacity(1);\r\n  border-radius: 50%;\r\n\r\n  @media (max-width: 500px) {\r\n    width: 87px;\r\n    height: 87px;\r\n  }\r\n`\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\context.js",[],"C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\reportWebVitals.js",[],"C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Redux\\redux-store.js",[],"C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Redux\\company-profile-reducer.js",[],"C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\AppStyles.js",["234"],"// import { makeStyles } from \"@material-ui/core\"\r\n\r\nconst userScreenHeight = window.innerHeight\r\nconst userScreenWidth = window.innerWidth\r\n\r\nconst backgroundColorOnScroll = \"black\"\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   \"@keyframes pulse\": {\r\n//     \"10%\": {\r\n//       \"-moz-box-shadow\": \"0 0 0 0 white\",\r\n//       \"box-shadow\": \"0 0 0 0 white\",\r\n//     },\r\n//     \"38%\": {\r\n//       \"-moz-box-shadow\": \"0 0 0 0 white\",\r\n//       \"box-shadow\": \"0 0 3px 4.5px white\",\r\n//     },\r\n//     \"100%\": {\r\n//       \"-moz-box-shadow\": \"0 0 0 0 white\",\r\n//       \"box-shadow\": \"0 0 0 0 tranparent\",\r\n//     },\r\n//   },\r\n//   MuiAccordionroot: {\r\n//     paddingLeft: \"0px\",\r\n//     \"&.MuiAccordion-root:before\": {\r\n//       backgroundColor: \"white\",\r\n//     },\r\n//     \"& .MuiAccordionDetails-root\": {\r\n//       padding: \"0px\",\r\n//     },\r\n//     \"& .MuiAccordionSummary-expandIcon\": {\r\n//       transition: \"0ms\",\r\n//       animationName: \"$pulse\",\r\n//       animationIterationCount: \"infinite\",\r\n//       animationDuration: \"2s\",\r\n//       backgroundColor: \"rgba(149, 149, 149, 0.8)\",\r\n//       filter: \"opacity(1)\",\r\n//       \"&::-webkit-filter\": \"opacity(1)\",\r\n//       // backdropFilter: \"blur(6px)\",\r\n//       // \"&::-webkit-backdrop-filter\": \"blur(6px)\",\r\n//       // opacity: \"0.8\",\r\n//     },\r\n//     \"& .MuiButtonBase-root\": {\r\n//       disableRipple: true,\r\n//       disableFocusRipple: true,\r\n//       // disableElevation: true,\r\n//     },\r\n//     \"& .MuiButtonBase-root.Mui-disabled\": {\r\n//       backgroundColor: \"none\",\r\n//     },\r\n//   },\r\n\r\n//   // main: {\r\n//   //   position: \"fixed\",\r\n//   //   bottom: \"1px\",\r\n//   //   webkitUserSelect: \"none\",\r\n//   //   mozUserSelect: \"none\",\r\n//   //   msUserSelect: \"none\",\r\n//   //   userSelect: \"none\",\r\n//   //   \"& .MuiDivider-root\": {\r\n//   //     background: \"#c7c7c7\",\r\n//   //   },\r\n//   //   \"& .MuiPaper-root\": {\r\n//   //     background: \"black\",\r\n//   //   },\r\n//   // },\r\n//   mainMobile: {\r\n//     position: \"fixed\",\r\n//     bottom: \"-1px\",\r\n//     webkitUserSelect: \"none\",\r\n//     mozUserSelect: \"none\",\r\n//     msUserSelect: \"none\",\r\n//     userSelect: \"none\",\r\n//     height: \"100%\",\r\n//   },\r\n//   accordion: {\r\n//     width: \"120px\",\r\n//     height: \"120px\",\r\n//     bottom: \"50px\",\r\n//     left: \"0px\",\r\n//     background: \"none\",\r\n//     marginLeft: \"30px\",\r\n//     // padding: theme.spacing(1),\r\n//     position: \"fixed\",\r\n//     \"& .MuiAccordionSummary-expandIcon.Mui-expanded\": {\r\n//       transform: \"initial\",\r\n//     },\r\n//     [theme.breakpoints.down(\"xs\")]: {\r\n//       left: \"10px\",\r\n//     },\r\n//   },\r\n//   accordionIpad: {\r\n//     width: \"120px\",\r\n//     height: \"120px\",\r\n//     bottom: \"50px\",\r\n//     left: 30,\r\n\r\n//     background: \"none\",\r\n//     // padding: theme.spacing(1),\r\n//     position: \"fixed\",\r\n//     // [theme.breakpoints.down(\"xs\")]: {\r\n//     //   left: \"10px\",\r\n//     // },\r\n//   },\r\n//   accordionMobile: {\r\n//     width: \"120px\",\r\n//     height: \"120px\",\r\n//     bottom: \"5px\",\r\n//     left: \"-40px\",\r\n//     bottom: \"10px\",\r\n//     background: \"none\",\r\n//     // padding: theme.spacing(1),\r\n//     position: \"fixed\",\r\n//     // zIndex: \"1\",\r\n//     // [theme.breakpoints.down(\"xs\")]: {\r\n//     //   left: \"10px\",\r\n//     // },\r\n//   },\r\n//   accordionforBostonLimousineToDisplayIconOnTheLeft: {\r\n//     width: \"120px\",\r\n//     height: \"120px\",\r\n//     bottom: \"5px\",\r\n//     marginLeft: userScreenWidth - 137,\r\n//     // marginLeft: -30,\r\n//     marginBottom: -10,\r\n//     background: \"none\",\r\n//     // padding: theme.spacing(1),\r\n//     position: \"fixed\",\r\n//     // zIndex: \"1\",\r\n//     [theme.breakpoints.down(\"xs\")]: {\r\n//       left: \"10px\",\r\n//     },\r\n//   },\r\n//   content: {\r\n//     position: \"sticky\",\r\n//     cursor: \"default\",\r\n//     height: \"80vh\",\r\n//     width: \"356px\",\r\n//     backgroundColor: backgroundColorOnScroll,\r\n//     border: \"1px solid #AC8159\",\r\n//     // borderTopRightRadius: '30px',\r\n//     // borderTopLeftRadius: '30px',\r\n//     // borderBottomRight: '0px',\r\n//     // borderBottomLeft: '0px',\r\n\r\n//     // bottom: \"-1px\",\r\n//     overflowY: \"scroll\",\r\n//     \"&::-webkit-scrollbar\": {\r\n//       width: \"0.15em\",\r\n//       top: \"100px\",\r\n//       borderRadius: \"3px\",\r\n//       backgroundColor: \"transparent\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-track\": {\r\n//       marginTop: \"84px\",\r\n//       // marginBottom: \"300px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-thumb\": {\r\n//       backgroundColor: \"#c7c7c7\",\r\n//       // borderRadius: \"40px\",\r\n//       borderRadius: \"2px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-thumb:hover\": {\r\n//       background: \"#bfaf82\",\r\n//     },\r\n//     // [theme.breakpoints.down(\"xs\")]: {\r\n//     //   width: userScreenWidth,\r\n//     //   height: userScreenHeight,\r\n//     // },\r\n//     // left: '-20px',\r\n//   },\r\n//   contentIpad: {\r\n//     position: \"absolute\",\r\n//     cursor: \"default\",\r\n//     height: \"67vh\",\r\n//     width: \"356px\",\r\n//     border: \"1px solid #AC8159\",\r\n//     backgroundColor: backgroundColorOnScroll,\r\n//     // borderTopRightRadius: '30px',\r\n//     // borderTopLeftRadius: '30px',\r\n//     // borderBottomRight: '0px',\r\n//     // borderBottomLeft: '0px',\r\n//     left: 10,\r\n//     bottom: \"16px\",\r\n//     overflowY: \"scroll\",\r\n//     \"&::-webkit-scrollbar\": {\r\n//       width: \"0.20em\",\r\n//       top: \"100px\",\r\n//       backgroundColor: \"transparent\",\r\n//       borderRadius: \"3px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-track\": {\r\n//       marginTop: \"83px\",\r\n//       // marginBottom: \"300px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-thumb\": {\r\n//       backgroundColor: \"grey\",\r\n//       borderRadius: \"2px\",\r\n//       // borderRadius: \"40px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-thumb:hover\": {\r\n//       background: \"#c5cde3\",\r\n//     },\r\n//     [theme.breakpoints.down(\"xs\")]: {\r\n//       width: userScreenWidth,\r\n//       height: userScreenHeight,\r\n//     },\r\n//   },\r\n//   checkOut: {\r\n//     overflowY: \"scroll\",\r\n//     backgroundColor: backgroundColorOnScroll,\r\n//     \"&::-webkit-scrollbar\": {\r\n//       width: \"0.20em\",\r\n//       top: \"100px\",\r\n//       backgroundColor: \"transparent\",\r\n//       borderRadius: \"3px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-track\": {\r\n//       marginTop: \"84px\",\r\n//       // marginBottom: \"300px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-thumb\": {\r\n//       backgroundColor: \"grey\",\r\n//       borderRadius: \"2px\",\r\n//       // borderRadius: \"20px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-thumb:hover\": {\r\n//       background: \"#c5cde3\",\r\n//     },\r\n//   },\r\n//   contentMobile: {\r\n//     position: \"fixed\",\r\n//     cursor: \"default\",\r\n//     width: \"100vh\",\r\n//     height: \"100vh\",\r\n//     backgroundColor: backgroundColorOnScroll,\r\n//     // borderTopRightRadius: '30px',\r\n//     // borderTopLeftRadius: '30px',\r\n//     // borderBottomRight: '0px',\r\n//     // borderBottomLeft: '0px',\r\n//     bottom: \"1px\",\r\n//     overflowY: \"scroll\",\r\n\r\n//     \"&::-webkit-scrollbar\": {\r\n//       width: \"0.20em\",\r\n//       top: \"100px\",\r\n//       backgroundColor: \"transparent\",\r\n//       borderRadius: \"3px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-track\": {\r\n//       marginTop: \"83px\",\r\n//       // marginBottom: \"300px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-thumb\": {\r\n//       backgroundColor: \"grey\",\r\n//       borderRadius: \"2px\",\r\n//       // borderRadius: \"40px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-thumb:hover\": {\r\n//       background: \"#c5cde3\",\r\n//     },\r\n//     [theme.breakpoints.down(\"xs\")]: {\r\n//       width: userScreenWidth,\r\n//       height: userScreenHeight,\r\n//     },\r\n//     // left: '-20px',\r\n//   },\r\n//   contentMobileWithoutScroll: {\r\n//     position: \"fixed\",\r\n//     cursor: \"default\",\r\n//     height: \"100%\",\r\n//     width: \"100%\",\r\n//     // borderTopRightRadius: '30px',\r\n//     // borderTopLeftRadius: '30px',\r\n//     // borderBottomRight: '0px',\r\n//     // borderBottomLeft: '0px',\r\n//     bottom: \"1px\",\r\n//     overflowY: \"none\",\r\n//     // left: '-20px',\r\n//   },\r\n//   companyProfile: {\r\n//     cursor: \"move\",\r\n//     // position: 'sticky',\r\n//   },\r\n//   closeIcon: {\r\n//     textAlign: \"center\",\r\n//     verticalAlign: \"sub\",\r\n//     width: \"28px\",\r\n//     height: \"28px\",\r\n//     paddingTop: \"7px\",\r\n//     cursor: \"pointer\",\r\n//   },\r\n// }))\r\n\r\nexport { userScreenWidth, userScreenHeight }\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\assets\\icons.js",["235","236","237"],"import * as React from \"react\"\r\nimport { useState } from \"react\"\r\nimport Draggable from \"react-draggable\"\r\nimport \"./iconsStyle.css\"\r\n\r\nconst leftIconsColor = \"white\"\r\n\r\nconst iconsForInputs = {\r\n  position: \"absolute\",\r\n  zIndex: \"2\",\r\n  left: \"8px\",\r\n  top: \"6px\",\r\n}\r\n\r\nconst iconsForCounters = { marginLeft: \"7px\", marginRight: \"8px\" }\r\n\r\nexport const LocationIcon = () => (\r\n  <svg\r\n    width=\"12\"\r\n    height=\"14\"\r\n    viewBox=\"0 0 16 21\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M8.00001 0C3.58174 0 0 3.54412 0 7.91602C0 9.37809 0.289214 10.8882 1.11917 11.9766L8.00001 21L14.8808 11.9766C15.6347 10.988 16 9.24033 16 7.91602C16 3.54412 12.4183 0 8.00001 0ZM8.00001 4.58477C9.85906 4.58477 11.3666 6.07649 11.3666 7.916C11.3666 9.75555 9.85906 11.2473 8.00001 11.2473C6.14096 11.2473 4.63343 9.75555 4.63343 7.91602C4.63343 6.07649 6.14096 4.58477 8.00001 4.58477Z\"\r\n      fill=\"black\"\r\n    />\r\n  </svg>\r\n)\r\nexport const LuggageIcon = (color) => (\r\n  // <svg\r\n  //   width=\"22\"\r\n  //   height=\"22\"\r\n  //   viewBox=\"0 0 24 24\"\r\n  //   fill=\"transparent\"\r\n  //   xmlns=\"http://www.w3.org/2000/svg\"\r\n  //   style={{ marginLeft: \"15px\", marginRight: \"10px\" }}\r\n  // >\r\n  //   <path\r\n  //     d=\"M20 7H4C2.89543 7 2 7.89543 2 9V19C2 20.1046 2.89543 21 4 21H20C21.1046 21 22 20.1046 22 19V9C22 7.89543 21.1046 7 20 7Z\"\r\n  //     stroke={color.color}\r\n  //     strokeWidth=\"2\"\r\n  //     strokeLinecap=\"round\"\r\n  //     strokeLinejoin=\"round\"\r\n  //   />\r\n  //   <path\r\n  //     d=\"M16 21V5C16 4.46957 15.7893 3.96086 15.4142 3.58579C15.0391 3.21071 14.5304 3 14 3H10C9.46957 3 8.96086 3.21071 8.58579 3.58579C8.21071 3.96086 8 4.46957 8 5V21\"\r\n  //     stroke={color.color}\r\n  //     strokeWidth=\"2\"\r\n  //     strokeLinecap=\"round\"\r\n  //     strokeLinejoin=\"round\"\r\n  //   />\r\n  // </svg>\r\n\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={iconsForCounters}\r\n  >\r\n    <path\r\n      d=\"M20 7H4C2.89543 7 2 7.89543 2 9V19C2 20.1046 2.89543 21 4 21H20C21.1046 21 22 20.1046 22 19V9C22 7.89543 21.1046 7 20 7Z\"\r\n      stroke={color.color}\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M16 21V5C16 4.46957 15.7893 3.96086 15.4142 3.58579C15.0391 3.21071 14.5304 3 14 3H10C9.46957 3 8.96086 3.21071 8.58579 3.58579C8.21071 3.96086 8 4.46957 8 5V21\"\r\n      stroke={color.color}\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n  </svg>\r\n)\r\nexport const Success = () => (\r\n  <svg\r\n    width=\"54\"\r\n    height=\"54\"\r\n    viewBox=\"0 0 60 60\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <circle cx=\"30\" cy=\"30\" r=\"29.5\" stroke=\"#219653\" />\r\n    <path\r\n      d=\"M20 30L23.0775 26.7994L27.6923 31.6L36.9231 22L40 25.2L27.6923 38L20 30Z\"\r\n      fill=\"#219653\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const Ticket = (color) => (\r\n  // <svg\r\n  //   width=\"20\"\r\n  //   height=\"20\"\r\n  //   viewBox=\"0 0 20 20\"\r\n  //   fill=\"none\"\r\n  //   xmlns=\"http://www.w3.org/2000/svg\"\r\n  //   style={{ position: \"absolute\", zIndex: \"20\", left: \"12px\", top: \"10px\" }}\r\n  // >\r\n  //   {console.log(color)}\r\n  //   <path\r\n  //     fillRule=\"evenodd\"\r\n  //     clipRule=\"evenodd\"\r\n  //     d=\"M18.0156 11.8957L8.0198 1.89995C7.79447 1.67462 7.42914 1.67462 7.20382 1.89995C7.09504 2.00873 6.9575 2.265 6.93256 2.73516C6.89482 3.44651 6.73274 4.81897 5.77585 5.77585C4.81897 6.73274 3.44651 6.89482 2.73516 6.93256C2.265 6.9575 2.00873 7.09504 1.89995 7.20382C1.67462 7.42915 1.67462 7.79447 1.89995 8.0198L11.8957 18.0156C12.2337 18.3535 12.7817 18.3535 13.1197 18.0156L18.0156 13.1197C18.3535 12.7817 18.3535 12.2337 18.0156 11.8957ZM9.24377 0.67598L19.2395 10.6717C20.2535 11.6857 20.2535 13.3297 19.2395 14.3436L14.3436 19.2395C13.3297 20.2535 11.6857 20.2535 10.6717 19.2395L0.675979 9.24377C-0.225327 8.34246 -0.225326 6.88116 0.67598 5.97985C1.18965 5.46618 1.91805 5.24251 2.64347 5.20403C3.3009 5.16916 4.08482 5.01895 4.55188 4.55188C5.01895 4.08482 5.16916 3.3009 5.20403 2.64347C5.24251 1.91805 5.46618 1.18965 5.97985 0.67598C6.88116 -0.225327 8.34246 -0.225327 9.24377 0.67598Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  //   <path\r\n  //     d=\"M16.7916 10.6717L15.5676 9.44776L9.44776 15.5676L10.6717 16.7916L16.7916 10.6717Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  // </svg>\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={iconsForInputs}\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M20.0156 13.8957L10.0198 3.89995C9.79447 3.67462 9.42914 3.67462 9.20382 3.89995C9.09504 4.00873 8.9575 4.265 8.93256 4.73516C8.89482 5.44651 8.73274 6.81897 7.77585 7.77585C6.81897 8.73274 5.44651 8.89482 4.73516 8.93256C4.265 8.9575 4.00873 9.09504 3.89995 9.20382C3.67462 9.42915 3.67462 9.79447 3.89995 10.0198L13.8957 20.0156C14.2337 20.3535 14.7817 20.3535 15.1197 20.0156L20.0156 15.1197C20.3535 14.7817 20.3535 14.2337 20.0156 13.8957ZM11.2438 2.67598L21.2395 12.6717C22.2535 13.6857 22.2535 15.3297 21.2395 16.3436L16.3436 21.2395C15.3297 22.2535 13.6857 22.2535 12.6717 21.2395L2.67598 11.2438C1.77467 10.3425 1.77467 8.88116 2.67598 7.97985C3.18965 7.46618 3.91805 7.24251 4.64347 7.20403C5.3009 7.16916 6.08482 7.01895 6.55188 6.55188C7.01895 6.08482 7.16916 5.3009 7.20403 4.64347C7.24251 3.91805 7.46618 3.18965 7.97985 2.67598C8.88116 1.77467 10.3425 1.77467 11.2438 2.67598Z\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      d=\"M18.7916 12.6717L17.5676 11.4478L11.4478 17.5676L12.6717 18.7916L18.7916 12.6717Z\"\r\n      fill={color.color}\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const StartLocationIcon = (color) => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={iconsForInputs}\r\n  >\r\n    <path\r\n      d=\"M11.5 2C7.35788 2 4 5.37535 4 9.53907C4 10.9315 4.27114 12.3697 5.04922 13.4063L11.5 22L17.9508 13.4063C18.6575 12.4648 19 10.8003 19 9.53907C19 5.37535 15.6421 2 11.5 2ZM11.5 6.36645C13.2429 6.36645 14.6562 7.78713 14.6562 9.53905C14.6562 11.291 13.2429 12.7117 11.5 12.7117C9.75715 12.7117 8.34385 11.291 8.34385 9.53907C8.34385 7.78713 9.75715 6.36645 11.5 6.36645Z\"\r\n      fill={color.color}\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const BetweenLine = () => (\r\n  <svg\r\n    width=\"2\"\r\n    height=\"26\"\r\n    viewBox=\"0 0 2 26\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <line x1=\"1\" x2=\"1\" y2=\"26\" stroke=\"#422C88\" stroke-dasharray=\"4 4\" />\r\n  </svg>\r\n)\r\n\r\nexport const AddLocIcon = (color) => (\r\n  <svg\r\n    width=\"16\"\r\n    height=\"16\"\r\n    viewBox=\"0 0 16 16\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M8 0C7.44772 0 7 0.447715 7 1V7H1C0.447715 7 0 7.44772 0 8C0 8.55229 0.447715 9 1 9H7V15C7 15.5523 7.44772 16 8 16C8.55229 16 9 15.5523 9 15V9H15C15.5523 9 16 8.55229 16 8C16 7.44772 15.5523 7 15 7H9V1C9 0.447715 8.55229 0 8 0Z\"\r\n      fill={color.color}\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const DeleteLocIcon = (color) => (\r\n  <svg\r\n    width=\"16\"\r\n    height=\"2\"\r\n    viewBox=\"0 0 16 2\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M15 0H1C0.447715 0 0 0.447715 0 1C0 1.55229 0.447715 2 1 2H15C15.5523 2 16 1.55229 16 1C16 0.447715 15.5523 0 15 0Z\"\r\n      fill={color.color}\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const EndLocationIcon = (color) => (\r\n  // <svg\r\n  //   width=\"14\"\r\n  //   height=\"20\"\r\n  //   viewBox=\"0 0 14 20\"\r\n  //   fill=\"none\"\r\n  //   xmlns=\"http://www.w3.org/2000/svg\"\r\n  //   style={{ position: \"absolute\", zIndex: \"20\", left: \"12px\", top: \"10px\" }}\r\n  // >\r\n  //   <path\r\n  //     fillRule=\"evenodd\"\r\n  //     clipRule=\"evenodd\"\r\n  //     d=\"M7.43875 5L9.83875 2H2V8H9.83875L7.43875 5ZM14 10H2V20H0V0H14L10 5L14 10Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  // </svg>\r\n\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={iconsForInputs}\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M12.4388 7L14.8387 4H7V10H14.8387L12.4388 7ZM19 12H7V22H5V2H19L15 7L19 12Z\"\r\n      fill={color.color}\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const NumberOfPassengersIcon = (color) => (\r\n  // <svg\r\n  //   width=\"20\"\r\n  //   height=\"20\"\r\n  //   viewBox=\"0 0 20 20\"\r\n  //   fill=\"none\"\r\n  //   xmlns=\"http://www.w3.org/2000/svg\"\r\n  //   style={{ marginLeft: \"11px\", marginRight: \"8px\" }}\r\n  // >\r\n  //   <path\r\n  //     d=\"M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM5.07 16.28C5.5 15.38 8.12 14.5 10 14.5C11.88 14.5 14.51 15.38 14.93 16.28C13.57 17.36 11.86 18 10 18C8.14 18 6.43 17.36 5.07 16.28ZM16.36 14.83C14.93 13.09 11.46 12.5 10 12.5C8.54 12.5 5.07 13.09 3.64 14.83C2.57765 13.4438 2.00131 11.7464 2 10C2 5.59 5.59 2 10 2C14.41 2 18 5.59 18 10C18 11.82 17.38 13.49 16.36 14.83ZM10 4C8.06 4 6.5 5.56 6.5 7.5C6.5 9.44 8.06 11 10 11C11.94 11 13.5 9.44 13.5 7.5C13.5 5.56 11.94 4 10 4ZM10 9C9.17 9 8.5 8.33 8.5 7.5C8.5 6.67 9.17 6 10 6C10.83 6 11.5 6.67 11.5 7.5C11.5 8.33 10.83 9 10 9Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  // </svg>\r\n\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={iconsForCounters}\r\n  >\r\n    <path\r\n      d=\"M12.0001 2C6.48005 2 2 6.47998 2 12C2 17.5199 6.48005 21.9999 12.0001 21.9999C17.5202 21.9999 22.0002 17.5199 22.0002 12C22.0002 6.47998 17.5202 2 12.0001 2ZM7.07005 18.2799C7.50006 17.3799 10.1201 16.4999 12.0001 16.4999C13.8801 16.4999 16.5101 17.3799 16.9302 18.2799C15.5701 19.3599 13.8601 19.9999 12.0001 19.9999C10.1401 19.9999 8.43007 19.3599 7.07005 18.2799ZM18.3602 16.8299C16.9302 15.09 13.4601 14.5 12.0001 14.5C10.5401 14.5 7.07005 15.09 5.64004 16.8299C4.57768 15.4438 4.00133 13.7464 4.00002 12C4.00002 7.58998 7.59006 3.99999 12.0001 3.99999C16.4101 3.99999 20.0002 7.58998 20.0002 12C20.0002 13.82 19.3802 15.49 18.3602 16.8299ZM12.0001 5.99999C10.0601 5.99999 8.50007 7.55998 8.50007 9.49997C8.50007 11.44 10.0601 13 12.0001 13C13.9401 13 15.5001 11.44 15.5001 9.49997C15.5001 7.55998 13.9401 5.99999 12.0001 5.99999ZM12.0001 11C11.1701 11 10.5001 10.33 10.5001 9.49997C10.5001 8.66998 11.1701 7.99998 12.0001 7.99998C12.8301 7.99998 13.5001 8.66998 13.5001 9.49997C13.5001 10.33 12.8301 11 12.0001 11Z\"\r\n      fill={color.color}\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const HourlyIcon = (color) => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={iconsForCounters}\r\n  >\r\n    <path\r\n      d=\"M11.99 2C6.47 2 2 6.48 2 12C2 17.52 6.47 22 11.99 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 11.99 2ZM12 20C7.58 20 4 16.42 4 12C4 7.58 7.58 4 12 4C16.42 4 20 7.58 20 12C20 16.42 16.42 20 12 20Z\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      d=\"M12.5 7H11V13L16.25 16.15L17 14.92L12.5 12.25V7Z\"\r\n      fill={color.color}\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const DestinationIcon = () => (\r\n  <svg\r\n    width=\"12\"\r\n    height=\"14\"\r\n    viewBox=\"0 0 16 16\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <ellipse cx=\"7.86903\" cy=\"8\" rx=\"7.86903\" ry=\"8\" fill=\"white\" />\r\n    <ellipse cx=\"7.86883\" cy=\"8\" rx=\"4.91814\" ry=\"5\" fill=\"#0D0D15\" />\r\n  </svg>\r\n)\r\n\r\nexport const MinusIcon = (color) => (\r\n  <svg\r\n    width=\"35\"\r\n    height=\"35\"\r\n    viewBox=\"0 0 45 45\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={{\r\n      // borderTopLeftRadius: \"9px\",\r\n      // borderBottomLeftRadius: \"9px\",\r\n\r\n      boxShadow: \"4px 5px 30px rgba(0, 0, 0, 0.1)\",\r\n      cursor: \"pointer\",\r\n      // topLeftborderRadius: \"5px\",\r\n      // bottomLeftborderRadius: \"5px\",\r\n    }}\r\n    className=\"minusIcon\"\r\n  >\r\n    <rect width=\"45\" height=\"45\" fill=\"transparent\" />\r\n    <path\r\n      d=\"M31 23H17C16.4477 23 16 23.4477 16 24C16 24.5523 16.4477 25 17 25H31C31.5523 25 32 24.5523 32 24C32 23.4477 31.5523 23 31 23Z\"\r\n      fill={color.color}\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const PlusIcon = (color) => (\r\n  //const [plusIcon, plusIconset] = useState('#3F3D4A');\r\n\r\n  <svg\r\n    width=\"35\"\r\n    height=\"35\"\r\n    viewBox=\"0 0 45 45\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={{\r\n      boxShadow: \"4px 5px 30px rgba(0, 0, 0, 0.1)\",\r\n      boxShadow: \"0px 5px 30px rgba(0, 0, 0, 0.1)\",\r\n      cursor: \"pointer\",\r\n      // borderRadius: \"5px\",\r\n    }}\r\n    className=\"plusIcon\"\r\n  >\r\n    <rect width=\"45\" height=\"45\" fill=\"transparent\" />\r\n    <path\r\n      d=\"M24 16C23.4477 16 23 16.4477 23 17V23H17C16.4477 23 16 23.4477 16 24C16 24.5523 16.4477 25 17 25H23V31C23 31.5523 23.4477 32 24 32C24.5523 32 25 31.5523 25 31V25H31C31.5523 25 32 24.5523 32 24C32 23.4477 31.5523 23 31 23H25V17C25 16.4477 24.5523 16 24 16Z\"\r\n      fill={color.color}\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const ClockIcon = (color) => (\r\n  // <svg\r\n  //   width=\"18\"\r\n  //   height=\"18\"\r\n  //   viewBox=\"0 0 33 33\"\r\n  //   fill=\"none\"\r\n  //   xmlns=\"http://www.w3.org/2000/svg\"\r\n  //   style={{ position: \"absolute\", zIndex: \"20\", left: \"12px\", top: \"10px\" }}\r\n  // >\r\n  //   <path\r\n  //     d=\"M16.5 2.0625C8.52715 2.0625 2.0625 8.52715 2.0625 16.5C2.0625 24.4729 8.52715 30.9375 16.5 30.9375C24.4729 30.9375 30.9375 24.4729 30.9375 16.5C30.9375 8.52715 24.4729 2.0625 16.5 2.0625ZM16.5 28.4883C9.88066 28.4883 4.51172 23.1193 4.51172 16.5C4.51172 9.88066 9.88066 4.51172 16.5 4.51172C23.1193 4.51172 28.4883 9.88066 28.4883 16.5C28.4883 23.1193 23.1193 28.4883 16.5 28.4883Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  //   <path\r\n  //     d=\"M22.13 20.5799L17.5345 17.2573V9.28125C17.5345 9.13945 17.4185 9.02344 17.2767 9.02344H15.7266C15.5848 9.02344 15.4688 9.13945 15.4688 9.28125V18.1564C15.4688 18.2402 15.5074 18.3176 15.5751 18.3659L20.9054 22.2524C21.0214 22.3362 21.1825 22.3105 21.2663 22.1977L22.188 20.9408C22.2718 20.8216 22.246 20.6604 22.13 20.5799Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  // </svg>\r\n\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={iconsForInputs}\r\n  >\r\n    <path\r\n      d=\"M12 2C6.47768 2 2 6.47768 2 12C2 17.5223 6.47768 22 12 22C17.5223 22 22 17.5223 22 12C22 6.47768 17.5223 2 12 2ZM12 20.3036C7.41518 20.3036 3.69643 16.5848 3.69643 12C3.69643 7.41518 7.41518 3.69643 12 3.69643C16.5848 3.69643 20.3036 7.41518 20.3036 12C20.3036 16.5848 16.5848 20.3036 12 20.3036Z\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      d=\"M15.899 14.8267L12.716 12.5254V7.00084C12.716 6.90262 12.6356 6.82227 12.5374 6.82227H11.4637C11.3655 6.82227 11.2852 6.90262 11.2852 7.00084V13.1482C11.2852 13.2062 11.3119 13.2598 11.3588 13.2932L15.0508 15.9852C15.1311 16.0432 15.2427 16.0254 15.3008 15.9473L15.9392 15.0767C15.9972 14.9941 15.9794 14.8825 15.899 14.8267Z\"\r\n      fill={color.color}\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const ClockIconForPicker = (color) => (\r\n  // <svg\r\n  //   width=\"18\"\r\n  //   height=\"18\"\r\n  //   viewBox=\"0 0 33 33\"\r\n  //   fill=\"none\"\r\n  //   xmlns=\"http://www.w3.org/2000/svg\"\r\n  //   style={{ position: \"absolute\", zIndex: \"20\", left: \"12px\", top: \"10px\" }}\r\n  // >\r\n  //   <path\r\n  //     d=\"M16.5 2.0625C8.52715 2.0625 2.0625 8.52715 2.0625 16.5C2.0625 24.4729 8.52715 30.9375 16.5 30.9375C24.4729 30.9375 30.9375 24.4729 30.9375 16.5C30.9375 8.52715 24.4729 2.0625 16.5 2.0625ZM16.5 28.4883C9.88066 28.4883 4.51172 23.1193 4.51172 16.5C4.51172 9.88066 9.88066 4.51172 16.5 4.51172C23.1193 4.51172 28.4883 9.88066 28.4883 16.5C28.4883 23.1193 23.1193 28.4883 16.5 28.4883Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  //   <path\r\n  //     d=\"M22.13 20.5799L17.5345 17.2573V9.28125C17.5345 9.13945 17.4185 9.02344 17.2767 9.02344H15.7266C15.5848 9.02344 15.4688 9.13945 15.4688 9.28125V18.1564C15.4688 18.2402 15.5074 18.3176 15.5751 18.3659L20.9054 22.2524C21.0214 22.3362 21.1825 22.3105 21.2663 22.1977L22.188 20.9408C22.2718 20.8216 22.246 20.6604 22.13 20.5799Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  // </svg>\r\n\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={iconsForInputs}\r\n  >\r\n    <path\r\n      d=\"M12 2C6.47768 2 2 6.47768 2 12C2 17.5223 6.47768 22 12 22C17.5223 22 22 17.5223 22 12C22 6.47768 17.5223 2 12 2ZM12 20.3036C7.41518 20.3036 3.69643 16.5848 3.69643 12C3.69643 7.41518 7.41518 3.69643 12 3.69643C16.5848 3.69643 20.3036 7.41518 20.3036 12C20.3036 16.5848 16.5848 20.3036 12 20.3036Z\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      d=\"M15.899 14.8267L12.716 12.5254V7.00084C12.716 6.90262 12.6356 6.82227 12.5374 6.82227H11.4637C11.3655 6.82227 11.2852 6.90262 11.2852 7.00084V13.1482C11.2852 13.2062 11.3119 13.2598 11.3588 13.2932L15.0508 15.9852C15.1311 16.0432 15.2427 16.0254 15.3008 15.9473L15.9392 15.0767C15.9972 14.9941 15.9794 14.8825 15.899 14.8267Z\"\r\n      fill={color.color}\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const DateIcon = (color) => (\r\n  // <svg\r\n  //   width=\"18\"\r\n  //   height=\"18\"\r\n  //   viewBox=\"0 0 18 18\"\r\n  //   fill=\"none\"\r\n  //   xmlns=\"http://www.w3.org/2000/svg\"\r\n  //   style={{ position: \"absolute\", zIndex: \"20\", left: \"12px\", top: \"10px\" }}\r\n  // >\r\n  //   <path\r\n  //     d=\"M5 10C4.44772 10 4 9.55228 4 9C4 8.44771 4.44772 8 5 8C5.55228 8 6 8.44771 6 9C6 9.55228 5.55228 10 5 10Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  //   <path\r\n  //     d=\"M5 14C4.44772 14 4 13.5523 4 13C4 12.4477 4.44772 12 5 12C5.55228 12 6 12.4477 6 13C6 13.5523 5.55228 14 5 14Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  //   <path\r\n  //     d=\"M8 13C8 13.5523 8.44771 14 9 14C9.55228 14 10 13.5523 10 13C10 12.4477 9.55228 12 9 12C8.44771 12 8 12.4477 8 13Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  //   <path\r\n  //     d=\"M13 14C12.4477 14 12 13.5523 12 13C12 12.4477 12.4477 12 13 12C13.5523 12 14 12.4477 14 13C14 13.5523 13.5523 14 13 14Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  //   <path\r\n  //     d=\"M8 9C8 9.55228 8.44771 10 9 10C9.55228 10 10 9.55228 10 9C10 8.44771 9.55228 8 9 8C8.44771 8 8 8.44771 8 9Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  //   <path\r\n  //     d=\"M13 10C12.4477 10 12 9.55228 12 9C12 8.44771 12.4477 8 13 8C13.5523 8 14 8.44771 14 9C14 9.55228 13.5523 10 13 10Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  //   <path\r\n  //     d=\"M5 4C4.44772 4 4 4.44772 4 5C4 5.55228 4.44772 6 5 6H13C13.5523 6 14 5.55228 14 5C14 4.44772 13.5523 4 13 4H5Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  //   <path\r\n  //     fillRule=\"evenodd\"\r\n  //     clipRule=\"evenodd\"\r\n  //     d=\"M3 0C1.34315 0 0 1.34315 0 3V15C0 16.6569 1.34315 18 3 18H15C16.6569 18 18 16.6569 18 15V3C18 1.34315 16.6569 0 15 0H3ZM15 2H3C2.44772 2 2 2.44772 2 3V15C2 15.5523 2.44772 16 3 16H15C15.5523 16 16 15.5523 16 15V3C16 2.44772 15.5523 2 15 2Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  // </svg>\r\n\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={iconsForInputs}\r\n  >\r\n    <path\r\n      d=\"M8 13C7.44772 13 7 12.5523 7 12C7 11.4477 7.44772 11 8 11C8.55229 11 9 11.4477 9 12C9 12.5523 8.55229 13 8 13Z\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      d=\"M8 17C7.44772 17 7 16.5523 7 16C7 15.4477 7.44772 15 8 15C8.55229 15 9 15.4477 9 16C9 16.5523 8.55229 17 8 17Z\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      d=\"M11 16C11 16.5523 11.4477 17 12 17C12.5523 17 13 16.5523 13 16C13 15.4477 12.5523 15 12 15C11.4477 15 11 15.4477 11 16Z\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      d=\"M16 17C15.4477 17 15 16.5523 15 16C15 15.4477 15.4477 15 16 15C16.5523 15 17 15.4477 17 16C17 16.5523 16.5523 17 16 17Z\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      d=\"M11 12C11 12.5523 11.4477 13 12 13C12.5523 13 13 12.5523 13 12C13 11.4477 12.5523 11 12 11C11.4477 11 11 11.4477 11 12Z\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      d=\"M16 13C15.4477 13 15 12.5523 15 12C15 11.4477 15.4477 11 16 11C16.5523 11 17 11.4477 17 12C17 12.5523 16.5523 13 16 13Z\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      d=\"M8 7C7.44772 7 7 7.44772 7 8C7 8.55228 7.44772 9 8 9H16C16.5523 9 17 8.55228 17 8C17 7.44772 16.5523 7 16 7H8Z\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M6 3C4.34315 3 3 4.34315 3 6V18C3 19.6569 4.34315 21 6 21H18C19.6569 21 21 19.6569 21 18V6C21 4.34315 19.6569 3 18 3H6ZM18 5H6C5.44772 5 5 5.44772 5 6V18C5 18.5523 5.44772 19 6 19H18C18.5523 19 19 18.5523 19 18V6C19 5.44772 18.5523 5 18 5Z\"\r\n      fill={color.color}\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const RightArrowForAdressForm = () => (\r\n  <svg\r\n    width=\"6\"\r\n    height=\"10\"\r\n    viewBox=\"0 0 6 10\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      className=\"RightArrowForAdressForm\"\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M1.23143 9.79642L5.85392 5.33942C6.04869 5.1518 6.04869 4.84869 5.85392 4.66058L1.23143 0.203577C0.950267 -0.0678594 0.492813 -0.0678595 0.211148 0.203576C-0.0700169 0.475012 -0.0700169 0.915547 0.211148 1.18698L4.16544 5.00024L0.211147 8.81253C-0.0700177 9.08445 -0.0700177 9.52499 0.211147 9.79642C0.492812 10.0679 0.950266 10.0679 1.23143 9.79642Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const LeftArrowForAdressForm = () => (\r\n  <svg\r\n    width=\"6\"\r\n    height=\"11\"\r\n    viewBox=\"0 0 6 11\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M4.76857 0.838343L0.146076 5.29535C-0.048692 5.48297 -0.048692 5.78608 0.146076 5.97418L4.76857 10.4312C5.04973 10.7026 5.50719 10.7026 5.78885 10.4312C6.07002 10.1598 6.07002 9.71922 5.78885 9.44778L1.83456 5.63452L5.78885 1.82224C6.07002 1.55031 6.07002 1.10978 5.78885 0.838343C5.50719 0.566907 5.04973 0.566907 4.76857 0.838343Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const PlaneIcon = (color) => (\r\n  // <svg\r\n  //   width=\"18\"\r\n  //   height=\"20\"\r\n  //   viewBox=\"0 0 18 20\"\r\n  //   fill=\"none\"\r\n  //   xmlns=\"http://www.w3.org/2000/svg\"\r\n  //   style={{ position: \"absolute\", zIndex: \"20\", left: \"12px\", top: \"10px\" }}\r\n  // >\r\n  //   {/* {console.log(color)} */}\r\n  //   <path\r\n  //     d=\"M7.5 3.22677C7.5 3.37855 7.50469 3.88703 7.51406 4.03033L7.59375 6.92764C7.59472 6.9427 7.59129 6.95772 7.58384 6.97104C7.5764 6.98435 7.56522 6.99545 7.55156 7.00308L0.166875 12.7879C0.118105 12.823 0.0779231 12.8677 0.0491098 12.9191C0.0202965 12.9704 0.00354003 13.0271 0 13.0852L0 14.2856L7.54687 11.0267C7.56415 11.0189 7.58325 11.0156 7.6023 11.017C7.62135 11.0184 7.6397 11.0244 7.65554 11.0346C7.67138 11.0448 7.68416 11.0587 7.69264 11.075C7.70112 11.0913 7.70501 11.1094 7.70391 11.1276L7.78828 16.5602C7.79008 16.6167 7.77786 16.6728 7.75261 16.724C7.72736 16.7752 7.6898 16.82 7.64297 16.8548L5.53359 18.5066C5.35078 18.6405 5.25234 18.8914 5.25234 19.1097V19.9517C5.25234 20.0093 5.30906 20.0008 5.36625 19.9852L8.71406 19.0994C8.89335 19.0325 9.09258 19.0325 9.27187 19.0994L12.6094 19.986C12.7008 20.0124 12.75 20.0093 12.75 19.907V19.107C12.75 18.7436 12.7003 18.6941 12.4547 18.5084L10.3125 16.8254C10.266 16.7903 10.2287 16.7454 10.2035 16.6943C10.1783 16.6432 10.1659 16.5872 10.1672 16.5307L10.2937 11.1432C10.2942 11.1236 10.2997 11.1044 10.3097 11.0873C10.3198 11.0701 10.334 11.0556 10.3513 11.0449C10.3686 11.0342 10.3884 11.0277 10.4089 11.0259C10.4294 11.0242 10.4501 11.0272 10.4691 11.0348L18 14.2856V13.0964C17.9964 13.0384 17.9797 12.9818 17.951 12.9305C17.9223 12.8793 17.8822 12.8346 17.8336 12.7995L10.4531 7.00264C10.425 6.98523 10.4109 6.91335 10.4109 6.88255L10.4906 4.02989C10.5 3.88257 10.5047 3.37855 10.5047 3.22632C10.5047 1.24999 9.93422 0 9 0C8.06578 0 7.5 1.24464 7.5 3.22677Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  // </svg>\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={iconsForInputs}\r\n  >\r\n    <path\r\n      d=\"M10.5 5.22677C10.5 5.37855 10.5047 5.88703 10.5141 6.03033L10.5937 8.92764C10.5947 8.9427 10.5913 8.95772 10.5838 8.97104C10.5764 8.98435 10.5652 8.99545 10.5516 9.00308L3.16687 14.7879C3.11811 14.823 3.07792 14.8677 3.04911 14.9191C3.0203 14.9704 3.00354 15.0271 3 15.0852V16.2856L10.5469 13.0267C10.5641 13.0189 10.5833 13.0156 10.6023 13.017C10.6214 13.0184 10.6397 13.0244 10.6555 13.0346C10.6714 13.0448 10.6842 13.0587 10.6926 13.075C10.7011 13.0913 10.705 13.1094 10.7039 13.1276L10.7883 18.5602C10.7901 18.6167 10.7779 18.6728 10.7526 18.724C10.7274 18.7752 10.6898 18.82 10.643 18.8548L8.53359 20.5066C8.35078 20.6405 8.25234 20.8914 8.25234 21.1097V21.9517C8.25234 22.0093 8.30906 22.0008 8.36625 21.9852L11.7141 21.0994C11.8934 21.0325 12.0926 21.0325 12.2719 21.0994L15.6094 21.986C15.7008 22.0124 15.75 22.0093 15.75 21.907V21.107C15.75 20.7436 15.7003 20.6941 15.4547 20.5084L13.3125 18.8254C13.266 18.7903 13.2287 18.7454 13.2035 18.6943C13.1783 18.6432 13.1659 18.5872 13.1672 18.5307L13.2937 13.1432C13.2942 13.1236 13.2997 13.1044 13.3097 13.0873C13.3198 13.0701 13.334 13.0556 13.3513 13.0449C13.3686 13.0342 13.3884 13.0277 13.4089 13.0259C13.4294 13.0242 13.4501 13.0272 13.4691 13.0348L21 16.2856V15.0964C20.9964 15.0384 20.9797 14.9818 20.951 14.9305C20.9223 14.8793 20.8822 14.8346 20.8336 14.7995L13.4531 9.00264C13.425 8.98523 13.4109 8.91335 13.4109 8.88255L13.4906 6.02989C13.5 5.88257 13.5047 5.37855 13.5047 5.22632C13.5047 3.24999 12.9342 2 12 2C11.0658 2 10.5 3.24464 10.5 5.22677Z\"\r\n      fill={color.color}\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const BookNowIcon = (color) => (\r\n  <svg\r\n    width=\"45\"\r\n    height=\"45\"\r\n    viewBox=\"0 0 17 19\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={{\r\n      // marginTop: \"10px\",\r\n      // marginBottom: \"25px\",\r\n      // marginLeft: \"-3px\",\r\n      // marginRight: \"-3px\",\r\n      // backgroundSize: \"100%\",\r\n      marginTop: \"12%\",\r\n      marginLeft: \"30%\",\r\n    }}\r\n  >\r\n    <path\r\n      d=\"M3.24276 0.99707H8.97013C8.99302 1.00269 9.01558 1.01083 9.03888 1.01354C10.5292 1.19074 11.7601 1.85636 12.7021 2.99412C13.6069 4.08677 14.0264 5.35695 13.9307 6.77661C13.9254 6.85381 13.9419 6.90738 14.0008 6.96109C14.154 7.10079 14.3064 7.24227 14.4481 7.39302C15.0987 8.08509 15.5877 8.87275 15.8924 9.77013C16.0648 10.2779 16.1628 10.8004 16.2364 11.3287V12.5079C16.215 12.6699 16.1977 12.8324 16.1717 12.9936C16.0408 13.8058 15.7642 14.5679 15.3585 15.2857C14.8192 16.2394 14.0812 17.0149 13.17 17.6293C12.2856 18.2255 11.3063 18.5869 10.2477 18.7441C9.80526 18.8099 9.36151 18.8559 8.91629 18.7898C7.81741 18.6269 7.08547 17.9744 6.58621 17.0422C6.26954 16.4509 6.19207 15.7961 6.17294 15.1378C6.15542 14.5346 6.15515 13.9309 6.1528 13.3275C6.14269 10.3377 6.14649 7.34797 6.16421 4.35822C6.16549 4.17639 6.16139 3.99125 6.1287 3.81319C5.89387 2.53388 4.78103 1.6519 3.44013 1.75813C2.77398 1.81065 2.22115 2.09508 1.76297 2.56133C1.27411 3.0596 1.08809 3.6721 1.08863 4.35505C1.09122 7.89693 1.09167 11.4388 1.08997 14.9806C1.08997 15.3502 1.0944 15.7204 1.14428 16.0868C1.25485 16.8984 1.59064 17.6082 2.15979 18.208C2.36313 18.4224 2.58319 18.616 2.86823 18.73C2.83755 18.7468 2.81453 18.7521 2.79231 18.7498C2.74992 18.7459 2.70789 18.7388 2.66657 18.7287C2.14025 18.5912 1.71168 18.2931 1.34326 17.9126C0.64972 17.1963 0.318289 16.3449 0.32131 15.3458C0.332856 11.5935 0.325606 7.84095 0.326546 4.08855C0.326546 3.97194 0.327419 3.85327 0.347961 3.73904C0.545262 2.64057 1.15549 1.84439 2.16261 1.33739C2.50478 1.16508 2.86924 1.06897 3.24276 0.99707ZM5.80251 1.76283C5.90179 1.85841 6.0131 1.92892 6.07204 2.02926C6.25142 2.33459 6.51424 2.38294 6.84903 2.37606C7.55969 2.36151 8.27337 2.32863 8.98195 2.42071C9.99564 2.5524 10.8415 3.01429 11.5061 3.76537C12.2931 4.65555 12.6282 5.70738 12.484 6.88622C12.3302 8.14224 11.6732 9.08223 10.5707 9.71814C9.89978 10.1052 9.16529 10.2706 8.39058 10.2706C7.95375 10.2706 7.51692 10.2728 7.08016 10.2695C6.97154 10.2687 6.92193 10.3051 6.92811 10.4162C6.93382 10.5188 6.93617 10.6225 6.92751 10.7247C6.91616 10.8591 6.96819 10.9066 7.10601 10.9049C7.5807 10.899 8.05566 10.8961 8.53028 10.9042C9.35023 10.9181 10.1126 10.6961 10.8185 10.3136C12.4162 9.44788 13.3811 7.76403 13.1184 5.84516C12.87 4.02796 11.839 2.77703 10.1302 2.06564C9.59936 1.84465 9.04196 1.74603 8.46503 1.74649C7.59634 1.74722 6.72759 1.74239 5.8589 1.74041C5.85051 1.74054 5.84191 1.74702 5.80251 1.76283ZM7.77948 17.3995C8.05472 17.6839 8.36903 17.8734 8.73947 17.9718C9.16992 18.0859 9.60473 18.0611 10.0391 18.0037C11.09 17.8648 12.0432 17.4834 12.9039 16.8752C13.8215 16.2269 14.4909 15.3796 14.9503 14.3692C15.3102 13.5774 15.4862 12.744 15.4806 11.8766C15.4744 10.9587 15.2516 10.0892 14.8361 9.26962C14.581 8.76671 14.253 8.30307 13.8623 7.89327C13.7842 7.81112 13.7496 7.81654 13.7177 7.92714C13.679 8.06181 13.6364 8.19734 13.5762 8.32361C13.5043 8.47429 13.5329 8.58389 13.638 8.71459C14.6181 9.93391 14.9439 11.331 14.6876 12.8443C14.4274 14.3812 13.6104 15.5931 12.2971 16.468C11.523 16.9839 10.6645 17.2731 9.73262 17.3495C9.14011 17.3981 8.54653 17.3655 7.95362 17.3763C7.90253 17.3769 7.8497 17.3639 7.77968 17.3992L7.77948 17.3995ZM7.81888 3.13897C7.48591 3.13897 7.19624 3.14288 6.90683 3.13712C6.7823 3.13468 6.75988 3.17932 6.79405 3.28859C6.82941 3.40003 6.85634 3.51389 6.87461 3.62924C6.89347 3.75154 6.9459 3.80168 7.07963 3.79943C7.53518 3.79176 7.99101 3.79474 8.44664 3.79712C9.02176 3.80016 9.54122 3.98312 9.99685 4.31754C10.7066 4.83784 11.0624 5.55201 11.0624 6.4189C11.0618 7.378 10.605 8.08648 9.7539 8.54493C9.32331 8.77684 8.85252 8.85581 8.36682 8.85826C7.94912 8.86058 7.53136 8.85826 7.11366 8.85932C6.94046 8.85985 6.93066 8.87136 6.92972 9.04525C6.92918 9.14348 6.93529 9.2421 6.92824 9.3398C6.91925 9.46408 6.97524 9.50377 7.09554 9.50258C7.60339 9.49762 8.11131 9.49775 8.61943 9.49729C8.80539 9.49729 8.98866 9.47288 9.16992 9.43584C10.8488 9.09294 11.8898 7.708 11.7232 6.04055C11.5907 4.71613 10.5081 3.52797 9.16468 3.2202C8.70402 3.11483 8.2394 3.14605 7.81888 3.13864V3.13897ZM8.29599 15.9933C7.95409 15.9933 7.61219 15.9946 7.27035 15.9926C7.15804 15.9919 7.11004 16.0286 7.14777 16.1454C7.18237 16.2522 7.2115 16.3607 7.23504 16.4705C7.25994 16.5872 7.32446 16.627 7.44563 16.6259C7.99611 16.6206 8.54747 16.6325 9.09802 16.6206C9.51954 16.6113 9.94073 16.5834 10.3543 16.4849C11.3617 16.2451 12.2071 15.736 12.8696 14.9589C13.6856 14.002 14.0591 12.8894 13.981 11.6338C13.9287 10.7934 13.6443 10.0384 13.1566 9.35183C13.1001 9.27246 13.0687 9.29316 13.024 9.35713C12.9539 9.4572 12.8893 9.56376 12.8039 9.64982C12.7012 9.75333 12.7089 9.83324 12.7846 9.95276C13.3076 10.7796 13.4583 11.6801 13.2924 12.633C13.139 13.5152 12.7218 14.2659 12.0632 14.8779C11.4316 15.4647 10.6826 15.8273 9.81734 15.9446C9.31183 16.013 8.80338 15.987 8.29599 15.993V15.9933ZM8.29076 14.5656C7.84849 14.5656 7.47846 14.5652 7.10816 14.5656C7.03673 14.5656 6.95738 14.5572 6.96651 14.6692C6.97638 14.7902 6.98437 14.9115 6.98954 15.033C6.99524 15.1676 7.04727 15.2262 7.19973 15.2243C7.87353 15.2158 8.54754 15.2231 9.22147 15.2189C9.39642 15.2178 9.57372 15.2102 9.74571 15.181C10.8678 14.9903 11.7119 14.4083 12.2168 13.3978C12.7012 12.4282 12.7173 11.448 12.1952 10.4768C12.1357 10.366 12.0889 10.3739 12.006 10.4443C11.9128 10.5237 11.8154 10.5996 11.7119 10.6651C11.6165 10.7254 11.6026 10.785 11.6562 10.8839C11.8414 11.2254 11.9137 11.5962 11.9104 11.9795C11.8996 13.2203 10.9655 14.2972 9.72436 14.5125C9.22436 14.599 8.7206 14.5488 8.29076 14.5652V14.5656ZM7.87984 8.09369C8.12917 8.08192 8.43704 8.10461 8.74531 8.06889C9.76739 7.95042 10.4038 7.07546 10.2834 6.20823C10.1774 5.44459 9.5611 4.73036 8.78398 4.60706C8.20543 4.51519 7.61876 4.5806 7.03579 4.56936C6.95711 4.56784 6.92918 4.61606 6.92959 4.68842C6.93046 4.83334 6.93234 4.9784 6.92865 5.12326C6.92616 5.21956 6.96812 5.25813 7.06472 5.25647C7.24974 5.25336 7.43496 5.25217 7.61997 5.25647C7.97524 5.26507 8.33204 5.2273 8.68563 5.28663C9.16435 5.36693 9.54572 5.74879 9.60191 6.20201C9.66347 6.69856 9.40052 7.15053 8.93133 7.33931C8.74041 7.41617 8.53626 7.43509 8.33083 7.43522C7.9179 7.43555 7.50511 7.43912 7.09205 7.43409C6.96772 7.43257 6.92005 7.47603 6.92777 7.5978C6.93452 7.71456 6.93466 7.8316 6.92818 7.94837C6.92274 8.05983 6.97329 8.09687 7.08097 8.09515C7.32775 8.09065 7.57459 8.09336 7.87984 8.09336V8.09369ZM8.24068 13.7941C8.56351 13.7941 8.88635 13.7953 9.20919 13.7941C10.0622 13.7902 10.6525 13.3825 10.9887 12.6268C11.1874 12.1805 11.1767 11.7174 10.9866 11.2616C10.9414 11.1532 10.8852 11.1333 10.7799 11.1858C10.6781 11.2362 10.5719 11.2773 10.4625 11.3086C10.3371 11.3448 10.3026 11.3831 10.3654 11.5214C10.6982 12.2535 10.3839 13.0249 9.47671 13.1411C9.066 13.1936 8.65166 13.1562 8.23906 13.1618C7.85453 13.167 7.46993 13.1659 7.0854 13.1613C6.96819 13.16 6.92073 13.2017 6.92804 13.3175C6.93529 13.4202 6.93529 13.5233 6.92804 13.6261C6.9177 13.7563 6.97262 13.798 7.10158 13.7964C7.48101 13.7902 7.86091 13.7938 8.24068 13.7937V13.7941ZM8.21785 11.6754V11.688C7.84775 11.688 7.47765 11.6901 7.10762 11.6869C6.97557 11.6858 6.91683 11.7344 6.92737 11.8704C6.9366 11.9917 6.9366 12.1135 6.92737 12.2348C6.91737 12.3681 6.96456 12.4161 7.10447 12.4149C7.75934 12.4091 8.41435 12.4138 9.06929 12.411C9.21597 12.4104 9.36426 12.4026 9.50564 12.3571C9.66582 12.3056 9.73087 12.2 9.71436 12.0349C9.68891 11.7799 9.58305 11.6819 9.30022 11.677C8.93939 11.6703 8.57855 11.6751 8.21785 11.6751V11.6754ZM7.76948 6.68553C7.98235 6.6723 8.24397 6.70921 8.50336 6.66569C8.72812 6.62772 8.83231 6.51567 8.82137 6.3261C8.8115 6.15518 8.68314 6.03401 8.47027 6.0301C8.00068 6.0215 7.53089 6.02673 7.06117 6.02481C6.96322 6.02441 6.92623 6.07052 6.92871 6.16372C6.93214 6.28985 6.93402 6.41639 6.92811 6.54233C6.92287 6.65478 6.97389 6.68977 7.08151 6.68732C7.29492 6.68223 7.50853 6.68553 7.76948 6.68553Z\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      d=\"M4.37238 18.734C4.24 18.7656 4.1246 18.7189 4.01121 18.6757C3.23194 18.3788 2.67729 17.8338 2.27007 17.1305C1.97731 16.6249 1.83123 16.0836 1.83203 15.4967C1.837 11.735 1.83799 7.97338 1.83499 4.21177C1.83499 3.34924 2.43347 2.6227 3.28981 2.43783C4.34942 2.2089 5.41669 3.00733 5.47603 4.06836C5.48724 4.26951 5.4902 4.47026 5.4902 4.67134C5.49051 8.22248 5.49022 11.7736 5.48932 15.3246C5.48932 15.8713 5.5396 16.4087 5.7402 16.9228C5.98858 17.5587 6.35069 18.1156 6.91212 18.5301C6.96546 18.5692 7.02076 18.6056 7.0778 18.6392C7.13017 18.6703 7.18562 18.6964 7.25664 18.7337C7.1836 18.7659 7.12768 18.7465 7.07095 18.7326C6.53061 18.6003 6.09882 18.2901 5.72476 17.9026C5.05149 17.2053 4.70777 16.3781 4.70979 15.4043C4.7169 11.6895 4.71773 7.97466 4.71227 4.25979C4.71227 3.70556 4.38278 3.29487 3.85701 3.18685C3.24678 3.06118 2.64138 3.52684 2.62144 4.13788C2.61607 4.30144 2.61327 4.46512 2.61305 4.62894C2.61256 8.13802 2.61256 11.647 2.61305 15.156C2.61305 15.6144 2.61688 16.0721 2.73671 16.5211C2.9324 17.2545 3.29833 17.8866 3.86674 18.4018C4.01725 18.5384 4.19085 18.64 4.37238 18.734Z\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      d=\"M5.86201 18.7317C5.75547 18.7616 5.69283 18.7495 5.62919 18.7334C5.19001 18.6223 4.81958 18.3874 4.48889 18.0939C3.85932 17.5349 3.44203 16.8529 3.30662 16.0197C3.27986 15.8487 3.26684 15.6759 3.26769 15.5029C3.26554 11.7836 3.26507 8.06435 3.26628 4.34502C3.26628 4.21868 3.26198 4.0901 3.34361 3.98122C3.438 3.85555 3.61704 3.79086 3.75983 3.82764C3.90262 3.86441 4.02413 4.00623 4.04239 4.16537C4.05038 4.23476 4.04722 4.30553 4.04722 4.37565C4.04794 8.10899 4.04935 11.8423 4.05145 15.5756C4.05307 16.5173 4.38342 17.3549 4.98311 18.0817C5.20861 18.3551 5.47667 18.5965 5.86201 18.7317Z\"\r\n      fill={color.color}\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const BookNowIconForMobile = (color) => (\r\n  <svg\r\n    width=\"38\"\r\n    height=\"38\"\r\n    viewBox=\"0 0 17 19\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={{\r\n      // marginTop: \"10px\",\r\n      // marginBottom: \"25px\",\r\n      // marginLeft: \"-3px\",\r\n      // marginRight: \"-3px\",\r\n      // backgroundSize: \"100%\",\r\n      marginTop: \"12%\",\r\n      marginLeft: \"30%\",\r\n    }}\r\n  >\r\n    <path\r\n      d=\"M3.24276 0.99707H8.97013C8.99302 1.00269 9.01558 1.01083 9.03888 1.01354C10.5292 1.19074 11.7601 1.85636 12.7021 2.99412C13.6069 4.08677 14.0264 5.35695 13.9307 6.77661C13.9254 6.85381 13.9419 6.90738 14.0008 6.96109C14.154 7.10079 14.3064 7.24227 14.4481 7.39302C15.0987 8.08509 15.5877 8.87275 15.8924 9.77013C16.0648 10.2779 16.1628 10.8004 16.2364 11.3287V12.5079C16.215 12.6699 16.1977 12.8324 16.1717 12.9936C16.0408 13.8058 15.7642 14.5679 15.3585 15.2857C14.8192 16.2394 14.0812 17.0149 13.17 17.6293C12.2856 18.2255 11.3063 18.5869 10.2477 18.7441C9.80526 18.8099 9.36151 18.8559 8.91629 18.7898C7.81741 18.6269 7.08547 17.9744 6.58621 17.0422C6.26954 16.4509 6.19207 15.7961 6.17294 15.1378C6.15542 14.5346 6.15515 13.9309 6.1528 13.3275C6.14269 10.3377 6.14649 7.34797 6.16421 4.35822C6.16549 4.17639 6.16139 3.99125 6.1287 3.81319C5.89387 2.53388 4.78103 1.6519 3.44013 1.75813C2.77398 1.81065 2.22115 2.09508 1.76297 2.56133C1.27411 3.0596 1.08809 3.6721 1.08863 4.35505C1.09122 7.89693 1.09167 11.4388 1.08997 14.9806C1.08997 15.3502 1.0944 15.7204 1.14428 16.0868C1.25485 16.8984 1.59064 17.6082 2.15979 18.208C2.36313 18.4224 2.58319 18.616 2.86823 18.73C2.83755 18.7468 2.81453 18.7521 2.79231 18.7498C2.74992 18.7459 2.70789 18.7388 2.66657 18.7287C2.14025 18.5912 1.71168 18.2931 1.34326 17.9126C0.64972 17.1963 0.318289 16.3449 0.32131 15.3458C0.332856 11.5935 0.325606 7.84095 0.326546 4.08855C0.326546 3.97194 0.327419 3.85327 0.347961 3.73904C0.545262 2.64057 1.15549 1.84439 2.16261 1.33739C2.50478 1.16508 2.86924 1.06897 3.24276 0.99707ZM5.80251 1.76283C5.90179 1.85841 6.0131 1.92892 6.07204 2.02926C6.25142 2.33459 6.51424 2.38294 6.84903 2.37606C7.55969 2.36151 8.27337 2.32863 8.98195 2.42071C9.99564 2.5524 10.8415 3.01429 11.5061 3.76537C12.2931 4.65555 12.6282 5.70738 12.484 6.88622C12.3302 8.14224 11.6732 9.08223 10.5707 9.71814C9.89978 10.1052 9.16529 10.2706 8.39058 10.2706C7.95375 10.2706 7.51692 10.2728 7.08016 10.2695C6.97154 10.2687 6.92193 10.3051 6.92811 10.4162C6.93382 10.5188 6.93617 10.6225 6.92751 10.7247C6.91616 10.8591 6.96819 10.9066 7.10601 10.9049C7.5807 10.899 8.05566 10.8961 8.53028 10.9042C9.35023 10.9181 10.1126 10.6961 10.8185 10.3136C12.4162 9.44788 13.3811 7.76403 13.1184 5.84516C12.87 4.02796 11.839 2.77703 10.1302 2.06564C9.59936 1.84465 9.04196 1.74603 8.46503 1.74649C7.59634 1.74722 6.72759 1.74239 5.8589 1.74041C5.85051 1.74054 5.84191 1.74702 5.80251 1.76283ZM7.77948 17.3995C8.05472 17.6839 8.36903 17.8734 8.73947 17.9718C9.16992 18.0859 9.60473 18.0611 10.0391 18.0037C11.09 17.8648 12.0432 17.4834 12.9039 16.8752C13.8215 16.2269 14.4909 15.3796 14.9503 14.3692C15.3102 13.5774 15.4862 12.744 15.4806 11.8766C15.4744 10.9587 15.2516 10.0892 14.8361 9.26962C14.581 8.76671 14.253 8.30307 13.8623 7.89327C13.7842 7.81112 13.7496 7.81654 13.7177 7.92714C13.679 8.06181 13.6364 8.19734 13.5762 8.32361C13.5043 8.47429 13.5329 8.58389 13.638 8.71459C14.6181 9.93391 14.9439 11.331 14.6876 12.8443C14.4274 14.3812 13.6104 15.5931 12.2971 16.468C11.523 16.9839 10.6645 17.2731 9.73262 17.3495C9.14011 17.3981 8.54653 17.3655 7.95362 17.3763C7.90253 17.3769 7.8497 17.3639 7.77968 17.3992L7.77948 17.3995ZM7.81888 3.13897C7.48591 3.13897 7.19624 3.14288 6.90683 3.13712C6.7823 3.13468 6.75988 3.17932 6.79405 3.28859C6.82941 3.40003 6.85634 3.51389 6.87461 3.62924C6.89347 3.75154 6.9459 3.80168 7.07963 3.79943C7.53518 3.79176 7.99101 3.79474 8.44664 3.79712C9.02176 3.80016 9.54122 3.98312 9.99685 4.31754C10.7066 4.83784 11.0624 5.55201 11.0624 6.4189C11.0618 7.378 10.605 8.08648 9.7539 8.54493C9.32331 8.77684 8.85252 8.85581 8.36682 8.85826C7.94912 8.86058 7.53136 8.85826 7.11366 8.85932C6.94046 8.85985 6.93066 8.87136 6.92972 9.04525C6.92918 9.14348 6.93529 9.2421 6.92824 9.3398C6.91925 9.46408 6.97524 9.50377 7.09554 9.50258C7.60339 9.49762 8.11131 9.49775 8.61943 9.49729C8.80539 9.49729 8.98866 9.47288 9.16992 9.43584C10.8488 9.09294 11.8898 7.708 11.7232 6.04055C11.5907 4.71613 10.5081 3.52797 9.16468 3.2202C8.70402 3.11483 8.2394 3.14605 7.81888 3.13864V3.13897ZM8.29599 15.9933C7.95409 15.9933 7.61219 15.9946 7.27035 15.9926C7.15804 15.9919 7.11004 16.0286 7.14777 16.1454C7.18237 16.2522 7.2115 16.3607 7.23504 16.4705C7.25994 16.5872 7.32446 16.627 7.44563 16.6259C7.99611 16.6206 8.54747 16.6325 9.09802 16.6206C9.51954 16.6113 9.94073 16.5834 10.3543 16.4849C11.3617 16.2451 12.2071 15.736 12.8696 14.9589C13.6856 14.002 14.0591 12.8894 13.981 11.6338C13.9287 10.7934 13.6443 10.0384 13.1566 9.35183C13.1001 9.27246 13.0687 9.29316 13.024 9.35713C12.9539 9.4572 12.8893 9.56376 12.8039 9.64982C12.7012 9.75333 12.7089 9.83324 12.7846 9.95276C13.3076 10.7796 13.4583 11.6801 13.2924 12.633C13.139 13.5152 12.7218 14.2659 12.0632 14.8779C11.4316 15.4647 10.6826 15.8273 9.81734 15.9446C9.31183 16.013 8.80338 15.987 8.29599 15.993V15.9933ZM8.29076 14.5656C7.84849 14.5656 7.47846 14.5652 7.10816 14.5656C7.03673 14.5656 6.95738 14.5572 6.96651 14.6692C6.97638 14.7902 6.98437 14.9115 6.98954 15.033C6.99524 15.1676 7.04727 15.2262 7.19973 15.2243C7.87353 15.2158 8.54754 15.2231 9.22147 15.2189C9.39642 15.2178 9.57372 15.2102 9.74571 15.181C10.8678 14.9903 11.7119 14.4083 12.2168 13.3978C12.7012 12.4282 12.7173 11.448 12.1952 10.4768C12.1357 10.366 12.0889 10.3739 12.006 10.4443C11.9128 10.5237 11.8154 10.5996 11.7119 10.6651C11.6165 10.7254 11.6026 10.785 11.6562 10.8839C11.8414 11.2254 11.9137 11.5962 11.9104 11.9795C11.8996 13.2203 10.9655 14.2972 9.72436 14.5125C9.22436 14.599 8.7206 14.5488 8.29076 14.5652V14.5656ZM7.87984 8.09369C8.12917 8.08192 8.43704 8.10461 8.74531 8.06889C9.76739 7.95042 10.4038 7.07546 10.2834 6.20823C10.1774 5.44459 9.5611 4.73036 8.78398 4.60706C8.20543 4.51519 7.61876 4.5806 7.03579 4.56936C6.95711 4.56784 6.92918 4.61606 6.92959 4.68842C6.93046 4.83334 6.93234 4.9784 6.92865 5.12326C6.92616 5.21956 6.96812 5.25813 7.06472 5.25647C7.24974 5.25336 7.43496 5.25217 7.61997 5.25647C7.97524 5.26507 8.33204 5.2273 8.68563 5.28663C9.16435 5.36693 9.54572 5.74879 9.60191 6.20201C9.66347 6.69856 9.40052 7.15053 8.93133 7.33931C8.74041 7.41617 8.53626 7.43509 8.33083 7.43522C7.9179 7.43555 7.50511 7.43912 7.09205 7.43409C6.96772 7.43257 6.92005 7.47603 6.92777 7.5978C6.93452 7.71456 6.93466 7.8316 6.92818 7.94837C6.92274 8.05983 6.97329 8.09687 7.08097 8.09515C7.32775 8.09065 7.57459 8.09336 7.87984 8.09336V8.09369ZM8.24068 13.7941C8.56351 13.7941 8.88635 13.7953 9.20919 13.7941C10.0622 13.7902 10.6525 13.3825 10.9887 12.6268C11.1874 12.1805 11.1767 11.7174 10.9866 11.2616C10.9414 11.1532 10.8852 11.1333 10.7799 11.1858C10.6781 11.2362 10.5719 11.2773 10.4625 11.3086C10.3371 11.3448 10.3026 11.3831 10.3654 11.5214C10.6982 12.2535 10.3839 13.0249 9.47671 13.1411C9.066 13.1936 8.65166 13.1562 8.23906 13.1618C7.85453 13.167 7.46993 13.1659 7.0854 13.1613C6.96819 13.16 6.92073 13.2017 6.92804 13.3175C6.93529 13.4202 6.93529 13.5233 6.92804 13.6261C6.9177 13.7563 6.97262 13.798 7.10158 13.7964C7.48101 13.7902 7.86091 13.7938 8.24068 13.7937V13.7941ZM8.21785 11.6754V11.688C7.84775 11.688 7.47765 11.6901 7.10762 11.6869C6.97557 11.6858 6.91683 11.7344 6.92737 11.8704C6.9366 11.9917 6.9366 12.1135 6.92737 12.2348C6.91737 12.3681 6.96456 12.4161 7.10447 12.4149C7.75934 12.4091 8.41435 12.4138 9.06929 12.411C9.21597 12.4104 9.36426 12.4026 9.50564 12.3571C9.66582 12.3056 9.73087 12.2 9.71436 12.0349C9.68891 11.7799 9.58305 11.6819 9.30022 11.677C8.93939 11.6703 8.57855 11.6751 8.21785 11.6751V11.6754ZM7.76948 6.68553C7.98235 6.6723 8.24397 6.70921 8.50336 6.66569C8.72812 6.62772 8.83231 6.51567 8.82137 6.3261C8.8115 6.15518 8.68314 6.03401 8.47027 6.0301C8.00068 6.0215 7.53089 6.02673 7.06117 6.02481C6.96322 6.02441 6.92623 6.07052 6.92871 6.16372C6.93214 6.28985 6.93402 6.41639 6.92811 6.54233C6.92287 6.65478 6.97389 6.68977 7.08151 6.68732C7.29492 6.68223 7.50853 6.68553 7.76948 6.68553Z\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      d=\"M4.37238 18.734C4.24 18.7656 4.1246 18.7189 4.01121 18.6757C3.23194 18.3788 2.67729 17.8338 2.27007 17.1305C1.97731 16.6249 1.83123 16.0836 1.83203 15.4967C1.837 11.735 1.83799 7.97338 1.83499 4.21177C1.83499 3.34924 2.43347 2.6227 3.28981 2.43783C4.34942 2.2089 5.41669 3.00733 5.47603 4.06836C5.48724 4.26951 5.4902 4.47026 5.4902 4.67134C5.49051 8.22248 5.49022 11.7736 5.48932 15.3246C5.48932 15.8713 5.5396 16.4087 5.7402 16.9228C5.98858 17.5587 6.35069 18.1156 6.91212 18.5301C6.96546 18.5692 7.02076 18.6056 7.0778 18.6392C7.13017 18.6703 7.18562 18.6964 7.25664 18.7337C7.1836 18.7659 7.12768 18.7465 7.07095 18.7326C6.53061 18.6003 6.09882 18.2901 5.72476 17.9026C5.05149 17.2053 4.70777 16.3781 4.70979 15.4043C4.7169 11.6895 4.71773 7.97466 4.71227 4.25979C4.71227 3.70556 4.38278 3.29487 3.85701 3.18685C3.24678 3.06118 2.64138 3.52684 2.62144 4.13788C2.61607 4.30144 2.61327 4.46512 2.61305 4.62894C2.61256 8.13802 2.61256 11.647 2.61305 15.156C2.61305 15.6144 2.61688 16.0721 2.73671 16.5211C2.9324 17.2545 3.29833 17.8866 3.86674 18.4018C4.01725 18.5384 4.19085 18.64 4.37238 18.734Z\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      d=\"M5.86201 18.7317C5.75547 18.7616 5.69283 18.7495 5.62919 18.7334C5.19001 18.6223 4.81958 18.3874 4.48889 18.0939C3.85932 17.5349 3.44203 16.8529 3.30662 16.0197C3.27986 15.8487 3.26684 15.6759 3.26769 15.5029C3.26554 11.7836 3.26507 8.06435 3.26628 4.34502C3.26628 4.21868 3.26198 4.0901 3.34361 3.98122C3.438 3.85555 3.61704 3.79086 3.75983 3.82764C3.90262 3.86441 4.02413 4.00623 4.04239 4.16537C4.05038 4.23476 4.04722 4.30553 4.04722 4.37565C4.04794 8.10899 4.04935 11.8423 4.05145 15.5756C4.05307 16.5173 4.38342 17.3549 4.98311 18.0817C5.20861 18.3551 5.47667 18.5965 5.86201 18.7317Z\"\r\n      fill={color.color}\r\n    />\r\n  </svg>\r\n  //   </div>\r\n  // </Draggable>\r\n)\r\n\r\nexport const CloseWidgetIcon = (color) => (\r\n  <svg\r\n    width=\"15\"\r\n    height=\"15\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={{ position: \"absolute\", left: \"18%\", top: \"17%\" }}\r\n  >\r\n    <path\r\n      d=\"M17.4195 19.0767L9.99952 11.645L2.57952 19.0767L0.922852 17.42L8.35452 10L0.922852 2.58001L2.57952 0.92334L9.99952 8.35501L17.4195 0.935007L19.0645 2.58001L11.6445 10L19.0645 17.42L17.4195 19.0767Z\"\r\n      fill={color.color}\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const BackArrowIcon = () => (\r\n  <svg\r\n    width=\"6\"\r\n    height=\"10\"\r\n    viewBox=\"0 0 6 10\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={{ marginBottom: \"2px\" }}\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M4.76857 0.203577L0.146076 4.66058C-0.048692 4.8482 -0.048692 5.15131 0.146076 5.33942L4.76857 9.79642C5.04973 10.0679 5.50719 10.0679 5.78885 9.79642C6.07002 9.52499 6.07002 9.08445 5.78885 8.81302L1.83456 4.99976L5.78885 1.18747C6.07002 0.915548 6.07002 0.475013 5.78885 0.203577C5.50719 -0.0678587 5.04973 -0.0678587 4.76857 0.203577Z\"\r\n      fill=\"#4F4F4F\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const ForwardArrowIcon = () => (\r\n  <svg\r\n    width=\"6\"\r\n    height=\"10\"\r\n    viewBox=\"0 0 6 10\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={{ marginBottom: \"2px\" }}\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M1.23143 0.203577L5.85392 4.66058C6.04869 4.8482 6.04869 5.15131 5.85392 5.33942L1.23143 9.79642C0.950267 10.0679 0.492813 10.0679 0.211148 9.79642C-0.0700169 9.52499 -0.0700169 9.08445 0.211148 8.81302L4.16544 4.99976L0.211148 1.18747C-0.0700169 0.915548 -0.0700169 0.475013 0.211148 0.203577C0.492813 -0.0678587 0.950267 -0.0678587 1.23143 0.203577Z\"\r\n      fill=\"#4F4F4F\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const EditIcon = () => (\r\n  <svg\r\n    width=\"16\"\r\n    height=\"16\"\r\n    viewBox=\"0 0 26 26\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M1.50387 25.8748C1.61524 25.8748 1.72662 25.8611 1.83662 25.8336L7.33662 24.4586C7.57862 24.3981 7.79999 24.273 7.976 24.097L24.8789 7.19409C25.3986 6.67434 25.6846 5.98409 25.6846 5.24984C25.6846 4.51559 25.3986 3.82534 24.8789 3.30559L22.6981 1.12484C21.6586 0.0853398 19.8491 0.0853398 18.8096 1.12484L1.90674 18.0277C1.73083 18.2038 1.60587 18.4243 1.54512 18.6657L0.17012 24.1657C0.119331 24.3685 0.11543 24.5801 0.158714 24.7846C0.201997 24.9891 0.291326 25.181 0.41991 25.3458C0.548494 25.5105 0.712951 25.6438 0.900778 25.7355C1.08861 25.8272 1.29486 25.8748 1.50387 25.8748ZM20.7539 3.06909L22.9346 5.24984L20.7539 7.43059L18.5731 5.24984L20.7539 3.06909ZM4.1205 19.7025L16.6289 7.19409L18.8096 9.37484L6.29987 21.8832L3.39312 22.6092L4.1205 19.7025Z\"\r\n      fill=\"url(#paint0_radial)\"\r\n    />\r\n    <defs>\r\n      <radialGradient\r\n        id=\"paint0_radial\"\r\n        cx=\"0\"\r\n        cy=\"0\"\r\n        r=\"1\"\r\n        gradientUnits=\"userSpaceOnUse\"\r\n        gradientTransform=\"translate(1.72614 3.91935) rotate(47.4628) scale(29.7968 852.45)\"\r\n      >\r\n        <stop stopColor=\"#568AFD\" />\r\n        <stop offset=\"0.494792\" stopColor=\"#670DF2\" />\r\n        <stop offset=\"1\" stopColor=\"#851EDF\" />\r\n      </radialGradient>\r\n    </defs>\r\n  </svg>\r\n)\r\n\r\nexport const EditPencilIcon = () => (\r\n  <svg\r\n    width=\"16\"\r\n    height=\"26\"\r\n    viewBox=\"0 0 26 26\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M1.50387 25.8748C1.61524 25.8748 1.72662 25.8611 1.83662 25.8336L7.33662 24.4586C7.57862 24.3981 7.79999 24.273 7.976 24.097L24.8789 7.19409C25.3986 6.67434 25.6846 5.98409 25.6846 5.24984C25.6846 4.51559 25.3986 3.82534 24.8789 3.30559L22.6981 1.12484C21.6586 0.0853398 19.8491 0.0853398 18.8096 1.12484L1.90674 18.0277C1.73083 18.2038 1.60587 18.4243 1.54512 18.6657L0.17012 24.1657C0.119331 24.3685 0.11543 24.5801 0.158714 24.7846C0.201997 24.9891 0.291326 25.181 0.41991 25.3458C0.548494 25.5105 0.712951 25.6438 0.900778 25.7355C1.08861 25.8272 1.29486 25.8748 1.50387 25.8748ZM20.7539 3.06909L22.9346 5.24984L20.7539 7.43059L18.5731 5.24984L20.7539 3.06909ZM4.1205 19.7025L16.6289 7.19409L18.8096 9.37484L6.29987 21.8832L3.39312 22.6092L4.1205 19.7025Z\"\r\n      fill=\"black\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const HourIcon = () => (\r\n  <svg\r\n    width=\"22\"\r\n    height=\"18\"\r\n    viewBox=\"0 0 18 28\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M0 0.194336H18V8.49063L12.0234 13.9999L18 19.5091V27.8054H0V19.5091L5.97656 13.9999L0 8.49063V0.194336ZM14.9766 20.2221L9 14.7129L3.02344 20.2221V25.0832H14.9766V20.2221ZM9 13.2869L14.9766 7.77767V2.91656H3.02344V7.77767L9 13.2869Z\"\r\n      fill={leftIconsColor}\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const DoneIcon = () => (\r\n  <svg\r\n    width=\"31\"\r\n    height=\"10\"\r\n    viewBox=\"0 0 51 16\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M0.445312 15V0.78125H4.64453C5.90104 0.78125 7.01432 1.0612 7.98438 1.62109C8.96094 2.18099 9.71615 2.97526 10.25 4.00391C10.7839 5.03255 11.0508 6.21094 11.0508 7.53906V8.25195C11.0508 9.59961 10.7806 10.7845 10.2402 11.8066C9.70638 12.8288 8.94141 13.6165 7.94531 14.1699C6.95573 14.7233 5.81966 15 4.53711 15H0.445312ZM2.91602 2.77344V13.0273H4.52734C5.82292 13.0273 6.81576 12.6237 7.50586 11.8164C8.20247 11.0026 8.55729 9.83724 8.57031 8.32031V7.5293C8.57031 5.98633 8.23503 4.80794 7.56445 3.99414C6.89388 3.18034 5.92057 2.77344 4.64453 2.77344H2.91602ZM24.6944 8.26172C24.6944 9.65495 24.4535 10.8789 23.9717 11.9336C23.4899 12.9818 22.7998 13.7891 21.9014 14.3555C21.0095 14.9154 19.9808 15.1953 18.8155 15.1953C17.6631 15.1953 16.6345 14.9154 15.7295 14.3555C14.8311 13.7891 14.1345 12.985 13.6397 11.9434C13.1514 10.9017 12.904 9.70052 12.8975 8.33984V7.53906C12.8975 6.15234 13.1416 4.92839 13.6299 3.86719C14.1247 2.80599 14.8181 1.99544 15.71 1.43555C16.6084 0.869141 17.6371 0.585938 18.7959 0.585938C19.9548 0.585938 20.9802 0.865885 21.8721 1.42578C22.7705 1.97917 23.4639 2.77995 23.9522 3.82812C24.4405 4.86979 24.6879 6.08398 24.6944 7.4707V8.26172ZM22.2237 7.51953C22.2237 5.94401 21.9242 4.73633 21.3252 3.89648C20.7328 3.05664 19.8897 2.63672 18.7959 2.63672C17.7282 2.63672 16.8916 3.05664 16.2862 3.89648C15.6872 4.72982 15.3812 5.91146 15.3682 7.44141V8.26172C15.3682 9.82422 15.6709 11.0319 16.2764 11.8848C16.8884 12.7376 17.7347 13.1641 18.8155 13.1641C19.9092 13.1641 20.7491 12.7474 21.335 11.9141C21.9274 11.0807 22.2237 9.86328 22.2237 8.26172V7.51953ZM38.2696 15H35.7989L29.461 4.91211V15H26.9903V0.78125H29.461L35.8184 10.9082V0.78125H38.2696V15ZM49.3351 8.65234H43.4952V13.0273H50.3214V15H41.0245V0.78125H50.253V2.77344H43.4952V6.69922H49.3351V8.65234Z\"\r\n      fill=\"url(#paint0_radial)\"\r\n    />\r\n    <defs>\r\n      <radialGradient\r\n        id=\"paint0_radial\"\r\n        cx=\"0\"\r\n        cy=\"0\"\r\n        r=\"1\"\r\n        gradientUnits=\"userSpaceOnUse\"\r\n        gradientTransform=\"translate(2.25 1.38) rotate(19.63) scale(43.519 790.824)\"\r\n      >\r\n        <stop stopColor=\"#568AFD\" />\r\n        <stop offset=\"0.494792\" stopColor=\"#670DF2\" />\r\n        <stop offset=\"1\" stopColor=\"#851EDF\" />\r\n      </radialGradient>\r\n    </defs>\r\n  </svg>\r\n)\r\n\r\nexport const Sedan = () => (\r\n  <div>\r\n    <img\r\n      style={{ width: \"100%\" }}\r\n      alt=\"sedan\"\r\n      src=\"http://bookinglane-webui.us-east-2.elasticbeanstalk.com/images/cartypes/sedan.png\"\r\n    />\r\n  </div>\r\n)\r\n\r\nexport const Suv = () => (\r\n  <div>\r\n    <img\r\n      className=\"booking-suv-image-icon\"\r\n      alt=\"sedan\"\r\n      src=\"http://bookinglane-webui.us-east-2.elasticbeanstalk.com/images/cartypes/suv.png\"\r\n    />\r\n  </div>\r\n)\r\n\r\nexport const Limo = () => (\r\n  <div>\r\n    <img\r\n      className=\"booking-limo-image-icon\"\r\n      alt=\"Limo\"\r\n      src=\"http://bookinglane-webui.us-east-2.elasticbeanstalk.com/images/cartypes/limo.png\"\r\n    />\r\n  </div>\r\n)\r\n\r\nexport const MiniBus = () => (\r\n  <div>\r\n    <img\r\n      className=\"booking-minibus-image-icon\"\r\n      alt=\"MiniBus\"\r\n      src=\"http://bookinglane-webui.us-east-2.elasticbeanstalk.com/images/cartypes/miniBus.png\"\r\n    />\r\n  </div>\r\n)\r\n\r\nexport const ArrowDown = () => (\r\n  <svg\r\n    width=\"10\"\r\n    height=\"31\"\r\n    aria-hidden=\"true\"\r\n    focusable=\"false\"\r\n    data-prefix=\"fas\"\r\n    data-icon=\"long-arrow-alt-down\"\r\n    className=\"svg-inline--fa fa-long-arrow-alt-down fa-w-8\"\r\n    role=\"img\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 256 512\"\r\n  >\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z\"\r\n    ></path>\r\n  </svg>\r\n)\r\n\r\nexport const ArrowDownLine = () => (\r\n  <svg\r\n    width=\"30\"\r\n    height=\"20\"\r\n    aria-hidden=\"true\"\r\n    focusable=\"false\"\r\n    data-prefix=\"fas\"\r\n    data-icon=\"chevron-down\"\r\n    className=\"svg-inline--fa fa-chevron-down fa-w-14\"\r\n    role=\"img\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 448 512\"\r\n  >\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z\"\r\n    ></path>\r\n  </svg>\r\n)\r\nexport const ErrorIcon = () => (\r\n  <svg\r\n    width=\"54\"\r\n    height=\"54\"\r\n    viewBox=\"0 0 60 60\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <circle cx=\"30\" cy=\"30\" r=\"29.5\" stroke=\"#FB4A3C\" />\r\n    <path d=\"M22 25.2L25.2 22L38 34.8L34.8 38L22 25.2Z\" fill=\"#FB4A3C\" />\r\n    <path d=\"M25.2 38L22 34.8L34.8 22L38 25.2L25.2 38Z\" fill=\"#FB4A3C\" />\r\n  </svg>\r\n)\r\n\r\nexport const MeetAndGreetIcon = (color) => (\r\n  // <svg\r\n  //   width=\"24\"\r\n  //   height=\"24\"\r\n  //   color\r\n  //   viewBox=\"0 0 24 24\"\r\n  //   fill={color.color}\r\n  //   xmlns=\"http://www.w3.org/2000/svg\"\r\n  //   style={iconsForCounters}\r\n  // >\r\n  //   <mask id=\"path-1-inside-1_1092:6497\" fill={color.color}>\r\n  //     <path d=\"M12 6C10.9 6 10 5.1 10 4C10 2.9 10.9 2 12 2C13.1 2 14 2.9 14 4C14 5.1 13.1 6 12 6ZM17 2H19C19 4.7 18.07 6.41 16.7 7.5C16.2 7.9 15.6 8.2 15 8.4V22H13V16H11V22H9V10.1C8.7 10.2 8.5 10.3 8.4 10.4C7.87 10.81 7 11.43 7 14H5C5 11.94 5.35 10.22 7.11 8.71C8.21 7.81 10 7 12 7C14 7 14.68 6.54 15.48 5.94C15.96 5.55 17 4.76 17 2ZM4 16H7V22H4V16Z\" />\r\n  //   </mask>\r\n  //   <path\r\n  //     d=\"M12 6C10.9 6 10 5.1 10 4C10 2.9 10.9 2 12 2C13.1 2 14 2.9 14 4C14 5.1 13.1 6 12 6ZM17 2H19C19 4.7 18.07 6.41 16.7 7.5C16.2 7.9 15.6 8.2 15 8.4V22H13V16H11V22H9V10.1C8.7 10.2 8.5 10.3 8.4 10.4C7.87 10.81 7 11.43 7 14H5C5 11.94 5.35 10.22 7.11 8.71C8.21 7.81 10 7 12 7C14 7 14.68 6.54 15.48 5.94C15.96 5.55 17 4.76 17 2ZM4 16H7V22H4V16Z\"\r\n  //     stroke={color.color}\r\n  //     strokeWidth=\"4\"\r\n  //     mask=\"url(#path-1-inside-1_1092:6497)\"\r\n  //   />\r\n  //   <rect x=\"10\" y=\"8\" width=\"3\" height=\"6\" fill={color.color} />\r\n  // </svg>\r\n\r\n  <svg\r\n    width=\"22\"\r\n    height=\"22\"\r\n    viewBox=\"0 0 22 22\"\r\n    fill={color.color}\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={iconsForCounters}\r\n  >\r\n    <circle cx=\"10.9727\" cy=\"2.7442\" r=\"1.62897\" fill={color.color} />\r\n    <rect\r\n      x=\"5\"\r\n      y=\"13.0605\"\r\n      width=\"2.17196\"\r\n      height=\"7.60185\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      fill-rule=\"evenodd\"\r\n      clip-rule=\"evenodd\"\r\n      d=\"M13.6878 19.5762V7.23982L17.7961 2.39272C17.8324 2.34986 17.8644 2.30349 17.8915 2.25429C18.2833 1.54314 17.543 0.743119 16.8037 1.07863L16.732 1.11118C16.634 1.15562 16.5452 1.21784 16.4699 1.29467L12.3918 5.45845H9.34391C8.77979 5.45845 8.31612 5.88859 8.26301 6.43878L5.75256 11.7759C5.71109 11.8641 5.68714 11.9595 5.68205 12.0568C5.64425 12.7793 6.54851 13.1333 7.01135 12.5773L7.13516 12.4285C7.16736 12.3898 7.19592 12.3482 7.22047 12.3043L8.25793 10.4465V19.5762C8.25793 20.1759 8.74414 20.6621 9.34391 20.6621C9.94368 20.6621 10.4299 20.1759 10.4299 19.5762V14.1463H11.5159V19.5762C11.5159 20.1759 12.0021 20.6621 12.6018 20.6621C13.2016 20.6621 13.6878 20.1759 13.6878 19.5762Z\"\r\n      fill={color.color}\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const MeetAndGreetIconBlack = () => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <mask id=\"path-1-inside-1_1119:9470\" fill=\"white\">\r\n      <path d=\"M12 6C10.9 6 10 5.1 10 4C10 2.9 10.9 2 12 2C13.1 2 14 2.9 14 4C14 5.1 13.1 6 12 6ZM17 2H19C19 4.7 18.07 6.41 16.7 7.5C16.2 7.9 15.6 8.2 15 8.4V22H13V16H11V22H9V10.1C8.7 10.2 8.5 10.3 8.4 10.4C7.87 10.81 7 11.43 7 14H5C5 11.94 5.35 10.22 7.11 8.71C8.21 7.81 10 7 12 7C14 7 14.68 6.54 15.48 5.94C15.96 5.55 17 4.76 17 2ZM4 16H7V22H4V16Z\" />\r\n    </mask>\r\n    <path\r\n      d=\"M12 6C10.9 6 10 5.1 10 4C10 2.9 10.9 2 12 2C13.1 2 14 2.9 14 4C14 5.1 13.1 6 12 6ZM17 2H19C19 4.7 18.07 6.41 16.7 7.5C16.2 7.9 15.6 8.2 15 8.4V22H13V16H11V22H9V10.1C8.7 10.2 8.5 10.3 8.4 10.4C7.87 10.81 7 11.43 7 14H5C5 11.94 5.35 10.22 7.11 8.71C8.21 7.81 10 7 12 7C14 7 14.68 6.54 15.48 5.94C15.96 5.55 17 4.76 17 2ZM4 16H7V22H4V16Z\"\r\n      stroke=\"white\"\r\n      strokeWidth=\"4\"\r\n      mask=\"url(#path-1-inside-1_1119:9470)\"\r\n    />\r\n    <rect x=\"10\" y=\"8\" width=\"3\" height=\"6\" fill=\"white\" />\r\n  </svg>\r\n)\r\n\r\nexport const SafetySeatIcon = (color) => (\r\n  // <svg\r\n  //   width=\"22\"\r\n  //   height=\"22\"\r\n  //   viewBox=\"0 0 22 22\"\r\n  //   fill=\"none\"\r\n  //   xmlns=\"http://www.w3.org/2000/svg\"\r\n  //   style={{ marginLeft: \"11px\", marginRight: \"8px\" }}\r\n  // >\r\n  //   <path\r\n  //     d=\"M11.1474 6.43017C12.7809 6.42841 14.1068 5.10357 14.1068 3.47095C14.1068 1.83349 12.7813 0.507987 11.1474 0.511727C9.51124 0.508207 8.1864 1.83349 8.1875 3.47117C8.1864 5.10379 9.51124 6.42841 11.1474 6.43017Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  //   <path\r\n  //     d=\"M11.1492 12.626H8.01138V10.3553L5.62218 12.7681C4.53956 13.8507 3.07436 12.4647 4.16028 11.3777L8.11786 7.40823C8.44126 7.09187 8.79282 6.88925 9.35426 6.88462H11.1492H12.9081C13.4628 6.88925 13.8385 7.08615 14.1679 7.40823L18.1732 11.425C19.2037 12.4513 17.6986 13.8503 16.7115 12.8037L14.2508 10.3437V12.6257L11.1492 12.626ZM15.1812 4.64062L4.61062 14.3695L5.47874 15.3126L16.0497 5.58399L15.1812 4.64062Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  //   <path\r\n  //     d=\"M16.6683 15.2843C13.1448 13.4995 8.98457 13.5113 5.47755 15.3081C5.30419 14.9695 5.13061 14.6314 4.95703 14.2932C8.78899 12.3299 13.334 12.317 17.1833 14.2664C17.0117 14.6058 16.8401 14.9451 16.6683 15.2843Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  //   <path\r\n  //     d=\"M8.63001 14.5078L10.3652 16.2427L8.64233 17.9653L10.4129 19.737C11.4537 20.7796 10.0136 22.2736 8.93867 21.1989L6.13367 18.2874C5.53505 17.6712 5.36895 16.5397 6.01509 15.8987C6.01509 15.8962 6.44629 15.4626 6.90829 14.9984C6.90829 14.9982 7.74077 14.6722 8.63001 14.5078Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  //   <path\r\n  //     d=\"M15.3531 14.9984C15.8149 15.4624 16.2463 15.8962 16.2463 15.8987C16.892 16.5397 16.7265 17.6714 16.1277 18.2874L13.3225 21.1989C12.2478 22.2738 10.8074 20.7798 11.8485 19.737L13.619 17.9653L11.8962 16.2427L13.6311 14.5078C14.5204 14.6724 15.3531 14.9984 15.3531 14.9984Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  //   <path\r\n  //     d=\"M4.67464 16.0083C4.56662 16.1027 4.40272 16.0914 4.30856 15.983L3.80608 15.4068C3.71192 15.299 3.72314 15.1351 3.83116 15.0407L4.32418 14.6111C4.4322 14.5167 4.46696 14.5189 4.56134 14.6273L5.18394 15.3415C5.2781 15.4495 5.27568 15.4842 5.16788 15.5784L4.67464 16.0083ZM4.86846 15.4376C4.92544 15.3872 4.93138 15.3012 4.88166 15.2444L4.61678 14.9402C4.56706 14.8832 4.48038 14.8773 4.4234 14.9268L4.19988 15.1219C4.1429 15.1714 4.13674 15.2581 4.18668 15.3151L4.45156 15.6191C4.50128 15.6763 4.58796 15.682 4.64472 15.6325L4.86846 15.4376Z\"\r\n  //     fill={color.color}\r\n  //   />\r\n  // </svg>\r\n\r\n  <svg\r\n    width=\"22\"\r\n    height=\"23\"\r\n    viewBox=\"0 0 22 23\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={iconsForCounters}\r\n  >\r\n    <path\r\n      d=\"M11.0002 7C12.656 6.99822 14 5.65512 14 4C14 2.33998 12.6564 0.996216 11.0002 1.00001C9.34178 0.99644 7.99889 2.33998 8 4.00023C7.99889 5.65534 9.34178 6.99822 11.0002 7Z\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      d=\"M11.5005 13.2308H8.30746V10.8904L5.87627 13.3773C4.77462 14.4932 3.28367 13.0646 4.38867 11.9441L8.41581 7.85267C8.74489 7.52658 9.10263 7.31773 9.67394 7.31297H11.5005H13.2903C13.8546 7.31773 14.237 7.52069 14.5721 7.85267L18.6478 11.9929C19.6964 13.0507 18.165 14.4927 17.1605 13.414L14.6565 10.8784V13.2306L11.5005 13.2308ZM15.6033 5L4.84693 15.0279L5.73031 16L16.4871 5.97236L15.6033 5Z\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      d=\"M16.4945 14.981C13.0362 13.5505 8.953 13.5601 5.51089 15C5.34073 14.7287 5.17037 14.4577 5 14.1867C8.76104 12.6133 13.2219 12.6029 17 14.1652C16.8316 14.4372 16.6632 14.7091 16.4945 14.981Z\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      d=\"M8.92805 15L10.6057 16.7195L8.93996 18.4268L10.6518 20.1827C11.6581 21.216 10.2658 22.6967 9.22648 21.6315L6.51447 18.746C5.93569 18.1352 5.7751 17.0138 6.39982 16.3785C6.39982 16.3761 6.81673 15.9463 7.26341 15.4862C7.26341 15.486 8.06829 15.1629 8.92805 15Z\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      d=\"M14.7367 15.4862C15.1832 15.9461 15.6003 16.376 15.6003 16.3784C16.2246 17.0138 16.0646 18.1354 15.4856 18.7459L12.7734 21.6314C11.7343 22.6968 10.3417 21.2161 11.3483 20.1826L13.0601 18.4267L11.3944 16.7195L13.0718 15C13.9316 15.1631 14.7367 15.4862 14.7367 15.4862Z\"\r\n      fill={color.color}\r\n    />\r\n    <path\r\n      d=\"M5.23535 16.9163C5.09224 17.0397 4.8751 17.025 4.75035 16.8832L4.08464 16.1297C3.95989 15.9887 3.97476 15.7744 4.11787 15.6509L4.77104 15.089C4.91415 14.9656 4.9602 14.9685 5.08524 15.1103L5.91009 16.0442C6.03484 16.1855 6.03163 16.2309 5.88881 16.3541L5.23535 16.9163ZM5.49213 16.17C5.56762 16.1041 5.57549 15.9916 5.50962 15.9173L5.15869 15.5194C5.09282 15.4449 4.97798 15.4372 4.90249 15.5019L4.60637 15.7571C4.53088 15.8218 4.52271 15.9352 4.58888 16.0097L4.9398 16.4073C5.00567 16.4821 5.12051 16.4896 5.19571 16.4249L5.49213 16.17Z\"\r\n      fill={color.color}\r\n    />\r\n  </svg>\r\n)\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Redux\\form-reducer.js",[],"C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Redux\\company-token-reducer.js",[],"C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Redux\\car-reducer.js",["238","239"],"import { fleetApi } from \"../api/api\"\r\nimport { setFormData } from \"./form-reducer\"\r\n\r\nconst SET_CARS_BY_TYPE = \"./car-reducer/SET_CARS_BY_TYPE\"\r\nconst SET_CARS_WITH_PRICE = \"./car-reducer/SET_CARS_WITH_PRICE\"\r\nconst TOGGLE_IS_FETCHING = \"./car-reducer/TOGGLE_IS_FETCHING\"\r\nexport const SET_ERROR = \"./car-reducer/SET_ERROR\"\r\n\r\nlet initialState = {\r\n  cars: [],\r\n  pageSize: 1,\r\n  isFetching: false,\r\n  error: \"\",\r\n}\r\n\r\nconst carsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CARS_WITH_PRICE:\r\n    case SET_CARS_BY_TYPE:\r\n      return {\r\n        ...state,\r\n        cars: [...action.cars],\r\n      }\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      }\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setCarsByType = (cars) => ({ type: SET_CARS_BY_TYPE, cars })\r\n\r\nexport const setCarsWithPrice = (cars) => ({ type: SET_CARS_WITH_PRICE, cars })\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n})\r\nexport const setError = (error) => ({\r\n  type: SET_ERROR,\r\n  payload: error,\r\n})\r\n\r\nexport const getCarsByType = (carType, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n\r\n    let data = await fleetApi.getCarsByType(carType, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setCarsByType(data))\r\n  }\r\n}\r\n\r\nexport const getCompanyCars = (dataForm) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    // console.log(dataForm)\r\n    let data = await fleetApi.getCompanyCars(dataForm)\r\n    // console.log(data)\r\n    if (data.status == 400) {\r\n      dispatch(setError(data.data[0]))\r\n    }\r\n\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setFormData(dataForm))\r\n    if (data.status == 200) {\r\n      dispatch(setCarsWithPrice(data.data))\r\n    }\r\n  }\r\n}\r\n\r\nexport default carsReducer\r\n\r\n// ByDistance = 1,\r\n// ByHour = 2,\r\n// AirportTransfer = 3\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Redux\\hourly-reducer.js",["240"],"import { authApi } from \"../api/api\"\r\n\r\nconst SET_HOURLY = \"/redux/companyTokenReducer/SET_HOURLY\"\r\nconst SET_SAFETY_SEAT_COUNT = \"/redux/companyTokenReducer/SET_SAFETY_SEAT_COUNT\"\r\nconst SET_BOOSTER_SEAT_COUNT =\r\n  \"/redux/companyTokenReducer/SET_SAFETY_SEAT_COUNT\"\r\n\r\nlet initialState = {\r\n  hourlyRedux: false,\r\n  safetySeat: false,\r\n  boosterSeat: false,\r\n}\r\n\r\nconst setHourlyReducerAndSeats = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_HOURLY:\r\n      return {\r\n        ...state,\r\n        hourlyRedux: action.payload,\r\n      }\r\n    case SET_SAFETY_SEAT_COUNT:\r\n      return {\r\n        ...state,\r\n        safetySeat: action.payload,\r\n      }\r\n    case SET_BOOSTER_SEAT_COUNT:\r\n      return {\r\n        ...state,\r\n        boosterSeat: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setHourlyActionCreator = (flag) => ({\r\n  type: SET_HOURLY,\r\n  payload: flag,\r\n})\r\nexport const setSafetySeatActionCreator = (flag) => ({\r\n  type: SET_SAFETY_SEAT_COUNT,\r\n  payload: flag,\r\n})\r\nexport const setBoosterSeatRActionCreator = (flag) => ({\r\n  type: SET_BOOSTER_SEAT_COUNT,\r\n  payload: flag,\r\n})\r\n\r\nexport const setHourlyRedux = (flag) => {\r\n  return (dispatch) => {\r\n    dispatch(setHourlyActionCreator(flag))\r\n  }\r\n}\r\nexport const setSafetySeatRedux = (flag) => {\r\n  return (dispatch) => {\r\n    dispatch(setHourlyActionCreator(flag))\r\n  }\r\n}\r\nexport const setBoosterSeatRedux = (flag) => {\r\n  return (dispatch) => {\r\n    dispatch(setHourlyActionCreator(flag))\r\n  }\r\n}\r\n\r\n// export const getCompanyToken = () => {\r\n//   return async (dispatch) => {\r\n//     let response = await authApi.getToken()\r\n//     if (response.status === 200) {\r\n//       dispatch(setToken(response.data))\r\n//       window.localStorage.setItem(\"Authorization\", response.data.jwtToken)\r\n//       return true\r\n//     } else {\r\n//       dispatch(setToken(null))\r\n//       window.localStorage.clear()\r\n//       return false\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport default setHourlyReducerAndSeats\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Redux\\reset-widget-inputs-reducer.js",["241"],"import { authApi } from \"../api/api\"\r\n\r\nconst SET_RESET_INPUTS = \"/redux/companyTokenReducer/SET_RESET_INPUTS\"\r\n\r\nlet initialState = {\r\n  resetInputs: false,\r\n}\r\n\r\nconst resetWidgetInputsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_RESET_INPUTS:\r\n      return {\r\n        ...state,\r\n        resetInputs: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setResetWidgetInputsActionCreator = (flag) => ({\r\n  type: SET_RESET_INPUTS,\r\n  payload: flag,\r\n})\r\n\r\nexport const setResetWidgetInputs = (flag) => {\r\n  return (dispatch) => {\r\n    dispatch(setResetWidgetInputsActionCreator(flag))\r\n  }\r\n}\r\n\r\n// export const getCompanyToken = () => {\r\n//   return async (dispatch) => {\r\n//     let response = await authApi.getToken()\r\n//     if (response.status === 200) {\r\n//       dispatch(setToken(response.data))\r\n//       window.localStorage.setItem(\"Authorization\", response.data.jwtToken)\r\n//       return true\r\n//     } else {\r\n//       dispatch(setToken(null))\r\n//       window.localStorage.clear()\r\n//       return false\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport default resetWidgetInputsReducer\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\CheckOut.js",[],"C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Redux\\gate-meeting-reducer.js",["242"],"import { authApi } from \"../api/api\"\r\n\r\nconst SET_GATE_MEETING = \"/redux/companyTokenReducer/SET_GATE_MEETING\"\r\n\r\nlet initialState = {\r\n  isGateMeeting: false,\r\n}\r\n\r\nconst gateMeetingReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_GATE_MEETING:\r\n      return {\r\n        ...state,\r\n        isGateMeeting: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setGateMeetingActionCreator = (flag) => ({\r\n  type: SET_GATE_MEETING,\r\n  payload: flag,\r\n})\r\n\r\nexport const setGateMeetingRedux = (flag) => {\r\n  return (dispatch) => {\r\n    dispatch(setGateMeetingActionCreator(flag))\r\n  }\r\n}\r\n\r\n// export const getCompanyToken = () => {\r\n//   return async (dispatch) => {\r\n//     let response = await authApi.getToken()\r\n//     if (response.status === 200) {\r\n//       dispatch(setToken(response.data))\r\n//       window.localStorage.setItem(\"Authorization\", response.data.jwtToken)\r\n//       return true\r\n//     } else {\r\n//       dispatch(setToken(null))\r\n//       window.localStorage.clear()\r\n//       return false\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport default gateMeetingReducer\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CompanyProfile\\CompanyProfile.js",["243","244","245","246","247","248","249","250","251","252","253","254","255","256","257"],"import React, { useContext, useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  getCompanyProfile,\r\n  setGotAddressError,\r\n} from \"../../Redux/company-profile-reducer\"\r\n// import Grid from \"@material-ui/core/Grid\"\r\n// import Typography from \"@material-ui/core/Typography\"\r\n// import { makeStyles } from '@material-ui/core/styles'\r\n// import { CloseWidgetIcon } from \"../../assets/icons\"\r\n// import Divider from \"@material-ui/core/Divider\"\r\n// import { isMobile } from \"react-device-detect\"\r\n// import { Preloader } from \"../Helpers/Preloader/Preloader\"\r\n// import AppBar from \"@material-ui/core/AppBar\"\r\nimport { useMediaQuery } from \"@material-ui/core\"\r\nimport {\r\n  setResetWidgetInputs,\r\n  setResetWidgetInputsActionCreator,\r\n} from \"../../Redux/reset-widget-inputs-reducer\"\r\nimport {\r\n  setIsAirportPickupIncluded,\r\n  setShowCarsWithSafetySeat,\r\n} from \"../../Redux/form-reducer\"\r\nimport { setGateMeetingRedux } from \"../../Redux/gate-meeting-reducer\"\r\nimport styles from \"./CompanyProfile.module.scss\"\r\nimport ThemeContext from \"../../context\"\r\nimport { CloseWidgetIcon } from \"../../assets/icons\"\r\nimport { setHourlyRedux } from \"../../Redux/hourly-reducer\"\r\n\r\nconst CompanyProfile = ({\r\n  initializing,\r\n  profile,\r\n  getCompanyProfile,\r\n  handleCloseDialog,\r\n  setExpanded,\r\n  setActiveStep,\r\n  setBackgroundScrollStop,\r\n  resetInputs,\r\n  setResetWidgetInputs,\r\n  setGotAddressError,\r\n  setIsAirportPickupIncluded,\r\n  setGateMeetingRedux,\r\n  setShowCarsWithSafetySeat,\r\n  setHourlyRedux,\r\n}) => {\r\n  // const classes = useStyles()\r\n\r\n  const jwtToken = localStorage.getItem(\"Authorization\")\r\n  const smallDevices = useMediaQuery(\"(max-width:768px)\")\r\n\r\n  const resetWidgetInputs = (dispatch) => {\r\n    dispatch(setResetWidgetInputsActionCreator(true))\r\n  }\r\n  useEffect(() => {\r\n    if (jwtToken) {\r\n      getCompanyProfile()\r\n    }\r\n  }, [getCompanyProfile, jwtToken])\r\n  // useEffect(() => {\r\n  //   setResetWidgetInputs()\r\n  // }, [])\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n    inputsBackground,\r\n    bookNowIconFontAndCircleBorderColor,\r\n    bookNowIconBackgroundColor,\r\n    headerFontColor,\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <>\r\n      {initializing ? (\r\n        <>\r\n          <div\r\n            className={styles.companyProfileWrapper}\r\n            style={{\r\n              background: ThemeProviderAppBackgroundColor,\r\n              borderTopRightRadius: borderRadiusesForWholeApp,\r\n              borderTopLeftRadius: borderRadiusesForWholeApp,\r\n            }}\r\n          >\r\n            <div className={styles.companyProfileImageContainer}>\r\n              <img\r\n                src={profile.companyLogoPath}\r\n                alt=\"companyLogo\"\r\n                className={styles.companyProfileImageSelf}\r\n              />\r\n            </div>\r\n            <div className={styles.companyProfileNameContainer}>\r\n              <span\r\n                className={styles.companyProfileNameSelf}\r\n                style={{ color: headerFontColor }}\r\n              >\r\n                {profile.companyName}\r\n              </span>\r\n            </div>\r\n            <div className={styles.companyProfileCloseIconContainer}>\r\n              <div\r\n                className={styles.companyProfileCloseIconSelf}\r\n                onClick={() => {\r\n                  setExpanded()\r\n                  setActiveStep(0)\r\n                  setBackgroundScrollStop(false)\r\n                  setResetWidgetInputs(true)\r\n                  setGotAddressError(false)\r\n                  setIsAirportPickupIncluded(false)\r\n                  setGateMeetingRedux(false)\r\n\r\n                  setShowCarsWithSafetySeat(false)\r\n                  setHourlyRedux(false)\r\n                }}\r\n              >\r\n                <CloseWidgetIcon color={fontColor} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.companyProfile.profile,\r\n    resetInputs: state.resetWidgetInputs.resetInputs,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {}\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCompanyProfile,\r\n  setResetWidgetInputs,\r\n  setGotAddressError,\r\n  setIsAirportPickupIncluded,\r\n  setGateMeetingRedux,\r\n  setShowCarsWithSafetySeat,\r\n  setHourlyRedux,\r\n})(CompanyProfile)\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\Helpers\\Preloader\\Preloader.js",["258","259","260","261","262","263","264","265"],"// import { CircularProgress } from \"@material-ui/core\"\r\nimport React, { useContext } from \"react\"\r\n// import { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\"\r\nimport styles from \"./Preloader.module.scss\"\r\nimport ThemeContext from \"../../../context\"\r\n\r\n// const theme = createMuiTheme({\r\n//   palette: {\r\n//     secondary: {\r\n//       main: \"#4F4F4F\",\r\n//     },\r\n//   },\r\n// })\r\n\r\nexport const Preloader = () => {\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiuses,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div\r\n      // style={{\r\n      //   margin: \"0 auto\",\r\n      //   width: \"100%\",\r\n      //   height: \"90%\",\r\n      //   display: \"flex\",\r\n      //   flexDirection: \"row \",\r\n      //   justifyContent: \"center\",\r\n      //   alignItems: \"center\",\r\n      //   backgroundColor: \"black\",\r\n      //   // marginTop: \"40px\",\r\n      // }}\r\n      className={styles.loaderContainer}\r\n      style={{ background: ThemeProviderAppBackgroundColor }}\r\n    >\r\n      <div className={styles.loader}></div>\r\n    </div>\r\n  )\r\n}\r\n\r\n//#region styled-components\r\n\r\n// const Container = styled.div`\r\n//     margin: 0 auto;\r\n//     width: 100%;\r\n//     /* @media (max-width: 500px) {\r\n//         width: 94%;\r\n//     } */\r\n// `;\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\api\\api.js",["266","267","268"],"C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\Confirmation\\Confirmation.js",["269","270","271","272","273","274","275","276","277","278","279","280","281","282","283"],"import React, { useContext, useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Preloader } from \"../../Helpers/Preloader/Preloader\"\r\n// import Grid from \"@material-ui/core/Grid\"\r\nimport { Success } from \"../../../assets/icons\"\r\n// import Typography from \"@material-ui/core/Typography\"\r\n// import Button from \"@material-ui/core/Button\"\r\nimport ReservationFailed from \"../ReservationFailed/ReservationFailed\"\r\nimport {\r\n  createReservation,\r\n  logOut,\r\n  setIsAirportPickupIncluded,\r\n} from \"../../../Redux/form-reducer\"\r\nimport { setResetWidgetInputs } from \"../../../Redux/reset-widget-inputs-reducer\"\r\nimport { setGotAddressError } from \"../../../Redux/company-profile-reducer\"\r\nimport styles from \"./Confirmation.module.scss\"\r\nimport ThemeContext from \"../../../context\"\r\n\r\n// setResetWidgetInputs,\r\n// setGotAddressError,\r\n// setIsAirportPickupIncluded\r\n\r\nconst Confirmation = ({\r\n  createReservation,\r\n  companyName,\r\n  email,\r\n  setExpanded,\r\n  isSuccess,\r\n  isFetching,\r\n  setActiveStep,\r\n  formSummary,\r\n  logOut,\r\n  failMessage,\r\n  setBackgroundScrollStop,\r\n  setResetWidgetInputs,\r\n  setGotAddressError,\r\n  setIsAirportPickupIncluded,\r\n}) => {\r\n  useEffect(() => {\r\n    createReservation(formSummary)\r\n  }, [])\r\n  const textColor = \"white\"\r\n\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n    inputsBackground,\r\n    bookNowIconFontAndCircleBorderColor,\r\n    bookNowIconBackgroundColor,\r\n    backAndNextButtonsColor,\r\n    backAndNextButtonsFontColor,\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <>\r\n      {isFetching ? (\r\n        <Preloader />\r\n      ) : isSuccess ? (\r\n        <div\r\n          // container\r\n          // direction=\"column\"\r\n          // spacing={2}\r\n          // justify=\"center\"\r\n          // alignItems=\"center\"\r\n          // style={{ height: \"80vh\", backgroundColor: \"black\" }}\r\n          className={styles.confirmationWrapper}\r\n        >\r\n          {/* <div></div> */}\r\n          {/* <Grid item>\r\n                            <Typography variant='body2'>Success</Typography>\r\n                        </Grid> */}\r\n          <div className={styles.confirmationTextContainer}>\r\n            <Success />\r\n            <p\r\n              // variant=\"body2\"\r\n              // style={{ color: textColor }}\r\n              // align=\"center\"\r\n              className={styles.confirmationTextSelf1}\r\n              style={{ color: fontColor }}\r\n            >\r\n              Your reservation was successfully submitted. A confirmation email\r\n              was sent to {email && email}.\r\n            </p>\r\n            <p\r\n              // variant=\"body2\"\r\n              // style={{ color: textColor }}\r\n              className={styles.confirmationTextSelf2}\r\n              style={{ color: fontColor }}\r\n            >\r\n              Thanks, {companyName && companyName}\r\n            </p>\r\n          </div>\r\n          <div className={styles.confirmationButtonContainer}>\r\n            <button\r\n              onClick={() => {\r\n                setExpanded(false)\r\n                setActiveStep(0)\r\n\r\n                setBackgroundScrollStop(false)\r\n                setResetWidgetInputs(true)\r\n                setGotAddressError(false)\r\n                setIsAirportPickupIncluded(false)\r\n                // logOut()\r\n              }}\r\n              className={styles.confirmationButtonSelf}\r\n              style={{\r\n                background: backAndNextButtonsColor,\r\n                color: backAndNextButtonsFontColor,\r\n              }}\r\n            >\r\n              Done\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <ReservationFailed\r\n          setActiveStep={setActiveStep}\r\n          // failMessage={failMessage}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isSuccess: state.companyProfile.isSuccess,\r\n    failMessage: state.companyProfile.failMessage,\r\n    isFetching: state.cars.isFetching,\r\n    formSummary: state.formData,\r\n    email: state.formData.client.email,\r\n    companyName: state.companyProfile.profile.companyName,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  createReservation,\r\n  logOut,\r\n  setResetWidgetInputs,\r\n  setGotAddressError,\r\n  setIsAirportPickupIncluded,\r\n})(Confirmation)\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\FleetForm\\FleetFormContainerComponent.js",[],"C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\AdressFormContainerComponent.js",["284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { placesApi } from \"../../../../api/api\"\r\nimport { getCarsByType, getCompanyCars } from \"../../../../Redux/car-reducer\"\r\nimport Carousel, { consts } from \"react-elastic-carousel\"\r\n// import {\r\n//   LeftArrowForAdressForm,\r\n//   RightArrowForAdressForm,\r\n// } from \"../../../../assets/icons\"\r\n// import Button from \"@material-ui/core/Button\"\r\nimport { useStyles } from \"./AdressFormStyles\"\r\n// import { useMediaQuery } from \"@material-ui/core\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  setBoosterSeatCount,\r\n  setDateForDefaultValue,\r\n  setFormData,\r\n  setHoursRedux,\r\n  setPassengersQuantityForBackStep,\r\n  setSafetySeatCount,\r\n  setShowCarsWithSafetySeat,\r\n  setTimeForDefaultValue,\r\n  setTimeForDefaultValueAlignment,\r\n  setTimeForDefaultValueAMPM,\r\n} from \"../../../../Redux/form-reducer\"\r\n\r\nimport { setHourlyRedux } from \"../../../../Redux/hourly-reducer\"\r\nimport { setGateMeetingRedux } from \"../../../../Redux/gate-meeting-reducer\"\r\n// import { AdressFormHelpers } from \"./adressFormHelpers\"\r\nimport AdressFormUIComponent from \"./AdressFormUIComponent\"\r\nimport styles from \"./AdressFormStyles/AdressForm.module.scss\"\r\nimport * as yup from \"yup\"\r\nimport ThemeContext from \"../../../../context\"\r\nimport styled from \"styled-components\"\r\n\r\nconst AdressFormContainerComponent = ({\r\n  next,\r\n  carTypes,\r\n  pageSize,\r\n  getCompanyCars,\r\n  setFormData,\r\n  formData,\r\n  setHourlyRedux,\r\n  setGateMeetingRedux,\r\n  gateMeeting,\r\n  hourlyAndSeatsRedux,\r\n  setSafetySeatCount,\r\n  setBoosterSeatCount,\r\n  backgroundScrollStopForTimePicker,\r\n  setBackgroundScrollStopForTimePicker,\r\n  resetInputs,\r\n  setDateForDefaultValue,\r\n  setTimeForDefaultValue,\r\n  setTimeForDefaultValueAMPM,\r\n  setTimeForDefaultValueAlignment,\r\n  setPassengersQuantityForBackStep,\r\n  isBoosterSeatExistOnBackend,\r\n  isSafetySeatExistOnBackend,\r\n  setShowCarsWithSafetySeat,\r\n  setHoursRedux,\r\n  hoursCount,\r\n}) => {\r\n  // const classes = useStyles()\r\n\r\n  const [destinations, setDestinations] = useState([\r\n    {\r\n      rideCheckPoint: \"\",\r\n      latitude: 0,\r\n      longitude: 0,\r\n      placeType: 0,\r\n      placeId: \"\",\r\n    },\r\n    {\r\n      rideCheckPoint: \"\",\r\n      latitude: 0,\r\n      longitude: 0,\r\n      placeType: 0,\r\n      placeId: \"\",\r\n    },\r\n  ])\r\n\r\n  const [carSelectionID, setCarSelectionID] = useState(0)\r\n  const [bookingType, setBookingType] = useState(1)\r\n  const [passengers, setPassengers] = useState(0)\r\n  const [hoursAddressForm, setHoursAddressForm] = useState(0)\r\n  const [disableHourly, setDisableHourly] = useState(false)\r\n  const [hourly, setHourly] = useState(false)\r\n\r\n  const [isGateMeeting, setIsGateMeeting] = useState(false)\r\n  const [isAirline, setIsAirline] = useState(false)\r\n  const [airlineId, setAirlineId] = useState(0)\r\n  const [airlines, setAirlines] = useState([])\r\n  const [airlineName, setAirlineNAme] = useState([])\r\n\r\n  const [redBorderOnSubmit, setRedBorderOnSubmit] = useState(false)\r\n  const [redBorderOnSubmit2, setRedBorderOnSubmit2] = useState(false)\r\n  const [redBorderOnSubmitForDate, setRedBorderOnSubmitForDate] =\r\n    useState(false)\r\n  const [redBorderOnSubmitForTime, setRedBorderOnSubmitForTime] =\r\n    useState(false)\r\n  const [redBorderOnSubmitForTime2, setRedBorderOnSubmitForTime2] =\r\n    useState(false)\r\n  const [redBorderOnSubmitForTime3, setRedBorderOnSubmitForTime3] =\r\n    useState(false)\r\n  const [redBorderOnSubmitForTime4, setRedBorderOnSubmitForTime4] =\r\n    useState(false)\r\n  const [redBorderOnSubmitForTime5, setRedBorderOnSubmitForTime5] =\r\n    useState(false)\r\n  const [redBorderOnSubmitForTime6, setRedBorderOnSubmitForTime6] =\r\n    useState(false)\r\n  const [redBorderOnSubmitForCarType, setRedBorderOnSubmitForCarType] =\r\n    useState(false)\r\n  const [redBorderOnSubmitForPassengers, setRedBorderOnSubmitForPassengers] =\r\n    useState(false)\r\n  const [redBorderOnAirlines, setRedBorderOnAirlines] = useState(false)\r\n  const [redBorderOnSubmitForHours, setRedBorderOnSubmitForHours] =\r\n    useState(false)\r\n  const [\r\n    isAirportPickupIncludedLocalState,\r\n    setIsAirportPickupIncludedLocalState,\r\n  ] = useState(false)\r\n\r\n  const [time, setTime] = useState(\"\")\r\n  const startsWithTwo = time[0] === \"2\"\r\n\r\n  const [timeMask, setTimeMask] = useState(false)\r\n\r\n  const [date, setDate] = React.useState(null)\r\n\r\n  const [show, setShow] = useState(false)\r\n\r\n  const [showRecaptcha, setShowRecaptcha] = useState(false)\r\n\r\n  const [luggage, setLuggage] = useState(0)\r\n\r\n  const extractAirlineId = (name) => {\r\n    const res = airlines.find((element, index, array) => {\r\n      return element.name == name\r\n    })\r\n    res ? setAirlineId(res.id) : setAirlineId(null)\r\n    setAirlineNAme(name)\r\n    // console.log(res)\r\n  }\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n    ...methods\r\n  } = useForm({})\r\n\r\n  const handleClick = (id) => {\r\n    setCarSelectionID(id)\r\n  }\r\n  const isHourlyEnabled = () => {\r\n    if (hourly || hourlyAndSeatsRedux) {\r\n      if (hoursCount) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  let firstAirline =\r\n    destinations[0]?.rideCheckPoint.match(/(^|\\W)Airport($|\\W)/)\r\n\r\n  const fetchAirlines = async () => {\r\n    const data = await placesApi.getAirlines()\r\n    const res = data.map((airline) => {\r\n      return {\r\n        id: `${airline.id}`,\r\n        name: `${airline.code} ` + `${airline.name}`,\r\n      }\r\n    })\r\n    setAirlines(res)\r\n  }\r\n\r\n  const [flightNumber, setFlightNumber] = useState(0)\r\n\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiuses,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    backAndNextButtonsFontColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n    inputsBackground,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n  } = useContext(ThemeContext)\r\n  const [fontColorState, setFontColorState] = useState(fontColor)\r\n  const myArrow = ({ type, onClick, isEdge }) => {\r\n    const pointer = type === consts.PREV ? \"<\" : \">\"\r\n\r\n    return (\r\n      <Button\r\n        onClick={() => {\r\n          onClick()\r\n          // console.log(type)\r\n        }}\r\n        disabled={isEdge}\r\n        isEdge={isEdge}\r\n        inputsBackground={inputsBackground}\r\n        borderColorForInnerElements={borderColorForInnerElements}\r\n        borderRadiusesForInnerElements={borderRadiusesForInnerElements}\r\n        style={{\r\n          color: fontColorState,\r\n        }}\r\n      >\r\n        {pointer}\r\n      </Button>\r\n    )\r\n  }\r\n  const [safetySeat, setSafetySeat] = useState(false)\r\n\r\n  const [boosterSeat, setBoosterSeat] = useState(0)\r\n  const [childSafetySeat, setChildSafetySeat] = useState(0)\r\n\r\n  const [alignment, setAlignment] = React.useState(\"web\")\r\n  const [AMPM, setAMPM] = React.useState(\"\")\r\n\r\n  const handleChangeAMPM = (event, newAlignment) => {\r\n    if (newAlignment !== null) {\r\n      setAlignment(newAlignment)\r\n      setTimeForDefaultValueAMPM(event.target.textContent)\r\n    }\r\n    setAMPM(event.target.textContent)\r\n\r\n    setTimeForDefaultValueAMPM(event.target.textContent)\r\n    // console.log(event.target.textContent)\r\n  }\r\n\r\n  const inputStyle = {\r\n    WebkitBoxShadow: \"0 0 0 1000px #282828 inset\",\r\n    height: \"0px\",\r\n  }\r\n  // console.log(hourlyRedux)\r\n\r\n  const onSubmit2 = (data) => {\r\n    const timeNumberAfterColon = time\r\n      .split(\"\")\r\n      .splice(-2)\r\n      // .map((number) => {\r\n      //   return Number(`${number}`)\r\n      // })\r\n      .join(\"\")\r\n    const timeNumberAfterColonRedux = formData.timeForDefaultValue\r\n      .split(\"\")\r\n      .splice(-2)\r\n      // .map((number) => {\r\n      //   return Number(`${number}`)\r\n      // })\r\n      .join(\"\")\r\n    const timeNumberLength = time.split(\"\")\r\n    const timeNumberLengthredux = formData.timeForDefaultValue.split(\"\")\r\n    var timeNumberIsFullZero = time.replace(/[:]/g, \"\")\r\n    var timeNumberIsFullZeroRedux = formData.timeForDefaultValue.replace(\r\n      /[:]/g,\r\n      \"\"\r\n    )\r\n\r\n    // console.log(timeNumberIsFullZero)\r\n    if (\r\n      destinations[0].rideCheckPoint &&\r\n      destinations[1].rideCheckPoint &&\r\n      (date || formData.dateForDefaultValue) &&\r\n      (time || formData.timeForDefaultValue) &&\r\n      Number(`${timeNumberAfterColon || timeNumberAfterColonRedux}`) < 60 &&\r\n      (timeNumberLength.length || timeNumberLengthredux.length > 3) &&\r\n      timeNumberIsFullZero !== \"0000\" &&\r\n      timeNumberIsFullZero !== \"000\" &&\r\n      timeNumberIsFullZeroRedux !== \"0000\" &&\r\n      timeNumberIsFullZeroRedux !== \"000\" &&\r\n      carSelectionID &&\r\n      (passengers || formData.passengersQuantityForBackStep) &&\r\n      (AMPM || formData?.timeForDefaultValueAMPM?.ampm) &&\r\n      isHourlyEnabled()\r\n    ) {\r\n      if (isAirline) {\r\n        if (!airlineId) {\r\n          setRedBorderOnAirlines(true)\r\n        } else {\r\n          setRedBorderOnAirlines(false)\r\n          return true\r\n        }\r\n      } else {\r\n        return true\r\n      }\r\n    } else {\r\n      if (!destinations[0].rideCheckPoint) {\r\n        setRedBorderOnSubmit(true)\r\n      } else {\r\n        setRedBorderOnSubmit(false)\r\n      }\r\n      if (!destinations[1].rideCheckPoint) {\r\n        setRedBorderOnSubmit2(true)\r\n      } else {\r\n        setRedBorderOnSubmit2(false)\r\n      }\r\n      if (\r\n        !new Date(data.orderStartDate).toLocaleDateString(\"en-GB\") ||\r\n        !formData.dateForDefaultValue\r\n      ) {\r\n        setRedBorderOnSubmitForDate(true)\r\n      } else {\r\n        setRedBorderOnSubmitForDate(false)\r\n      }\r\n      if (timeNumberLength.length <= 3) {\r\n        setRedBorderOnSubmitForTime2(true)\r\n        // console.log(\"WOOOOOOOOOOOW\")\r\n      } else {\r\n        setRedBorderOnSubmitForTime2(false)\r\n      }\r\n      if (!hoursAddressForm) {\r\n        setRedBorderOnSubmitForHours(true)\r\n        // console.log(\"WOOOOOOOOOOOW\")\r\n      } else {\r\n        setRedBorderOnSubmitForHours(false)\r\n      }\r\n      if (Number(`${timeNumberAfterColon}`) > 60) {\r\n        setRedBorderOnSubmitForTime3(true)\r\n      } else {\r\n        setRedBorderOnSubmitForTime3(false)\r\n      }\r\n\r\n      if (\r\n        timeNumberIsFullZero == \"0000\" ||\r\n        timeNumberIsFullZeroRedux == \"0000\" ||\r\n        timeNumberIsFullZero == \"000\" ||\r\n        timeNumberIsFullZeroRedux == \"000\"\r\n      ) {\r\n        setRedBorderOnSubmitForTime4(true)\r\n      } else {\r\n        setRedBorderOnSubmitForTime4(false)\r\n      }\r\n      if (!AMPM && !formData?.timeForDefaultValueAMPM?.ampm) {\r\n        setRedBorderOnSubmitForTime(true)\r\n      } else {\r\n        setRedBorderOnSubmitForTime(false)\r\n      }\r\n      if (carSelectionID) {\r\n        setRedBorderOnSubmitForCarType(false)\r\n      } else {\r\n        setRedBorderOnSubmitForCarType(true)\r\n      }\r\n      if (formData.passengersQuantityForBackStep) {\r\n        setRedBorderOnSubmitForPassengers(false)\r\n      } else {\r\n        setRedBorderOnSubmitForPassengers(true)\r\n      }\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    // console.log(data)\r\n\r\n    if (onSubmit2(data)) {\r\n      if (Boolean(localStorage.getItem(\"captcha\")) == false) {\r\n        // Boolean(localStorage.getItem(\"captcha\")) !== true &&\r\n        setShowRecaptcha(true)\r\n      } else {\r\n        getCompanyCars({\r\n          hours: hourly ? hoursAddressForm : 0,\r\n          isGateMeeting: isGateMeeting,\r\n          airlines: { id: airlineId },\r\n          orderAddressDetails: [...destinations],\r\n          flightNumber: data.flightNumber,\r\n          page: pageSize,\r\n          typeId: carSelectionID,\r\n          bookingType: bookingType,\r\n          passengersQuantity: formData.passengersQuantityForBackStep,\r\n          isAirportPickupIncluded: isAirportPickupIncludedLocalState,\r\n          boosterSeatCount: boosterSeat,\r\n          safetySeatCount: childSafetySeat,\r\n          luggageCount: luggage,\r\n        })\r\n        setSafetySeatCount(childSafetySeat)\r\n        setBoosterSeatCount(boosterSeat)\r\n        setDateForDefaultValue(date?.toLocaleDateString(\"en-US\"))\r\n\r\n        const forRes = date?.toLocaleDateString(\"en-US\")\r\n        const forRes2 = time + ` ${AMPM}`\r\n        // console.log(\r\n        //   event.target.value.match(/\\d+/),\r\n        //   event.target.value.substr(event.target.value.indexOf(\":\")).match(/\\d+/)\r\n        // )\r\n\r\n        // ._d.toLocaleTimeString(\"en-US\", {\r\n        //   hour: \"numeric\",\r\n        //   minute: \"numeric\",\r\n        // })\r\n\r\n        // + ` ${AMPM}`\r\n        const resData = {\r\n          orderStartDate: `${forRes}`,\r\n          orderStartTime: `${forRes2}`,\r\n        }\r\n        const resData2 = {\r\n          orderStartDateTime: `${forRes} ` + `${forRes2}`,\r\n        }\r\n\r\n        if (date) {\r\n          setFormData(resData2)\r\n        }\r\n\r\n        console.log(\r\n          destinations[0].rideCheckPoint,\r\n          destinations[1].rideCheckPoint,\r\n          data?.orderStartDate,\r\n          data?.orderStartTime + ` ${AMPM}`,\r\n          {\r\n            hours: hourly ? hoursAddressForm : 0,\r\n            isGateMeeting: isGateMeeting,\r\n            airlines: { id: airlineId },\r\n            orderAddressDetails: [...destinations],\r\n            flightNumber: data.flightNumber,\r\n            page: pageSize,\r\n            typeId: carSelectionID,\r\n            bookingType: bookingType,\r\n            passengersQuantity: passengers,\r\n            boosterSeatCount: boosterSeat,\r\n          }\r\n        )\r\n        next()\r\n      }\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (firstAirline) {\r\n      setIsAirline(true)\r\n      setBookingType(3)\r\n      // fetchAirlines()\r\n      // setDisableHourly(true)\r\n    } else {\r\n      setIsAirline(false)\r\n      setDisableHourly(false)\r\n    }\r\n  }, [firstAirline])\r\n  React.useEffect(() => {\r\n    if (hourly) {\r\n      if (firstAirline) {\r\n        setBookingType(3)\r\n      } else {\r\n        setBookingType(2)\r\n      }\r\n\r\n      // setDisableHourly(true)\r\n    } else {\r\n      if (firstAirline) {\r\n        setBookingType(3)\r\n      } else {\r\n        setBookingType(1)\r\n      }\r\n    }\r\n  })\r\n\r\n  return (\r\n    <AdressFormUIComponent\r\n      carTypes={carTypes}\r\n      formData={formData}\r\n      setHourlyRedux={setHourlyRedux}\r\n      setGateMeetingRedux={setGateMeetingRedux}\r\n      gateMeeting={gateMeeting}\r\n      hourlyAndSeatsRedux={hourlyAndSeatsRedux}\r\n      resetInputs={resetInputs}\r\n      setDateForDefaultValue={setDateForDefaultValue}\r\n      setTimeForDefaultValue={setTimeForDefaultValue}\r\n      setPassengersQuantityForBackStep={setPassengersQuantityForBackStep}\r\n      isBoosterSeatExistOnBackend={isBoosterSeatExistOnBackend}\r\n      isSafetySeatExistOnBackend={isSafetySeatExistOnBackend}\r\n      airlines={airlines}\r\n      bookingType={bookingType}\r\n      boosterSeat={boosterSeat}\r\n      carSelectionID={carSelectionID}\r\n      childSafetySeat={childSafetySeat}\r\n      destinations={destinations}\r\n      flightNumber={flightNumber}\r\n      handleChangeAMPM={handleChangeAMPM}\r\n      handleClick={handleClick}\r\n      handleSubmit={handleSubmit}\r\n      hourly={hourly}\r\n      hoursAddressForm={hoursAddressForm}\r\n      isAirline={isAirline}\r\n      luggage={luggage}\r\n      methods={methods}\r\n      myArrow={myArrow}\r\n      onSubmit={onSubmit}\r\n      passengers={passengers}\r\n      redBorderOnSubmit={redBorderOnSubmit}\r\n      redBorderOnSubmit2={redBorderOnSubmit2}\r\n      redBorderOnSubmitForCarType={redBorderOnSubmitForCarType}\r\n      redBorderOnSubmitForDate={redBorderOnSubmitForDate}\r\n      redBorderOnSubmitForPassengers={redBorderOnSubmitForPassengers}\r\n      redBorderOnSubmitForTime={redBorderOnSubmitForTime}\r\n      redBorderOnSubmitForTime2={redBorderOnSubmitForTime2}\r\n      redBorderOnSubmitForTime3={redBorderOnSubmitForTime3}\r\n      redBorderOnSubmitForTime4={redBorderOnSubmitForTime4}\r\n      redBorderOnSubmitForTime5={redBorderOnSubmitForTime5}\r\n      redBorderOnSubmitForTime6={redBorderOnSubmitForTime6}\r\n      safetySeat={safetySeat}\r\n      setAirlineId={setAirlineId}\r\n      setBoosterSeat={setBoosterSeat}\r\n      setChildSafetySeat={setChildSafetySeat}\r\n      setDestinations={setDestinations}\r\n      setFlightNumber={setFlightNumber}\r\n      setHourly={setHourly}\r\n      setHoursAddressForm={setHoursAddressForm}\r\n      setIsAirportPickupIncludedLocalState={\r\n        setIsAirportPickupIncludedLocalState\r\n      }\r\n      setIsGateMeeting={setIsGateMeeting}\r\n      setLuggage={setLuggage}\r\n      setPassengers={setPassengers}\r\n      setSafetySeat={setSafetySeat}\r\n      date={date}\r\n      setDate={setDate}\r\n      show={show}\r\n      setShow={setShow}\r\n      AMPM={AMPM}\r\n      fetchAirlines={fetchAirlines}\r\n      extractAirlineId={extractAirlineId}\r\n      time={time}\r\n      setTime={setTime}\r\n      setShowCarsWithSafetySeat={setShowCarsWithSafetySeat}\r\n      showRecaptcha={showRecaptcha}\r\n      setShowRecaptcha={setShowRecaptcha}\r\n      setSafetySeatCount={setSafetySeatCount}\r\n      setBoosterSeatCount={setBoosterSeatCount}\r\n      redBorderOnSubmitForHours={redBorderOnSubmitForHours}\r\n      setHoursRedux={setHoursRedux}\r\n      hoursCount={hoursCount}\r\n    />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    carTypes: state.companyProfile.profile.carTypes,\r\n    pageSize: state.cars.pageSize,\r\n    formData: state.formData,\r\n    resetInputs: state.resetWidgetInputs.resetInputs,\r\n    gateMeeting: state.gateMeeting.isGateMeeting,\r\n    hourlyAndSeatsRedux: state.hourlyAndSeatsRedux.hourlyRedux,\r\n    hoursCount: state.formData.hours,\r\n    isBoosterSeatExistOnBackend:\r\n      state.companyProfile.isBoosterSeatExistOnBackend,\r\n    isSafetySeatExistOnBackend: state.companyProfile.isSafetySeatExistOnBackend,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCarsByType,\r\n  getCompanyCars,\r\n  setFormData,\r\n  setHourlyRedux,\r\n  setGateMeetingRedux,\r\n  setSafetySeatCount,\r\n  setBoosterSeatCount,\r\n  setDateForDefaultValue,\r\n  setTimeForDefaultValue,\r\n  setTimeForDefaultValueAMPM,\r\n  setTimeForDefaultValueAlignment,\r\n  setPassengersQuantityForBackStep,\r\n  setShowCarsWithSafetySeat,\r\n  setHoursRedux,\r\n})(AdressFormContainerComponent)\r\n\r\nconst Button = styled.button`\r\n  width: 30px !important;\r\n  height: 100% !important;\r\n  padding: 0 !important;\r\n  padding-left: 6px !important;\r\n  padding-right: 6px !important;\r\n  background: ${(props) => props.inputsBackground} !important;\r\n  /* color: $font-color; */\r\n  border: 1px solid ${(props) => props.borderColorForInnerElements} !important;\r\n  border-radius: ${(props) => props.borderRadiusesForInnerElements} !important;\r\n  cursor: pointer !important;\r\n  transition: 0.2s !important;\r\n  font-weight: 600 !important;\r\n  letter-spacing: 0 !important;\r\n\r\n  &:hover {\r\n    background: $hover-color;\r\n    color: $inner-text-on-hover;\r\n    transition: 0.2s;\r\n  }\r\n`\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\Preview\\PreviewContainerComponent.js",["322"],"import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { setNoteRedux, setOrderSum } from \"../../../../Redux/form-reducer\"\r\nimport PreviewUIComponent from \"./PreviewUIComponent\"\r\n\r\nconst PreviewContainerComponent = ({\r\n  carId,\r\n  cars,\r\n  formData,\r\n  next,\r\n  back,\r\n  setNoteRedux,\r\n  setOrderSum,\r\n  hourlyAndSeatsRedux,\r\n  gateMeeting,\r\n}) => {\r\n  const selectedCar = cars.find((car) => car.id === carId)\r\n\r\n  const [note, setNote] = React.useState(\"\")\r\n  const [distance, setDistance] = React.useState(0)\r\n\r\n  const sendNote = (note) => {\r\n    setNoteRedux(note)\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setNote(event.target.value)\r\n  }\r\n  const [carCard, setCarCard] = React.useState(0)\r\n  const [carModal, setCarModal] = React.useState(false)\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const [show, setShow] = React.useState(false)\r\n\r\n  const handleClickOpen = (id) => {\r\n    setCarModal(true)\r\n    setShow(true)\r\n  }\r\n\r\n  const handleClickClose = () => {\r\n    setCarModal(null)\r\n    setShow(false)\r\n  }\r\n\r\n  const handleClick = (id) => {\r\n    setCarCard(id)\r\n  }\r\n\r\n  let result = null\r\n  if (carModal) {\r\n    result = cars.find((cars) => carModal === cars.id)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setNote(formData.orderNotes)\r\n  }, [formData.orderNotes])\r\n\r\n  const round = (n, dp) => {\r\n    const h = +\"1\".padEnd(dp + 1, \"0\") // 10 or 100 or 1000 or etc\r\n    return Math.round(n * h) / h\r\n  }\r\n\r\n  const showCarAmount = () => {\r\n    if (selectedCar.boosterSeatPrice || selectedCar.safetySeatPrice) {\r\n      return `$${round(\r\n        selectedCar.price -\r\n          selectedCar.boosterSeatPrice -\r\n          selectedCar.safetySeatPrice,\r\n        2\r\n      )}`\r\n    } else {\r\n      return `$${round(selectedCar.price, 2)} `\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PreviewUIComponent\r\n      carId={carId}\r\n      cars={cars}\r\n      formData={formData}\r\n      next={next}\r\n      back={back}\r\n      setNoteRedux={setNoteRedux}\r\n      setOrderSum={setOrderSum}\r\n      hourlyAndSeatsRedux={hourlyAndSeatsRedux}\r\n      gateMeeting={gateMeeting}\r\n      selectedCar={selectedCar}\r\n      note={note}\r\n      setNote={setNote}\r\n      distance={distance}\r\n      setDistance={setDistance}\r\n      sendNote={sendNote}\r\n      handleChange={handleChange}\r\n      carCard={carCard}\r\n      setCarCard={setCarCard}\r\n      carModal={carModal}\r\n      setCarModal={setCarModal}\r\n      open={open}\r\n      setOpen={setOpen}\r\n      handleClickOpen={handleClickOpen}\r\n      handleClickClose={handleClickClose}\r\n      handleClick={handleClick}\r\n      round={round}\r\n      showCarAmount={showCarAmount}\r\n      show={show}\r\n      setShow={setShow}\r\n    />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cars: state.cars.cars,\r\n    formData: state.formData,\r\n    carId: state.formData.carInfo.id,\r\n    hourlyAndSeatsRedux: state.hourlyAndSeatsRedux.hourlyRedux,\r\n    gateMeeting: state.gateMeeting.isGateMeeting,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  setNoteRedux,\r\n  setOrderSum,\r\n})(PreviewContainerComponent)\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\Payment\\PaymentContainerComponent.js",["323","324","325","326","327"],"import React, { useState, useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { FormProvider, useForm } from \"react-hook-form\"\r\n// import {\r\n//   CustomFormInput,\r\n//   CustomFormInputForPayment,\r\n//   CustomMaskInput,\r\n// } from \"../CustomFormInput/CustomFormInput\"\r\n// import { makeStyles } from \"@material-ui/core/styles\"\r\n// import { BackArrowIcon } from \"../../../../assets/icons\"\r\nimport { yupResolver } from \"@hookform/resolvers/yup\"\r\nimport * as yup from \"yup\"\r\n// import Grid from \"@material-ui/core/Grid\"\r\n// import Typography from \"@material-ui/core/Typography\"\r\n// import Autocomplete from \"@material-ui/lab/Autocomplete\"\r\n// import Button from \"@material-ui/core/Button\"\r\n// import Checkbox from \"@material-ui/core/Checkbox\"\r\n// import Switch from \"@material-ui/core/Switch\"\r\n// import { Link } from \"@material-ui/core\"\r\nimport { placesApi } from \"../../../../api/api\"\r\n// import TextField from \"@material-ui/core/TextField\"\r\nimport {\r\n  // createReservation,\r\n  setPaymentForm,\r\n} from \"../../../../Redux/form-reducer\"\r\n// import PrivacyPolicy from \"../../../TermsOfUse/PrivacyPolicy/PrivacyPolicy\"\r\n// // import TermsOfUse from \"../../../TermsOfUse/TermOfUse/TermOfUse\"\r\n// import { withStyles } from \"@material-ui/styles\"\r\n// import { Number, Cvc, Expiration } from \"react-credit-card-primitives\"\r\n\r\n// import Cleave from \"cleave.js/react\"\r\nimport \"./PaymentStyles.css\"\r\n// import { AntSwitch } from \"../AdressForm/AdressFormStyles\"\r\nimport PaymentUIComponent from \"./PaymentUIComponent\"\r\n\r\nconst PaymentContainerComponent = ({\r\n  cars,\r\n  carId,\r\n  next,\r\n  back,\r\n  total,\r\n  formSummary,\r\n  setPaymentForm,\r\n}) => {\r\n  const SignupSchema = yup.object().shape({\r\n    // greetClientInfo: yup.object().shape({\r\n    //     firstName: yup.string().required('Required'),\r\n    //     phoneNumber: yup.number('Not a number').required('Required'),\r\n    //     lastName: yup.string().required('Required'),\r\n    //     email: yup.string().email('invalid email').required('Required'),\r\n    // }),\r\n    client: yup.object().shape({\r\n      firstName: yup.string().required(\"Required\"),\r\n      lastName: yup.string().required(\"Required\"),\r\n      address: yup.string().required(\"Required\"),\r\n      zip: yup.number().required(\"Required\").typeError(\"Not a number\"),\r\n      email: yup.string().email(\"invalid email\").required(\"Required\"),\r\n      phoneNumber: yup.number().required(\"Required\").typeError(\"Not a number\"),\r\n    }),\r\n    paymentInfo: yup.object().shape({\r\n      // cardNumber: yup.string().required(\"Required\"),\r\n      month: yup.string().required(\"Required\"),\r\n      cvc: yup.number().required(\"Required\").typeError(\"Not a number\"),\r\n    }),\r\n  })\r\n  const [states, setStates] = useState([])\r\n  const [cities, setCities] = useState([])\r\n  const [statesId, setStatesId] = useState(0)\r\n  const [citiesId, setCitiesId] = useState(0)\r\n  const [checked, setChecked] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true\r\n    const fetchStates = async () => {\r\n      const data = await placesApi.getStates()\r\n      if (componentMounted) {\r\n        setStates(data)\r\n      }\r\n    }\r\n    fetchStates()\r\n    return () => {\r\n      componentMounted = false\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true\r\n    const fetchCities = async (id) => {\r\n      const data = await placesApi.getCities(id)\r\n      if (componentMounted) {\r\n        setCities(data)\r\n      }\r\n    }\r\n    statesId ? fetchCities(statesId) : setCities([])\r\n    return () => {\r\n      componentMounted = false\r\n    }\r\n  }, [statesId])\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    ...methods\r\n  } = useForm({\r\n    resolver: yupResolver(SignupSchema),\r\n  })\r\n\r\n  const [riderDetails, setRiderDetails] = React.useState(true)\r\n\r\n  const inputStyle = {\r\n    WebkitBoxShadow: \"0 0 0 1000px transparent inset\",\r\n    height: \"0px\",\r\n    // width: \"100%\",\r\n  }\r\n\r\n  const [statesIdError, setStatesIdError] = React.useState(false)\r\n  const [citiesIdError, setCitiesIdError] = React.useState(false)\r\n  const [cardForPaymentSubmit, setCardForPaymentSubmit] = useState(0)\r\n  const [cardForPaymentSubmitError, setCardForPaymentSubmitError] =\r\n    useState(false)\r\n  const [restrictAmex, setRestrictAmex] = React.useState(false)\r\n\r\n  const onSubmit = (data) => {\r\n    // console.log(data)\r\n    // event.preventDefault()\r\n\r\n    const date = data.paymentInfo.month.split(\"/\")\r\n    if ((statesId, citiesId, cardForPaymentSubmit)) {\r\n      setPaymentForm(\r\n        { ...data },\r\n        citiesId,\r\n        statesId,\r\n        date,\r\n        cardForPaymentSubmit\r\n      )\r\n      next()\r\n    } else {\r\n      if (!statesId) {\r\n        setStatesIdError(true)\r\n      } else {\r\n        setStatesIdError(false)\r\n      }\r\n      if (!citiesId) {\r\n        setCitiesIdError(true)\r\n      } else {\r\n        setCitiesIdError(false)\r\n      }\r\n      if (!cardForPaymentSubmitError) {\r\n        setCardForPaymentSubmitError(true)\r\n      } else {\r\n        setCardForPaymentSubmitError(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  // const toggleAmex = () => setRestrictAmex(!restrictAmex)\r\n\r\n  const [cardType, setCardType] = useState(\"\")\r\n\r\n  const [creditCardNum, setCreditCardNum] = useState(\"#### #### #### ####\")\r\n\r\n  const handleNum = (e) => {\r\n    setCreditCardNum(e.target.rawValue)\r\n    setCardForPaymentSubmit(e.target.value)\r\n    // console.log(e.target.value)\r\n    // console.log(e.target.value);\r\n  }\r\n\r\n  const handleType = (type) => {\r\n    setCardType(type)\r\n    // console.log(type)\r\n  }\r\n\r\n  const [stateName, setStateName] = useState(\"\")\r\n  const [cityName, setCityName] = useState(\"\")\r\n\r\n  const extractStateId = (name) => {\r\n    setStateName(name)\r\n    const res = states.find((element, index, array) => {\r\n      return element.name == name\r\n    })\r\n    res ? setStatesId(res.id) : setStatesId(null)\r\n    // console.log(res)\r\n  }\r\n  const extractCityId = (name) => {\r\n    setCityName(name)\r\n    const res = cities.find((element, index, array) => {\r\n      return element.name == name\r\n    })\r\n    res ? setCitiesId(res.id) : setCitiesId(null)\r\n    // console.log(res)\r\n  }\r\n\r\n  const selectedCar = cars.find((car) => car.id === carId)\r\n\r\n  const round = (n, dp) => {\r\n    const h = +\"1\".padEnd(dp + 1, \"0\") // 10 or 100 or 1000 or etc\r\n    return Math.round(n * h) / h\r\n  }\r\n\r\n  return (\r\n    <PaymentUIComponent\r\n      next={next}\r\n      back={back}\r\n      total={total}\r\n      formSummary={formSummary}\r\n      setPaymentForm={setPaymentForm}\r\n      SignupSchema={SignupSchema}\r\n      states={states}\r\n      setStates={setStates}\r\n      cities={cities}\r\n      setCities={setCities}\r\n      statesId={statesId}\r\n      setStatesId={setStatesId}\r\n      citiesId={citiesId}\r\n      setCitiesId={setCitiesId}\r\n      checked={checked}\r\n      setChecked={setChecked}\r\n      register={register}\r\n      handleSubmit={handleSubmit}\r\n      errors={errors}\r\n      methods={methods}\r\n      riderDetails={riderDetails}\r\n      setRiderDetails={setRiderDetails}\r\n      statesIdError={statesIdError}\r\n      setStatesIdError={setStatesIdError}\r\n      citiesIdError={citiesIdError}\r\n      setCitiesIdError={setCitiesIdError}\r\n      cardForPaymentSubmit={cardForPaymentSubmit}\r\n      setCardForPaymentSubmit={setCardForPaymentSubmit}\r\n      cardForPaymentSubmitError={cardForPaymentSubmitError}\r\n      setCardForPaymentSubmitError={setCardForPaymentSubmitError}\r\n      restrictAmex={restrictAmex}\r\n      setRestrictAmex={setRestrictAmex}\r\n      onSubmit={onSubmit}\r\n      cardType={cardType}\r\n      setCardType={setCardType}\r\n      creditCardNum={creditCardNum}\r\n      setCreditCardNum={setCreditCardNum}\r\n      handleNum={handleNum}\r\n      handleType={handleType}\r\n      extractStateId={extractStateId}\r\n      extractCityId={extractCityId}\r\n      stateName={stateName}\r\n      cityName={cityName}\r\n      selectedCar={selectedCar}\r\n      round={round}\r\n    />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cars: state.cars.cars,\r\n    carId: state.formData.carInfo.id,\r\n    total: state.formData.orderSum,\r\n    formSummary: state.formData,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setPaymentForm })(\r\n  PaymentContainerComponent\r\n)\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\Payment\\PaymentUIComponent.js",["328","329","330","331","332","333","334","335","336","337","338","339"],"import React, { useState, useEffect, useContext } from \"react\"\r\nimport { FormProvider, useForm } from \"react-hook-form\"\r\nimport { CustomMaskInput } from \"../CustomFormInput/CustomFormInput\"\r\nimport styled from \"styled-components\"\r\nimport PrivacyPolicy from \"../../../TermsOfUse/PrivacyPolicy/PrivacyPolicy\"\r\nimport TermsOfUse from \"../../../TermsOfUse/TermOfUse/TermOfUse\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport \"./PaymentStyles.css\"\r\nimport styles from \"./Payment.module.scss\"\r\nimport { Switch } from \"../../../Helpers/Switch/Switch\"\r\nimport ThemeContext from \"../../../../context\"\r\nimport Autocomplete from \"@mui/material/Autocomplete\"\r\n\r\nconst PaymentUIComponent = ({\r\n  next,\r\n  back,\r\n  total,\r\n  formSummary,\r\n  setPaymentForm,\r\n  SignupSchema,\r\n  states,\r\n  setStates,\r\n  cities,\r\n  setCities,\r\n  statesId,\r\n  setStatesId,\r\n  citiesId,\r\n  setCitiesId,\r\n  checked,\r\n  setChecked,\r\n  register,\r\n  handleSubmit,\r\n  formState,\r\n  errors,\r\n  methods,\r\n  riderDetails,\r\n  setRiderDetails,\r\n  statesIdError,\r\n  setStatesIdError,\r\n  citiesIdError,\r\n  setCitiesIdError,\r\n  cardForPaymentSubmit,\r\n  setCardForPaymentSubmit,\r\n  cardForPaymentSubmitError,\r\n  setCardForPaymentSubmitError,\r\n  restrictAmex,\r\n  setRestrictAmex,\r\n  onSubmit,\r\n  cardType,\r\n  setCardType,\r\n  creditCardNum,\r\n  setCreditCardNum,\r\n  handleNum,\r\n  handleType,\r\n  extractStateId,\r\n  extractCityId,\r\n  stateName,\r\n  cityName,\r\n  selectedCar,\r\n  round,\r\n}) => {\r\n  const inputStyle = {\r\n    WebkitBoxShadow: \"0 0 0 1000px transparent inset\",\r\n    height: \"0px\",\r\n  }\r\n\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiuses,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    backAndNextButtonsFontColor,\r\n    backAndNextButtonsBorderColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n    inputsBackground,\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <form\r\n        onSubmit={handleSubmit(onSubmit)}\r\n        className={styles.formWrapper}\r\n        style={{ background: ThemeProviderAppBackgroundColor }}\r\n      >\r\n        <div className={styles.paymentWrapper}>\r\n          <div className={styles.paymentContainer}>\r\n            <div className={styles.paymentTitleContainer}>\r\n              <span\r\n                className={styles.paymentTitleSelf}\r\n                style={{ color: fontColor }}\r\n              >\r\n                Payment\r\n              </span>\r\n            </div>\r\n            <div className={styles.isPassengerCardholderContainer}>\r\n              <div className={styles.isPassengerCardholderTitleContainer}>\r\n                <span\r\n                  className={\r\n                    riderDetails\r\n                      ? styles.isPassengerCardholderTitleWhiteSelf\r\n                      : styles.isPassengerCardholderTitleGreySelf\r\n                  }\r\n                  style={{\r\n                    color: fontColor,\r\n                    opacity: riderDetails ? \"1\" : \"0.3\",\r\n                  }}\r\n                >\r\n                  Is passenger a cardholder?\r\n                </span>\r\n              </div>\r\n              <div className={styles.isPassengerCardholderSwitchContainer}>\r\n                <Switch\r\n                  checked={riderDetails}\r\n                  onClick={() => setRiderDetails(!riderDetails)}\r\n                  numberToIdentify={4}\r\n                />\r\n              </div>\r\n            </div>\r\n            {!riderDetails && (\r\n              <div className={styles.passengerDetailWrapper}>\r\n                <div className={styles.passengerDetailTitleContainer}>\r\n                  <span\r\n                    className={styles.passengerDetailTitleSelf}\r\n                    style={{ color: fontColor }}\r\n                  >\r\n                    Passenger Detail\r\n                  </span>\r\n                </div>\r\n                <div className={styles.cardholderInformationInputsWrapper}>\r\n                  <div\r\n                    className={styles.cardholderInformationInputSelfContainer}\r\n                    style={{ width: \"50%\" }}\r\n                  >\r\n                    <CardholderInformationInputSelfContainerJustForFirstAndLastName\r\n                      // className={\r\n                      //   styles.cardholderInformationInputSelfContainerJustForFirstAndLastName\r\n                      // }\r\n                      inputsFontColor={inputsFontColor}\r\n                    >\r\n                      <InputFirstAndLastName\r\n                        name=\"greetClientInfo.firstName\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"First Name\"\r\n                        defaultValue={formSummary.greetClientInfo.firstName}\r\n                        className={\r\n                          styles.cardholderInformationInputSelfFirstName\r\n                        }\r\n                        style={{\r\n                          color: inputsFontColor,\r\n                          borderLeft: `1px solid ${borderColorForInnerElements}`,\r\n                          borderTop: `1px solid ${borderColorForInnerElements}`,\r\n                          borderBottom: `1px solid ${borderColorForInnerElements}`,\r\n                          background: inputsBackground,\r\n                          borderTopLeftRadius: borderRadiusesForInnerElements,\r\n                          borderBottomLeftRadius:\r\n                            borderRadiusesForInnerElements,\r\n                        }}\r\n                        ref={register}\r\n                        inputsFontColor={inputsFontColor}\r\n                      />\r\n                    </CardholderInformationInputSelfContainerJustForFirstAndLastName>\r\n                  </div>\r\n                  <div\r\n                    className={styles.cardholderInformationInputSelfContainer2}\r\n                    style={{ width: \"50%\" }}\r\n                  >\r\n                    <InputFirstAndLastName\r\n                      name=\"greetClientInfo.lastName\"\r\n                      autoComplete=\"off\"\r\n                      defaultValue={formSummary.greetClientInfo.lastName}\r\n                      placeholder=\"Last Name\"\r\n                      className={styles.cardholderInformationInputSelfLastName}\r\n                      style={{\r\n                        color: inputsFontColor,\r\n                        borderRight: `1px solid ${borderColorForInnerElements}`,\r\n                        borderTop: `1px solid ${borderColorForInnerElements}`,\r\n                        borderBottom: `1px solid ${borderColorForInnerElements}`,\r\n                        background: inputsBackground,\r\n                        borderTopRightRadius: borderRadiusesForInnerElements,\r\n                        borderBottomRightRadius: borderRadiusesForInnerElements,\r\n                      }}\r\n                      ref={register}\r\n                      inputsFontColor={inputsFontColor}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className={styles.cardholderInformationInputsWrapper}>\r\n                  <div\r\n                    className={styles.cardholderInformationInputSelfContainer1}\r\n                  >\r\n                    <InputsDivided\r\n                      name=\"greetClientInfo.email\"\r\n                      autoComplete=\"off\"\r\n                      placeholder=\"Email\"\r\n                      defaultValue={formSummary.greetClientInfo.email}\r\n                      className={styles.cardholderInformationInputSelf}\r\n                      style={{\r\n                        color: inputsFontColor,\r\n                        border: `1px solid ${borderColorForInnerElements}`,\r\n\r\n                        background: inputsBackground,\r\n                        borderRadius: borderRadiusesForInnerElements,\r\n                      }}\r\n                      ref={register}\r\n                      inputsFontColor={inputsFontColor}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className={styles.cardholderInformationInputSelfContainer2}\r\n                  >\r\n                    <InputsDivided\r\n                      name=\"greetClientInfo.phoneNumber\"\r\n                      autoComplete=\"off\"\r\n                      defaultValue={formSummary.greetClientInfo.phoneNumber}\r\n                      placeholder=\"Phone Number\"\r\n                      className={styles.cardholderInformationInputSelf}\r\n                      style={{\r\n                        color: inputsFontColor,\r\n                        border: `1px solid ${borderColorForInnerElements}`,\r\n\r\n                        background: inputsBackground,\r\n                        borderRadius: borderRadiusesForInnerElements,\r\n                      }}\r\n                      ref={register}\r\n                      inputsFontColor={inputsFontColor}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div className={styles.cardholderInformationWrapper}>\r\n              <div className={styles.cardholderInformationTitleContainer}>\r\n                <span\r\n                  className={styles.cardholderInformationTitleSelf}\r\n                  style={{ color: fontColor }}\r\n                >\r\n                  Cardholder Information\r\n                </span>\r\n              </div>\r\n              <div className={styles.cardholderInformationInputsWrapper}>\r\n                <div\r\n                  className={styles.cardholderInformationInputSelfContainer}\r\n                  style={{ width: \"50%\" }}\r\n                >\r\n                  <CardholderInformationInputSelfContainerJustForFirstAndLastName\r\n                    // className={\r\n                    //   styles.cardholderInformationInputSelfContainerJustForFirstAndLastName\r\n                    // }\r\n                    inputsFontColor={inputsFontColor}\r\n                    style={{ width: \"100%\" }}\r\n                  >\r\n                    <InputFirstAndLastName\r\n                      name=\"client.firstName\"\r\n                      autoComplete=\"off\"\r\n                      defaultValue={formSummary.client.firstName}\r\n                      placeholder=\"First Name\"\r\n                      error={errors.client?.firstName ? true : false}\r\n                      className={styles.cardholderInformationInputSelfFirstName}\r\n                      ref={register}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        color: inputsFontColor,\r\n                        borderLeft: `1px solid ${borderColorForInnerElements}`,\r\n                        borderTop: `1px solid ${borderColorForInnerElements}`,\r\n                        borderBottom: `1px solid ${borderColorForInnerElements}`,\r\n                        background: inputsBackground,\r\n                        borderTopLeftRadius: borderRadiusesForInnerElements,\r\n                        borderBottomLeftRadius: borderRadiusesForInnerElements,\r\n                      }}\r\n                      inputsFontColor={inputsFontColor}\r\n                    />\r\n                  </CardholderInformationInputSelfContainerJustForFirstAndLastName>\r\n                  {errors.client?.firstName && (\r\n                    <p className={styles.errorInputs}>\r\n                      {errors.client?.firstName.message}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                <div\r\n                  className={styles.cardholderInformationInputSelfContainer}\r\n                  style={{ width: \"50%\" }}\r\n                >\r\n                  <InputFirstAndLastName\r\n                    name=\"client.lastName\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Last Name\"\r\n                    defaultValue={formSummary.client.lastName}\r\n                    error={errors.client?.lastName ? true : false}\r\n                    className={styles.cardholderInformationInputSelfLastName}\r\n                    ref={register}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      color: inputsFontColor,\r\n                      borderRight: `1px solid ${borderColorForInnerElements}`,\r\n                      borderTop: `1px solid ${borderColorForInnerElements}`,\r\n                      borderBottom: `1px solid ${borderColorForInnerElements}`,\r\n                      background: inputsBackground,\r\n                      borderTopRightRadius: borderRadiusesForInnerElements,\r\n                      borderBottomRightRadius: borderRadiusesForInnerElements,\r\n                    }}\r\n                    inputsFontColor={inputsFontColor}\r\n                  />\r\n                  {errors.client?.lastName && (\r\n                    <p className={styles.errorInputs}>\r\n                      {errors.client?.lastName.message}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className={styles.cardholderInformationInputsWrapper}>\r\n                <div\r\n                  className={styles.cardholderInformationInputSelfContainer1}\r\n                >\r\n                  <InputsDivided\r\n                    name=\"client.email\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Email\"\r\n                    defaultValue={formSummary.client.email}\r\n                    error={errors.client?.email ? true : false}\r\n                    className={styles.cardholderInformationInputSelf}\r\n                    style={{\r\n                      color: inputsFontColor,\r\n                      border: `1px solid ${borderColorForInnerElements}`,\r\n                      background: inputsBackground,\r\n                      borderRadius: borderRadiusesForInnerElements,\r\n                    }}\r\n                    ref={register}\r\n                    inputsFontColor={inputsFontColor}\r\n                  />\r\n                  {errors.client?.email && (\r\n                    <p className={styles.errorInputs}>\r\n                      {errors.client?.email.message}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                <div\r\n                  className={styles.cardholderInformationInputSelfContainer2}\r\n                >\r\n                  <InputsDivided\r\n                    name=\"client.phoneNumber\"\r\n                    autoComplete=\"off\"\r\n                    defaultValue={formSummary.client.phoneNumber}\r\n                    placeholder=\"Phone Number\"\r\n                    error={errors.client?.phoneNumber ? true : false}\r\n                    className={styles.cardholderInformationInputSelf}\r\n                    style={{\r\n                      color: inputsFontColor,\r\n                      border: `1px solid ${borderColorForInnerElements}`,\r\n                      background: inputsBackground,\r\n                      borderRadius: borderRadiusesForInnerElements,\r\n                    }}\r\n                    ref={register}\r\n                    inputsFontColor={inputsFontColor}\r\n                  />\r\n                  {errors.client?.phoneNumber && (\r\n                    <p className={styles.errorInputs}>\r\n                      {errors.client?.phoneNumber.message}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className={styles.cardholderInformationInputsWrapper}>\r\n                <div\r\n                  className={\r\n                    styles.cardholderInformationInputsContainerForPositionErrorMessage\r\n                  }\r\n                >\r\n                  <InputFullWidth\r\n                    name=\"client.address\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Address\"\r\n                    defaultValue={formSummary.client.address}\r\n                    ref={register}\r\n                    error={errors.client?.address ? true : false}\r\n                    className={\r\n                      styles.cardholderInformationInputWithFullWidthSelf\r\n                    }\r\n                    style={{\r\n                      width: \"100%\",\r\n                      paddingRight: \"0\",\r\n                      color: inputsFontColor,\r\n                      border: `1px solid ${borderColorForInnerElements}`,\r\n                      background: inputsBackground,\r\n                      borderRadius: borderRadiusesForInnerElements,\r\n                    }}\r\n                    inputsFontColor={inputsFontColor}\r\n                  />\r\n                  {errors.client?.address && (\r\n                    <p className={styles.errorInputs}>\r\n                      {errors.client?.address.message}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className={styles.cardholderInformationInputsWrapper}>\r\n                <div\r\n                  className={\r\n                    styles.cardholderInformationInputsContainerForPositionErrorMessageState\r\n                  }\r\n                  style={{ color: inputsFontColor }}\r\n                >\r\n                  <Autocomplete\r\n                    disablePortal\r\n                    onChange={(event, newValue) => {\r\n                      // console.log(newValue)\r\n                      newValue ? extractStateId(newValue) : setStatesId(null)\r\n                    }}\r\n                    options={states.map((state) => state.name)}\r\n                    renderInput={(params) => (\r\n                      <div ref={params.InputProps.ref}>\r\n                        <InputFullWidth\r\n                          type=\"text\"\r\n                          {...params.inputProps}\r\n                          placeholder=\"State\"\r\n                          className={\r\n                            styles.cardholderInformationInputWithFullWidthSelfState\r\n                          }\r\n                          style={{\r\n                            width: \"100%\",\r\n                            paddingRight: \"0\",\r\n                            color: inputsFontColor,\r\n                            border: `1px solid ${borderColorForInnerElements}`,\r\n                            background: inputsBackground,\r\n                            borderRadius: borderRadiusesForInnerElements,\r\n                          }}\r\n                          inputsFontColor={inputsFontColor}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  />\r\n\r\n                  {statesIdError && (\r\n                    <p className={styles.errorInputs}>Required</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className={styles.cardholderInformationInputsWrapper}>\r\n                <div\r\n                  className={\r\n                    styles.cardholderInformationInputSelfContainer1City\r\n                  }\r\n                  style={{ color: inputsFontColor }}\r\n                >\r\n                  <Autocomplete\r\n                    disablePortal\r\n                    onChange={(event, newValue) => {\r\n                      // console.log(cities)\r\n                      newValue ? extractCityId(newValue) : setCitiesId(null)\r\n                    }}\r\n                    options={cities.map((city) => city.name)}\r\n                    renderInput={(params) => (\r\n                      <div ref={params.InputProps.ref}>\r\n                        <InputsDivided\r\n                          type=\"text\"\r\n                          {...params.inputProps}\r\n                          className={styles.cardholderInformationInputSelf}\r\n                          placeholder=\"City\"\r\n                          style={{\r\n                            width: \"100%\",\r\n                            paddingRight: \"25px\",\r\n                            boxSizing: \"border-box\",\r\n                            color: inputsFontColor,\r\n                            border: `1px solid ${borderColorForInnerElements}`,\r\n                            background: inputsBackground,\r\n                            borderRadius: borderRadiusesForInnerElements,\r\n                          }}\r\n                          inputsFontColor={inputsFontColor}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  />\r\n\r\n                  {citiesIdError && (\r\n                    <p className={styles.errorInputs}>Required</p>\r\n                  )}\r\n                </div>\r\n                <div\r\n                  className={styles.cardholderInformationInputSelfContainer2}\r\n                >\r\n                  <InputsDivided\r\n                    name=\"client.zip\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"ZIP\"\r\n                    ref={register}\r\n                    defaultValue={formSummary.client.zip}\r\n                    error={errors.client?.address ? true : false}\r\n                    className={styles.cardholderInformationInputSelf}\r\n                    style={{\r\n                      color: inputsFontColor,\r\n                      border: `1px solid ${borderColorForInnerElements}`,\r\n                      background: inputsBackground,\r\n                      borderRadius: borderRadiusesForInnerElements,\r\n                    }}\r\n                    inputsFontColor={inputsFontColor}\r\n                  />\r\n                  {errors.client?.zip && (\r\n                    <p className={styles.errorInputs}>\r\n                      {errors.client?.zip.message}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={styles.cardInformationWrapper}>\r\n              <div className={styles.cardInformationTitleContainer}>\r\n                <span\r\n                  className={styles.cardInformationTitleSelf}\r\n                  style={{ color: fontColor }}\r\n                >\r\n                  Card information\r\n                </span>\r\n              </div>\r\n              <div className={styles.cardholderInformationInputsWrapper}>\r\n                <div\r\n                  className={\r\n                    styles.cardholderInformationInputsContainerForPositionErrorMessage\r\n                  }\r\n                >\r\n                  <Cleave\r\n                    delimiter=\"-\"\r\n                    options={{\r\n                      creditCard: true,\r\n                      onCreditCardTypeChanged: handleType,\r\n                    }}\r\n                    name=\"paymentInfo.cardNumber\"\r\n                    error={errors.paymentInfo?.cardNumber ? true : false}\r\n                    onChange={handleNum}\r\n                    placeholder=\"Card number\"\r\n                    className={\r\n                      styles.cardholderInformationInputWithFullWidthSelf\r\n                    }\r\n                    style={{\r\n                      color: inputsFontColor,\r\n                      border: `1px solid ${borderColorForInnerElements}`,\r\n                      background: inputsBackground,\r\n                      borderRadius: borderRadiusesForInnerElements,\r\n                    }}\r\n                  />\r\n\r\n                  {cardForPaymentSubmitError && (\r\n                    <p className={styles.errorInputs}>Required</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className={styles.cardholderInformationInputsWrapper}>\r\n                <div\r\n                  className={styles.cardholderInformationInputSelfContainer1}\r\n                >\r\n                  <CustomMaskInput\r\n                    name=\"paymentInfo.month\"\r\n                    ref={register}\r\n                    mask=\"99/99\"\r\n                    autoComplete=\"off\"\r\n                    defaultValue={`${formSummary.paymentInfo.month}/${formSummary.paymentInfo.year}`}\r\n                  >\r\n                    {() => (\r\n                      <input\r\n                        placeholder=\"mm/yy\"\r\n                        autoComplete=\"off\"\r\n                        error={errors.paymentInfo?.month ? true : false}\r\n                        className={styles.cardholderInformationInputSelf}\r\n                        style={{\r\n                          color: inputsFontColor,\r\n                          border: `1px solid ${borderColorForInnerElements}`,\r\n                          background: inputsBackground,\r\n                          borderRadius: borderRadiusesForInnerElements,\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </CustomMaskInput>\r\n                  {errors.paymentInfo?.month && (\r\n                    <p className={styles.errorInputs}>\r\n                      {errors.paymentInfo?.month.message}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                <div\r\n                  className={styles.cardholderInformationInputSelfContainer2}\r\n                >\r\n                  <CustomMaskInput\r\n                    name=\"paymentInfo.cvc\"\r\n                    ref={register}\r\n                    mask={cardType == \"amex\" ? \"9999\" : \"999\"}\r\n                    autoComplete=\"off\"\r\n                    defaultValue={formSummary.paymentInfo.cvc}\r\n                  >\r\n                    {() => (\r\n                      <InputsDivided\r\n                        placeholder=\"CVV/CVC\"\r\n                        autoComplete=\"off\"\r\n                        error={errors.paymentInfo?.cvc ? true : false}\r\n                        className={styles.cardholderInformationInputSelf}\r\n                        style={{\r\n                          color: inputsFontColor,\r\n                          border: `1px solid ${borderColorForInnerElements}`,\r\n                          background: inputsBackground,\r\n                          borderRadius: borderRadiusesForInnerElements,\r\n                        }}\r\n                        inputsFontColor={inputsFontColor}\r\n                      />\r\n                    )}\r\n                  </CustomMaskInput>\r\n                  {errors.paymentInfo?.cvc && (\r\n                    <p className={styles.errorInputs}>\r\n                      {errors.paymentInfo?.cvc.message}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={styles.checkboxWrapper}>\r\n              <CheckboxLabel id=\"input\">\r\n                <CheckboxInput\r\n                  type=\"checkbox\"\r\n                  onClick={() => setChecked(!checked)}\r\n                  htmlFor=\"input\"\r\n                />\r\n                <CheckboxSpan fontColor={fontColor}></CheckboxSpan>\r\n              </CheckboxLabel>\r\n              <TermsOfUse />\r\n              <PrivacyPolicy />\r\n            </div>\r\n            <div className={styles.buttonGroupBlock}>\r\n              <div className={styles.buttonGroupBlockContainer}>\r\n                <button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={back}\r\n                  className={styles.buttonBackSelf}\r\n                  style={{\r\n                    background: backAndNextButtonsColor,\r\n                    color: backAndNextButtonsFontColor,\r\n                    border: `1px solid ${backAndNextButtonsBorderColor}`,\r\n                    borderRadius: borderRadiusesForInnerElements,\r\n                  }}\r\n                >\r\n                  Back\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={!checked}\r\n                  className={styles.buttonNextSelf}\r\n                  style={{\r\n                    opacity: !checked ? \"0.5\" : \"1\",\r\n                    background: backAndNextButtonsColor,\r\n                    color: backAndNextButtonsFontColor,\r\n                    border: `1px solid ${backAndNextButtonsBorderColor}`,\r\n                    borderRadius: borderRadiusesForInnerElements,\r\n                  }}\r\n                >\r\n                  Pay ${round(total + selectedCar.transactionFee, 2)}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </FormProvider>\r\n  )\r\n}\r\n\r\nexport default PaymentUIComponent\r\n\r\nconst CardholderInformationInputSelfContainerJustForFirstAndLastName = styled.div`\r\n  /* width: 50%; */\r\n  position: relative !important;\r\n  &:after {\r\n    position: absolute !important;\r\n    content: \"\" !important;\r\n    border-right: 1px solid ${(props) => props.inputsFontColor}!important;\r\n    top: 28% !important;\r\n    right: 0 !important;\r\n    width: 1px !important;\r\n    height: 44% !important;\r\n    margin-top: auto !important;\r\n    margin-bottom: auto !important;\r\n  }\r\n  display: flex !important;\r\n  flex-direction: column !important;\r\n  justify-content: center !important;\r\n  align-items: flex-start !important;\r\n`\r\n\r\nconst CheckboxLabel = styled.label`\r\n  position: relative !important;\r\n  // padding-left: 35px;\r\n  display: initial !important;\r\n  margin-bottom: 12px !important;\r\n  cursor: pointer !important;\r\n  font-size: 22px !important;\r\n  -webkit-user-select: none !important;\r\n  -moz-user-select: none !important;\r\n  -ms-user-select: none !important;\r\n  user-select: none !important;\r\n  margin-right: 40px !important;\r\n  &:hover {\r\n    span {\r\n      -webkit-box-shadow: 0px 0px 5px -1px #ffffff !important;\r\n      box-shadow: 0px 0px 5px -1px #ffffff !important;\r\n    }\r\n  }\r\n  input:checked ~ span {\r\n    background-color: transparent !important;\r\n  }\r\n\r\n  input:checked ~ span:after {\r\n    display: block !important;\r\n  }\r\n`\r\nconst CheckboxSpan = styled.span`\r\n  position: absolute !important;\r\n  top: 0 !important;\r\n  left: 0 !important;\r\n  height: 25px !important;\r\n  width: 25px !important;\r\n  background-color: transparent !important;\r\n  border: 1px solid ${(props) => props.fontColor}!important;\r\n  border-radius: 5px !important;\r\n  &:after {\r\n    content: \"\" !important;\r\n    position: absolute !important;\r\n    display: none !important;\r\n  }\r\n  &:after {\r\n    left: 9px !important;\r\n    top: 5px !important;\r\n    width: 5px !important;\r\n    height: 10px !important;\r\n    border: solid ${(props) => props.fontColor}!important;\r\n    border-width: 0 3px 3px 0 !important;\r\n    -webkit-transform: rotate(45deg) !important;\r\n    -ms-transform: rotate(45deg) !important;\r\n    transform: rotate(45deg) !important;\r\n  }\r\n`\r\n\r\nconst CheckboxInput = styled.input`\r\n  position: absolute !important;\r\n  opacity: 0 !important;\r\n  cursor: pointer !important;\r\n  height: 0 !important;\r\n  width: 0 !important;\r\n\r\n  &:checked + ${CheckboxSpan} {\r\n    &:after {\r\n      display: block !important;\r\n    }\r\n  }\r\n  &:checked + ${CheckboxSpan} {\r\n    background-color: transparent !important;\r\n  }\r\n`\r\n\r\nconst InputFirstAndLastName = styled.input`\r\n  box-sizing: border-box !important;\r\n  width: 100% !important;\r\n  height: 35px !important;\r\n  padding: 0 !important;\r\n  text-indent: 20px !important;\r\n  padding-top: 0 !important;\r\n  padding-bottom: 0 !important;\r\n  font-size: 13.5px !important;\r\n  &::placeholder {\r\n    /* Chrome, Firefox, Opera, Safari 10.1+ */\r\n    font-size: 13.5px !important;\r\n    color: ${(props) => props.inputsFontColor}!important;\r\n    opacity: 1 !important; /* Firefox */\r\n  }\r\n  &:-ms-input-placeholder {\r\n    /* Internet Explorer 10-11 */\r\n    font-size: 13.5px !important;\r\n    color: ${(props) => props.inputsFontColor}!important;\r\n  }\r\n  &::-ms-input-placeholder {\r\n    /* Microsoft Edge */\r\n    font-size: 13.5px !important;\r\n    color: ${(props) => props.inputsFontColor}!important;\r\n  }\r\n  &:focus {\r\n    outline: none !important;\r\n  }\r\n`\r\nconst InputsDivided = styled.input`\r\n  box-sizing: border-box !important;\r\n  width: 100% !important;\r\n  height: 35px !important;\r\n  padding: 0 !important;\r\n  text-indent: 20px !important;\r\n  padding-top: 0 !important;\r\n  padding-bottom: 0 !important;\r\n  font-size: 13.5px !important;\r\n  &::placeholder {\r\n    /* Chrome, Firefox, Opera, Safari 10.1+ */\r\n    font-size: 13.5px !important;\r\n    color: ${(props) => props.inputsFontColor}!important;\r\n    opacity: 1 !important; /* Firefox */\r\n  }\r\n  &:-ms-input-placeholder {\r\n    /* Internet Explorer 10-11 */\r\n    font-size: 13.5px;\r\n    color: ${(props) => props.inputsFontColor};\r\n  }\r\n  &::-ms-input-placeholder {\r\n    /* Microsoft Edge */\r\n    font-size: 13.5px !important;\r\n    color: ${(props) => props.inputsFontColor}!important;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`\r\n\r\nconst InputFullWidth = styled.input`\r\n  box-sizing: border-box !important;\r\n  width: 100% !important;\r\n  height: 35px !important;\r\n  padding: 0 !important;\r\n  text-indent: 20px !important;\r\n  &::placeholder {\r\n    /* Chrome, Firefox, Opera, Safari 10.1+ */\r\n    color: ${(props) => props.inputsFontColor}!important;\r\n    opacity: 1 !important; /* Firefox */\r\n  }\r\n  &:-ms-input-placeholder {\r\n    /* Internet Explorer 10-11 */\r\n    color: ${(props) => props.inputsFontColor}!important;\r\n  }\r\n  &::-ms-input-placeholder {\r\n    /* Microsoft Edge */\r\n    color: ${(props) => props.inputsFontColor}!important;\r\n  }\r\n  &:focus {\r\n    outline: none !important;\r\n  }\r\n`\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\Preview\\PreviewUIComponent.js",["340","341","342","343","344","345","346","347","348","349","350","351","352","353"],"import { useMediaQuery } from \"@material-ui/core\"\r\nimport React, { useContext } from \"react\"\r\nimport { AspectRatio } from \"react-aspect-ratio\"\r\nimport Carousel, { consts } from \"react-material-ui-carousel\"\r\nimport { BackArrowIcon, ForwardArrowIcon } from \"../../../../assets/icons\"\r\nimport Directions from \"../../../GoogleMap/Directions/Directions\"\r\nimport styles from \"./Preview.module.scss\"\r\nimport { Modal } from \"../../../Helpers/Modal/Modal\"\r\nimport ThemeContext from \"../../../../context\"\r\nimport styled from \"styled-components\"\r\nimport Slider from \"react-slick\"\r\nimport \"slick-carousel/slick/slick.css\"\r\nimport \"slick-carousel/slick/slick-theme.css\"\r\nimport \"../FleetForm/FleetForm.css\"\r\n\r\nfunction SampleNextArrow(props) {\r\n  const { className, style, onClick } = props\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{ ...style, display: \"block\", right: \"0\", zIndex: \"30\" }}\r\n      onClick={onClick}\r\n    />\r\n  )\r\n}\r\n\r\nfunction SamplePrevArrow(props) {\r\n  const { className, style, onClick } = props\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{ ...style, display: \"block\", left: \"0\", zIndex: \"30\" }}\r\n      onClick={onClick}\r\n    />\r\n  )\r\n}\r\n\r\nconst PreviewUIComponent = ({\r\n  carId,\r\n  cars,\r\n  formData,\r\n  next,\r\n  back,\r\n  setNoteRedux,\r\n  setOrderSum,\r\n  hourlyAndSeatsRedux,\r\n  gateMeeting,\r\n  selectedCar,\r\n  note,\r\n  setNote,\r\n  distance,\r\n  setDistance,\r\n  sendNote,\r\n  handleChange,\r\n  carCard,\r\n  setCarCard,\r\n  carModal,\r\n  setCarModal,\r\n  open,\r\n  setOpen,\r\n  handleClickOpen,\r\n  handleClickClose,\r\n  handleClick,\r\n  round,\r\n  showCarAmount,\r\n  show,\r\n  setShow,\r\n}) => {\r\n  const isMobile = useMediaQuery(\"(max-width:500px)\")\r\n  // console.log(formData.orderStartDateTime)\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    nextArrow: <SampleNextArrow />,\r\n    prevArrow: <SamplePrevArrow />,\r\n    appendDots: (dots) => (\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          height: \"6px\",\r\n          backgroundColor: \"transparent\",\r\n          // borderRadius: \"10px\",\r\n          padding: \"0\",\r\n          bottom: \"10px\",\r\n        }}\r\n      >\r\n        <ul style={{ margin: \"0px\", paddingLeft: \"0px\", textAlign: \"center\" }}>\r\n          {dots}\r\n        </ul>\r\n      </div>\r\n    ),\r\n    // customPaging: function (i) {\r\n    //   return (\r\n    //     <div\r\n    //     // style={{\r\n    //     //   width: \"3px\",\r\n    //     //   height: \"3px\",\r\n    //     //   background: \"red\",\r\n\r\n    //     //   // bottom: \"6px\",\r\n    //     // }}\r\n    //     ></div>\r\n    //   )\r\n    // },\r\n    dotsClass: \"button__bar\",\r\n  }\r\n\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiuses,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    backAndNextButtonsFontColor,\r\n    backAndNextButtonsBorderColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n    fleetCarsBackgroundColor,\r\n    dotsLineColor,\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div\r\n      className={styles.previewWrapper}\r\n      style={{ background: ThemeProviderAppBackgroundColor }}\r\n    >\r\n      <div className={styles.previewTitleContainer}>\r\n        <span className={styles.previewTitleSelf} style={{ color: fontColor }}>\r\n          Preview\r\n        </span>\r\n      </div>\r\n\r\n      <div className={styles.directionsContainer}>\r\n        <Directions\r\n          destinations={formData.orderAddressDetails}\r\n          setDistance={setDistance}\r\n        />\r\n      </div>\r\n      <div\r\n        className={styles.reservationDetailsContainer}\r\n        style={{\r\n          zIndex: \"15\",\r\n          backgroundColor: ThemeProviderAppBackgroundColor,\r\n        }}\r\n      >\r\n        <div\r\n          className={styles.carContainer}\r\n          style={{\r\n            background: fleetCarsBackgroundColor,\r\n            border: `1px solid ${borderColorForInnerElements}`,\r\n            borderRadius: borderRadiusesForInnerElements,\r\n          }}\r\n        >\r\n          <div className={styles.carImageBlock}>\r\n            <Slider {...settings} className={styles.carImageSelf}>\r\n              {selectedCar.imageUrls.length !== 0 ? (\r\n                selectedCar.imageUrls.map((url) => (\r\n                  <span\r\n                    key={url.id}\r\n                    // variant=\"outlined\"\r\n                    // color=\"primary\"\r\n                  >\r\n                    <div\r\n                      className={styles.orSimiliar}\r\n                      style={{\r\n                        background: fleetCarsBackgroundColor,\r\n                        color: fontColor,\r\n                      }}\r\n                    >\r\n                      or similar\r\n                    </div>\r\n\r\n                    <img\r\n                      src={url.path}\r\n                      // style={{\r\n                      //   width: !isMobile ? \"100%\" : \"100%\",\r\n                      //   height: !isMobile ? \"118px\" : \"116px\",\r\n                      //   borderRadius: \"9px\",\r\n                      //   cursor: \"zoom-in\",\r\n                      // }}\r\n                      alt=\"car\"\r\n                      onClick={() => handleClickOpen()}\r\n                      className={styles.carImageSelf}\r\n                      style={{\r\n                        // display: \"block\",\r\n                        width: !isMobile ? \"100%\" : \"100%\",\r\n                        height: !isMobile ? \"112px\" : \"116px\",\r\n                        borderTopLeftRadius: borderRadiusesForInnerElements,\r\n                        cursor: \"zoom-in\",\r\n                      }}\r\n                    />\r\n                  </span>\r\n                ))\r\n              ) : (\r\n                <>\r\n                  <span\r\n                    className={styles.orSimiliar}\r\n                    style={{\r\n                      background: fleetCarsBackgroundColor,\r\n                      color: fontColor,\r\n                    }}\r\n                  >\r\n                    or similar\r\n                  </span>\r\n                  <AspectRatio\r\n                    // ratio=\"560/315\"\r\n                    style={{\r\n                      display: \"block\",\r\n                      width: !isMobile ? \"100%\" : \"100%\",\r\n                      height: !isMobile ? \"112px\" : \"116px\",\r\n                      borderTopLeftRadius: borderRadiusesForInnerElements,\r\n                      cursor: \"zoom-in\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={\"https://fl-1.cdn.flockler.com/embed/not-found.png\"}\r\n                      // style={{\r\n                      //   width: !isMobile ? \"100%\" : \"100%\",\r\n                      //   height: !isMobile ? \"118px\" : \"116px\",\r\n                      //   borderRadius: \"9px\",\r\n                      // }}\r\n                      alt=\"car\"\r\n                      className={styles.carImageSelf}\r\n                    />\r\n                  </AspectRatio>\r\n                </>\r\n              )}\r\n            </Slider>\r\n            <Modal onClose={() => handleClickClose()} show={show}>\r\n              <Slider\r\n                {...settings}\r\n                style={{\r\n                  width: !isMobile ? \"550px\" : \"239px\",\r\n                  height: !isMobile ? \"400px\" : \"170px\",\r\n                }}\r\n                // className={styles.modalSlider}\r\n              >\r\n                {selectedCar.imageUrls.map((url) => (\r\n                  <AspectRatio\r\n                    ratio=\"4/3\"\r\n                    style={{\r\n                      width: !isMobile ? \"550px\" : \"257px\",\r\n                      height: !isMobile ? \"400px\" : \"170px\",\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={url.path}\r\n                      style={{\r\n                        borderRadius: \"8px\",\r\n                        width: !isMobile ? \"550px\" : \"257px\",\r\n                        height: !isMobile ? \"400px\" : \"170px\",\r\n                      }}\r\n                      alt=\"car\"\r\n                      key={`${url.id}${url.path}`}\r\n                    />\r\n                  </AspectRatio>\r\n                ))}\r\n              </Slider>\r\n            </Modal>\r\n          </div>\r\n          <div className={styles.carDescriptionTextBlock}>\r\n            <div className={styles.carDescriptionTextContainer}>\r\n              <span\r\n                className={styles.carModel}\r\n                style={{\r\n                  color: fontColor,\r\n                }}\r\n              >\r\n                {selectedCar.make} {selectedCar.model}\r\n              </span>\r\n\r\n              <div className={styles.detailedDescription}>\r\n                <div className={styles.detailedDescriptionTitleContainer}>\r\n                  <span\r\n                    className={styles.detailedDescriptionTitleSelf}\r\n                    style={{\r\n                      color: fontColor,\r\n                    }}\r\n                  >\r\n                    Type\r\n                  </span>\r\n                </div>\r\n                <div className={styles.detailedDescriptionPointedLineContainer}>\r\n                  <div\r\n                    className={styles.detailedDescriptionPointedLineSelf}\r\n                    style={{\r\n                      borderBottom: `2px dotted ${dotsLineColor}`,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className={styles.detailedDescriptionValueContainer}>\r\n                  <span\r\n                    className={styles.detailedDescriptionValueSelf}\r\n                    style={{\r\n                      color: fontColor,\r\n                    }}\r\n                  >\r\n                    {selectedCar.type}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className={styles.detailedDescription}>\r\n                <div className={styles.detailedDescriptionTitleContainer}>\r\n                  <span\r\n                    className={styles.detailedDescriptionTitleSelf}\r\n                    style={{\r\n                      color: fontColor,\r\n                    }}\r\n                  >\r\n                    Capacity\r\n                  </span>\r\n                </div>\r\n                <div className={styles.detailedDescriptionPointedLineContainer}>\r\n                  <div\r\n                    className={styles.detailedDescriptionPointedLineSelf}\r\n                    style={{\r\n                      borderBottom: `2px dotted ${dotsLineColor}`,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className={styles.detailedDescriptionValueContainer}>\r\n                  <span\r\n                    className={styles.detailedDescriptionValueSelf}\r\n                    style={{\r\n                      color: fontColor,\r\n                    }}\r\n                  >\r\n                    {selectedCar.capacity}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className={styles.detailedDescription}>\r\n                <div className={styles.detailedDescriptionTitleContainer}>\r\n                  <span\r\n                    className={styles.detailedDescriptionTitleSelf}\r\n                    style={{\r\n                      color: fontColor,\r\n                    }}\r\n                  >\r\n                    Color\r\n                  </span>\r\n                </div>\r\n                <div className={styles.detailedDescriptionPointedLineContainer}>\r\n                  <div\r\n                    className={styles.detailedDescriptionPointedLineSelf}\r\n                    style={{\r\n                      borderBottom: `2px dotted ${dotsLineColor}`,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className={styles.detailedDescriptionValueContainer}>\r\n                  <span\r\n                    className={styles.detailedDescriptionValueSelf}\r\n                    style={{\r\n                      color: fontColor,\r\n                    }}\r\n                  >\r\n                    {selectedCar.color}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className={styles.detailedDescription}>\r\n                <div className={styles.detailedDescriptionTitleContainer}>\r\n                  <span\r\n                    className={styles.detailedDescriptionTitleSelf}\r\n                    style={{\r\n                      color: fontColor,\r\n                    }}\r\n                  >\r\n                    Amount\r\n                  </span>\r\n                </div>\r\n                <div className={styles.detailedDescriptionPointedLineContainer}>\r\n                  <div\r\n                    className={styles.detailedDescriptionPointedLineSelf}\r\n                    style={{\r\n                      borderBottom: `2px dotted ${dotsLineColor}`,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className={styles.detailedDescriptionValueContainer}>\r\n                  <span\r\n                    className={styles.detailedDescriptionValueAmountSelf}\r\n                    style={{\r\n                      color: fontColor,\r\n                    }}\r\n                  >\r\n                    {gateMeeting\r\n                      ? `$${round(\r\n                          selectedCar.price -\r\n                            selectedCar.greetAndMeetPrice -\r\n                            selectedCar.boosterSeatPrice -\r\n                            selectedCar.safetySeatPrice,\r\n                          2\r\n                        )}`\r\n                      : showCarAmount()}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={styles.reservationDetailsItem}>\r\n          <div className={styles.reservationDetailsItemContainer}>\r\n            <div className={styles.reservationDetailsItemTitleContainer}>\r\n              <span\r\n                className={styles.reservationDetailsItemTitleSelf}\r\n                style={{\r\n                  color: fontColor,\r\n                }}\r\n              >\r\n                Date\r\n              </span>\r\n            </div>\r\n            <div className={styles.reservationDetailsItemPointedLineContainer}>\r\n              <div\r\n                className={styles.reservationDetailsItemPointedLineSelf}\r\n                style={{\r\n                  borderBottom: `2px dotted ${dotsLineColor}`,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={styles.reservationDetailsItemValueContainer}>\r\n              <span\r\n                className={styles.reservationDetailsItemValueSelf}\r\n                style={{\r\n                  color: fontColor,\r\n                }}\r\n              >\r\n                {formData.orderStartDateTime.match(\r\n                  /(\\d{1,4}([.\\-/])\\d{1,2}([.\\-/])\\d{1,4})/g\r\n                )}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.reservationDetailsItem}>\r\n          <div className={styles.reservationDetailsItemContainer}>\r\n            <div className={styles.reservationDetailsItemTitleContainer}>\r\n              <span\r\n                className={styles.reservationDetailsItemTitleSelf}\r\n                style={{\r\n                  color: fontColor,\r\n                }}\r\n              >\r\n                Time\r\n              </span>\r\n            </div>\r\n            <div className={styles.reservationDetailsItemPointedLineContainer}>\r\n              <div\r\n                className={styles.reservationDetailsItemPointedLineSelf}\r\n                style={{\r\n                  borderBottom: `2px dotted ${dotsLineColor}`,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={styles.reservationDetailsItemValueContainer}>\r\n              <span\r\n                className={styles.reservationDetailsItemValueSelf}\r\n                style={{\r\n                  color: fontColor,\r\n                }}\r\n              >\r\n                {new Date(formData.orderStartDateTime).toLocaleTimeString(\r\n                  \"en-US\",\r\n                  {\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\",\r\n                  }\r\n                )}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.reservationDetailsItem}>\r\n          <div className={styles.reservationDetailsItemContainer}>\r\n            <div className={styles.reservationDetailsItemTitleContainer}>\r\n              <span\r\n                className={styles.reservationDetailsItemTitleSelf}\r\n                style={{\r\n                  color: fontColor,\r\n                }}\r\n              >\r\n                From\r\n              </span>\r\n            </div>\r\n            <div className={styles.reservationDetailsItemPointedLineContainer}>\r\n              <div\r\n                className={styles.reservationDetailsItemPointedLineSelf}\r\n                style={{\r\n                  borderBottom: `2px dotted ${dotsLineColor}`,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={styles.reservationDetailsItemValueContainer}>\r\n              <span\r\n                className={styles.reservationDetailsItemValueSelf}\r\n                style={{\r\n                  color: fontColor,\r\n                }}\r\n              >\r\n                {formData.orderAddressDetails[0].rideCheckPoint}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.reservationDetailsItem}>\r\n          <div className={styles.reservationDetailsItemContainer}>\r\n            <div className={styles.reservationDetailsItemTitleContainer}>\r\n              <span\r\n                className={styles.reservationDetailsItemTitleSelf}\r\n                style={{\r\n                  color: fontColor,\r\n                }}\r\n              >\r\n                To\r\n              </span>\r\n            </div>\r\n            <div className={styles.reservationDetailsItemPointedLineContainer}>\r\n              <div\r\n                className={styles.reservationDetailsItemPointedLineSelf}\r\n                style={{\r\n                  borderBottom: `2px dotted ${dotsLineColor}`,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={styles.reservationDetailsItemValueContainer}>\r\n              <span\r\n                className={styles.reservationDetailsItemValueSelf}\r\n                style={{\r\n                  color: fontColor,\r\n                }}\r\n              >\r\n                {\r\n                  formData.orderAddressDetails[\r\n                    formData.orderAddressDetails.length - 1\r\n                  ].rideCheckPoint\r\n                }\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.reservationDetailsItem}>\r\n          <div className={styles.reservationDetailsItemContainer}>\r\n            <div className={styles.reservationDetailsItemTitleContainer}>\r\n              <span\r\n                className={styles.reservationDetailsItemTitleSelf}\r\n                style={{\r\n                  color: fontColor,\r\n                }}\r\n              >\r\n                Vehicle\r\n              </span>\r\n            </div>\r\n            <div className={styles.reservationDetailsItemPointedLineContainer}>\r\n              <div\r\n                className={styles.reservationDetailsItemPointedLineSelf}\r\n                style={{\r\n                  borderBottom: `2px dotted ${dotsLineColor}`,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={styles.reservationDetailsItemValueContainer}>\r\n              <span\r\n                className={styles.reservationDetailsItemValueSelf}\r\n                style={{\r\n                  color: fontColor,\r\n                }}\r\n              >\r\n                {selectedCar.type}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.reservationDetailsItem}>\r\n          <div className={styles.reservationDetailsItemContainer}>\r\n            <div className={styles.reservationDetailsItemTitleContainer}>\r\n              <span\r\n                className={styles.reservationDetailsItemTitleSelf}\r\n                style={{\r\n                  color: fontColor,\r\n                }}\r\n              >\r\n                Total distance\r\n              </span>\r\n            </div>\r\n            <div className={styles.reservationDetailsItemPointedLineContainer}>\r\n              <div\r\n                className={styles.reservationDetailsItemPointedLineSelf}\r\n                style={{\r\n                  borderBottom: `2px dotted ${dotsLineColor}`,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={styles.reservationDetailsItemValueContainer}>\r\n              <span\r\n                className={styles.reservationDetailsItemValueSelf}\r\n                style={{\r\n                  color: fontColor,\r\n                }}\r\n              >\r\n                {distance} miles\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.reservationDetailsItem}>\r\n          <div className={styles.reservationDetailsItemContainer}>\r\n            <div className={styles.reservationDetailsItemTitleContainer}>\r\n              <span\r\n                className={styles.reservationDetailsItemTitleSelf}\r\n                style={{\r\n                  color: fontColor,\r\n                }}\r\n              >\r\n                Number of Passengers\r\n              </span>\r\n            </div>\r\n            <div className={styles.reservationDetailsItemPointedLineContainer}>\r\n              <div\r\n                className={styles.reservationDetailsItemPointedLineSelf}\r\n                style={{\r\n                  borderBottom: `2px dotted ${dotsLineColor}`,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={styles.reservationDetailsItemValueContainer}>\r\n              <span\r\n                className={styles.reservationDetailsItemValueSelf}\r\n                style={{\r\n                  color: fontColor,\r\n                }}\r\n              >\r\n                {formData.passengersQuantity}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.reservationDetailsItem}>\r\n          <div className={styles.reservationDetailsItemContainer}>\r\n            <div className={styles.reservationDetailsItemTitleContainer}>\r\n              <span\r\n                className={styles.reservationDetailsItemTitleSelf}\r\n                style={{\r\n                  color: fontColor,\r\n                }}\r\n              >\r\n                Transaction Fee\r\n              </span>\r\n            </div>\r\n            <div className={styles.reservationDetailsItemPointedLineContainer}>\r\n              <div\r\n                className={styles.reservationDetailsItemPointedLineSelf}\r\n                style={{\r\n                  borderBottom: `2px dotted ${dotsLineColor}`,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={styles.reservationDetailsItemValueContainer}>\r\n              <span\r\n                className={styles.reservationDetailsItemValueSelf}\r\n                style={{\r\n                  color: fontColor,\r\n                }}\r\n              >\r\n                {`$${selectedCar.transactionFee}`}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {hourlyAndSeatsRedux && (\r\n          <div className={styles.reservationDetailsItem}>\r\n            <div className={styles.reservationDetailsItemContainer}>\r\n              <div className={styles.reservationDetailsItemTitleContainer}>\r\n                <span\r\n                  className={styles.reservationDetailsItemTitleSelf}\r\n                  style={{\r\n                    color: fontColor,\r\n                  }}\r\n                >\r\n                  Hours\r\n                </span>\r\n              </div>\r\n              <div\r\n                className={styles.reservationDetailsItemPointedLineContainer}\r\n              >\r\n                <div\r\n                  className={styles.reservationDetailsItemPointedLineSelf}\r\n                  style={{\r\n                    borderBottom: `2px dotted ${dotsLineColor}`,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className={styles.reservationDetailsItemValueContainer}>\r\n                <span\r\n                  className={styles.reservationDetailsItemValueSelf}\r\n                  style={{\r\n                    color: fontColor,\r\n                  }}\r\n                >\r\n                  {formData.hours}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <>\r\n          {selectedCar.boosterSeatPrice == undefined\r\n            ? null\r\n            : formData.showCarsWithSafetySeat == true && (\r\n                <div className={styles.reservationDetailsItem}>\r\n                  <div className={styles.reservationDetailsItemContainer}>\r\n                    <div\r\n                      className={styles.reservationDetailsItemTitleContainer}\r\n                    >\r\n                      <span\r\n                        className={styles.reservationDetailsItemTitleSelf}\r\n                        style={{\r\n                          color: fontColor,\r\n                        }}\r\n                      >\r\n                        Youth Booster Seat\r\n                      </span>\r\n                    </div>\r\n                    <div\r\n                      className={\r\n                        styles.reservationDetailsItemPointedLineContainer\r\n                      }\r\n                    >\r\n                      <div\r\n                        className={styles.reservationDetailsItemPointedLineSelf}\r\n                        style={{\r\n                          borderBottom: `2px dotted ${dotsLineColor}`,\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      className={styles.reservationDetailsItemValueContainer}\r\n                    >\r\n                      <span\r\n                        className={styles.reservationDetailsItemValueSelf}\r\n                        style={{\r\n                          color: fontColor,\r\n                        }}\r\n                      >\r\n                        {selectedCar.boosterSeatPrice !== 0 &&\r\n                        selectedCar.boosterSeatPrice !== undefined\r\n                          ? `$${selectedCar.boosterSeatPrice}`\r\n                          : `$${0}`}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n        </>\r\n\r\n        <>\r\n          {selectedCar.safetySeatPrice == undefined\r\n            ? null\r\n            : formData.showCarsWithSafetySeat == true && (\r\n                <div className={styles.reservationDetailsItem}>\r\n                  <div className={styles.reservationDetailsItemContainer}>\r\n                    <div\r\n                      className={styles.reservationDetailsItemTitleContainer}\r\n                    >\r\n                      <span\r\n                        className={styles.reservationDetailsItemTitleSelf}\r\n                        style={{\r\n                          color: fontColor,\r\n                        }}\r\n                      >\r\n                        {\"Infant & Child Safety Seat\"}\r\n                      </span>\r\n                    </div>\r\n                    <div\r\n                      className={\r\n                        styles.reservationDetailsItemPointedLineContainer\r\n                      }\r\n                    >\r\n                      <div\r\n                        className={styles.reservationDetailsItemPointedLineSelf}\r\n                        style={{\r\n                          borderBottom: `2px dotted ${dotsLineColor}`,\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      className={styles.reservationDetailsItemValueContainer}\r\n                    >\r\n                      <span\r\n                        className={styles.reservationDetailsItemValueSelf}\r\n                        style={{\r\n                          color: fontColor,\r\n                        }}\r\n                      >\r\n                        {selectedCar.safetySeatPrice !== 0 &&\r\n                        selectedCar.safetySeatPrice !== undefined\r\n                          ? `$${selectedCar.safetySeatPrice}`\r\n                          : `$${0}`}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n        </>\r\n\r\n        {gateMeeting && (\r\n          <>\r\n            <div className={styles.reservationDetailsItem}>\r\n              <div className={styles.reservationDetailsItemContainer}>\r\n                <div className={styles.reservationDetailsItemTitleContainer}>\r\n                  <span\r\n                    className={styles.reservationDetailsItemTitleSelf}\r\n                    style={{\r\n                      color: fontColor,\r\n                    }}\r\n                  >\r\n                    {\"Meet & Greet/Luggage Assist\"}\r\n                  </span>\r\n                </div>\r\n                <div\r\n                  className={styles.reservationDetailsItemPointedLineContainer}\r\n                >\r\n                  <div\r\n                    className={styles.reservationDetailsItemPointedLineSelf}\r\n                    style={{\r\n                      borderBottom: `2px dotted ${dotsLineColor}`,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className={styles.reservationDetailsItemValueContainer}>\r\n                  <span\r\n                    className={styles.reservationDetailsItemValueSelf}\r\n                    style={{\r\n                      color: fontColor,\r\n                    }}\r\n                  >\r\n                    {`$${selectedCar.greetAndMeetPrice}`}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={styles.reservationDetailsItem}>\r\n              <div className={styles.reservationDetailsItemContainer}>\r\n                <div className={styles.reservationDetailsItemTitleContainer}>\r\n                  <span\r\n                    className={styles.reservationDetailsItemTitleSelf}\r\n                    style={{\r\n                      color: fontColor,\r\n                    }}\r\n                  >\r\n                    Luggage count\r\n                  </span>\r\n                </div>\r\n                <div\r\n                  className={styles.reservationDetailsItemPointedLineContainer}\r\n                >\r\n                  <div\r\n                    className={styles.reservationDetailsItemPointedLineSelf}\r\n                    style={{\r\n                      borderBottom: `2px dotted ${dotsLineColor}`,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className={styles.reservationDetailsItemValueContainer}>\r\n                  <span\r\n                    className={styles.reservationDetailsItemValueSelf}\r\n                    style={{\r\n                      color: fontColor,\r\n                    }}\r\n                  >\r\n                    {formData.luggageCount}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <div\r\n          className={styles.reservationDetailsItem}\r\n          style={{ paddingTop: \"10px\", paddingBottom: \"10px\" }}\r\n        >\r\n          <div className={styles.reservationDetailsItemContainer}>\r\n            <div className={styles.reservationDetailsItemTitleContainer}>\r\n              <span\r\n                className={styles.reservationDetailsItemTitleSelf}\r\n                style={{\r\n                  color: fontColor,\r\n                  fontSize: \"18px\",\r\n                  fontWeight: \"600\",\r\n                }}\r\n              >\r\n                Total\r\n              </span>\r\n            </div>\r\n            <div className={styles.reservationDetailsItemPointedLineContainer}>\r\n              <div\r\n                className={styles.reservationDetailsItemPointedLineSelf}\r\n                style={{\r\n                  borderBottom: `2px dotted ${dotsLineColor}`,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={styles.reservationDetailsItemValueContainer}>\r\n              <span\r\n                className={styles.reservationDetailsItemValueSelf}\r\n                style={{\r\n                  color: fontColor,\r\n                  fontWeight: \"700\",\r\n                }}\r\n              >\r\n                {`$${round(selectedCar.price + selectedCar.transactionFee, 2)}`}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.notesTextFieldContainer}>\r\n          <Textarea\r\n            id=\"outlined-multiline-flexible\"\r\n            placeholder=\"Notes / Itinerary\"\r\n            fontColor={fontColor}\r\n          />\r\n        </div>\r\n        <div className={styles.buttonGroupBlock}>\r\n          <div className={styles.buttonGroupBlockContainer}>\r\n            <button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              onClick={back}\r\n              startIcon={<BackArrowIcon />}\r\n              className={styles.buttonBackSelf}\r\n              style={{\r\n                background: backAndNextButtonsColor,\r\n                color: backAndNextButtonsFontColor,\r\n                border: `1px solid ${backAndNextButtonsBorderColor}`,\r\n                borderRadius: borderRadiusesForInnerElements,\r\n              }}\r\n            >\r\n              Back\r\n            </button>\r\n            <button\r\n              variant=\"contained\"\r\n              fullWidth\r\n              onClick={() => {\r\n                next()\r\n                sendNote(note)\r\n                setOrderSum(selectedCar.price)\r\n              }}\r\n              color=\"primary\"\r\n              endIcon={<ForwardArrowIcon />}\r\n              className={styles.buttonNextSelf}\r\n              style={{\r\n                background: backAndNextButtonsColor,\r\n                color: backAndNextButtonsFontColor,\r\n                border: `1px solid ${backAndNextButtonsBorderColor}`,\r\n                borderRadius: borderRadiusesForInnerElements,\r\n              }}\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PreviewUIComponent\r\n\r\nconst Textarea = styled.textarea`\r\n  width: 100% !important;\r\n  // display: block;\r\n  height: 45px !important;\r\n  max-height: 45px !important;\r\n  min-height: 45px !important;\r\n  color: ${(props) => props.fontColor} !important;\r\n  font-family: \"Vazir\", sans-serif !important;\r\n  font-size: 15px !important;\r\n  border: none !important;\r\n  outline: none !important;\r\n  resize: none !important;\r\n  padding: 0 !important;\r\n  background: transparent !important;\r\n  border-bottom: 1px solid ${(props) => props.fontColor} !important;\r\n\r\n  margin-bottom: initial !important;\r\n  font-weight: initial !important;\r\n  font-family: Roboto !important;\r\n  border-radius: initial !important;\r\n\r\n  &::-webkit-input-placeholder {\r\n    font-size: 15px !important;\r\n    color: ${(props) => props.fontColor} !important;\r\n    font-family: \"Vazir\", sans-serif !important;\r\n  }\r\n  &:-moz-placeholder {\r\n    /* Upto Firefox 18, Deprecated in Firefox 19  */\r\n    font-size: 15px !important;\r\n    color: ${(props) => props.fontColor} !important;\r\n    font-family: \"Vazir\", sans-serif !important;\r\n  }\r\n  &::-moz-placeholder {\r\n    /* Firefox 19+ */\r\n    font-size: 15px !important;\r\n    color: ${(props) => props.fontColor} !important;\r\n    font-family: \"Vazir\", sans-serif !important;\r\n  }\r\n  &:-ms-input-placeholder {\r\n    font-size: 15px;\r\n    color: ${(props) => props.fontColor} !important;\r\n    font-family: \"Vazir\", sans-serif !important;\r\n  }\r\n  &:focus::placeholder {\r\n    color: transparent !important;\r\n  }\r\n`\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\AdressFormStyles.js",[],"C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\AdressFormUIComponent.js",["354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376"],"import { ListItem, TextField, useMediaQuery } from \"@material-ui/core\"\r\nimport React, { useContext, useRef, useState } from \"react\"\r\nimport { Controller, FormProvider, useForm } from \"react-hook-form\"\r\nimport GoogleMap from \"../../../GoogleMap/GoogleMapContainer/GoogleMap\"\r\nimport Hours from \"./Hours/Hours\"\r\nimport PassengerQuantity from \"./PassengerQuantity/PassengerQuantity\"\r\nimport Carousel, { consts } from \"react-elastic-carousel\"\r\nimport SafetySeat from \"./SafetySeat/SafetySeat\"\r\nimport Luggage from \"./Luggage/Luggage\"\r\nimport styles from \"./AdressFormStyles/AdressForm.module.scss\"\r\nimport \"./AdressFormStyles/AdressFormDatePickerSeparatedStyles.scss\"\r\nimport { Switch } from \"../../../Helpers/Switch/Switch\"\r\nimport \"./AdressFormStyles/AdressFormCarousel.scss\"\r\nimport CalendarPicker from \"@mui/lab/CalendarPicker\"\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\"\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\"\r\nimport { Modal } from \"../../../Helpers/Modal/Modal\"\r\nimport ThemeContext from \"../../../../context\"\r\nimport {\r\n  ClockIcon,\r\n  DateIcon,\r\n  HourlyIcon,\r\n  MeetAndGreetIcon,\r\n  MeetAndGreetIconWhite,\r\n  PlaneIcon,\r\n  SafetySeatIcon,\r\n  Ticket,\r\n} from \"../../../../assets/icons\"\r\nimport Autocomplete from \"@mui/material/Autocomplete\"\r\nimport styled from \"styled-components\"\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\n\r\n{\r\n  /*компонента перед экспортом обернута в react.memo*/\r\n}\r\n\r\nconst AdressFormwithoutReactMemo = ({\r\n  carTypes,\r\n  formData,\r\n  setHourlyRedux,\r\n  setGateMeetingRedux,\r\n  gateMeeting,\r\n  hourlyAndSeatsRedux,\r\n  resetInputs,\r\n  setDateForDefaultValue,\r\n  setTimeForDefaultValue,\r\n  setPassengersQuantityForBackStep,\r\n  isBoosterSeatExistOnBackend,\r\n  isSafetySeatExistOnBackend,\r\n  airlines,\r\n  bookingType,\r\n  boosterSeat,\r\n  carSelectionID,\r\n  childSafetySeat,\r\n  destinations,\r\n  flightNumber,\r\n  handleChangeAMPM,\r\n  handleClick,\r\n  handleSubmit,\r\n  hourly,\r\n  hoursAddressForm,\r\n  isAirline,\r\n  luggage,\r\n  methods,\r\n  myArrow,\r\n  onSubmit,\r\n  passengers,\r\n  redBorderOnSubmit,\r\n  redBorderOnSubmit2,\r\n  redBorderOnSubmitForCarType,\r\n  redBorderOnSubmitForDate,\r\n  redBorderOnSubmitForPassengers,\r\n  redBorderOnSubmitForTime,\r\n  redBorderOnSubmitForTime2,\r\n  redBorderOnSubmitForTime3,\r\n  redBorderOnSubmitForTime4,\r\n  redBorderOnSubmitForTime5,\r\n  redBorderOnSubmitForTime6,\r\n  safetySeat,\r\n  setAirlineId,\r\n  setBoosterSeat,\r\n  setChildSafetySeat,\r\n  setDestinations,\r\n  setFlightNumber,\r\n  setHourly,\r\n  setHoursAddressForm,\r\n  setIsAirportPickupIncludedLocalState,\r\n  setIsGateMeeting,\r\n  setLuggage,\r\n  setPassengers,\r\n  setSafetySeat,\r\n  date,\r\n  setDate,\r\n  show,\r\n  setShow,\r\n  AMPM,\r\n  fetchAirlines,\r\n  extractAirlineId,\r\n  time,\r\n  setTime,\r\n  setShowCarsWithSafetySeat,\r\n  showRecaptcha,\r\n  setShowRecaptcha,\r\n  setSafetySeatCount,\r\n  setBoosterSeatCount,\r\n  redBorderOnSubmitForHours,\r\n  setHoursRedux,\r\n  hoursCount,\r\n}) => {\r\n  const isMobile = useMediaQuery(\"(max-width:530px)\")\r\n\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiuses,\r\n    carsTypeColor,\r\n    carsTypeBorderColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    backAndNextButtonsFontColor,\r\n    backAndNextButtonsBorderColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n    inputsBackground,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n    AMPMHoverBackgroundColor,\r\n    AMPMHoverFontColor,\r\n  } = useContext(ThemeContext)\r\n\r\n  const [card, setCard] = useState()\r\n  const inputCard = useRef()\r\n  const startsWithTwo = time[0] === \"2\"\r\n\r\n  const handleChange = () => {\r\n    const timeNumberAfterColon = \":\"\r\n\r\n    const setZeroOrNot = (timeValue1) => {\r\n      if (timeValue1 > 1) {\r\n        return 0\r\n      }\r\n      return timeValue1\r\n    }\r\n    const timeValue = inputCard.current.value\r\n      .replace(/\\D/g, \"\")\r\n      .match(/(\\d{0,1})(\\d{0,1})(\\d{0,1})(\\d{0,1})/)\r\n    inputCard.current.value = timeValue[4]\r\n      ? `${setZeroOrNot(timeValue[1])}${timeValue[2]}${\r\n          (timeValue[3] || timeValue[2]) && timeNumberAfterColon\r\n        }${timeValue[3]}${timeValue[4]}`\r\n      : `${timeValue[1]}${\r\n          (timeValue[3] || timeValue[2]) && timeNumberAfterColon\r\n        }${timeValue[2]}${timeValue[3]}`\r\n\r\n    setTime(inputCard.current.value)\r\n    setTimeForDefaultValue(inputCard.current.value)\r\n    // console.log(timeValue)\r\n  }\r\n\r\n  const MeetAndGreetSwitchBlock = (\r\n    <>\r\n      <div className={styles.meetAndGreetWrapper}>\r\n        <div className={styles.meetAndGreetContainer}>\r\n          <div className={styles.meetAndGreetIconAndNameContainer}>\r\n            <MeetAndGreetIcon color={fontColor} />\r\n            <span\r\n              className={styles.meetAndGreetIconAndNameTitle}\r\n              style={{ color: `${fontColor}   ` }}\r\n            >\r\n              {\"Meet & Greet/Luggage Assist\"}\r\n            </span>\r\n          </div>\r\n\r\n          <div className={styles.meetAndGreetSwitch}>\r\n            <Switch\r\n              checked={gateMeeting}\r\n              onClick={() => {\r\n                if (gateMeeting == false) {\r\n                  setGateMeetingRedux(true)\r\n                  setIsGateMeeting(true)\r\n                  setIsAirportPickupIncludedLocalState(true)\r\n                  // console.log('true')\r\n                } else {\r\n                  setGateMeetingRedux(false)\r\n                  setIsGateMeeting(false)\r\n                  setIsAirportPickupIncludedLocalState(false)\r\n                  // console.log('false')\r\n                }\r\n              }}\r\n              numberToIdentify={1}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Luggage luggage={luggage} setLuggage={setLuggage} />\r\n    </>\r\n  )\r\n\r\n  function onChangeRecaptcha(value) {\r\n    // console.log('Captcha value:', value)\r\n    window.localStorage.setItem(\"captcha\", value)\r\n  }\r\n\r\n  // const MeetAndGreetLuggageAssistCondition = () => {\r\n  //   if (\r\n  //     (isAirline || formData.isAirportPickupIncluded) &&\r\n  //     (formData.bookingType === 3 || bookingType === 3)\r\n  //   ) {\r\n  //     return MeetAndGreetSwitchBlock\r\n  //   }\r\n  // }\r\n\r\n  React.useEffect(() => {\r\n    fetchAirlines()\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      className={styles.mainWrapper}\r\n      style={{\r\n        backgroundColor: `${ThemeProviderAppBackgroundColor}   `,\r\n      }}\r\n    >\r\n      <FormProvider {...methods} style={{ width: \"100%   \" }}>\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          style={{\r\n            width: \"100%   \",\r\n            background: `${ThemeProviderAppBackgroundColor}`,\r\n          }}\r\n        >\r\n          <div className={styles.mapAndDirectionsWrapper}>\r\n            <GoogleMap\r\n              setDestinations={setDestinations}\r\n              destinations={destinations}\r\n              orderAddressDetails={formData.orderAddressDetails}\r\n              redBorderOnSubmit={redBorderOnSubmit}\r\n              redBorderOnSubmit2={redBorderOnSubmit2}\r\n            />\r\n          </div>\r\n          <div\r\n            className={styles.underMapOptionsWrapper}\r\n            style={{\r\n              background: `${ThemeProviderAppBackgroundColor}   `,\r\n            }}\r\n          >\r\n            <div\r\n              className={styles.underMapOptionsContainer}\r\n              style={{\r\n                background: `${ThemeProviderAppBackgroundColor}   `,\r\n              }}\r\n            >\r\n              {(isAirline || formData.isAirportPickupIncluded) &&\r\n                (formData.bookingType === 3 || bookingType === 3) && (\r\n                  <div className={styles.underMapOptionsContainerForAirlines}>\r\n                    <div className={styles.airlinesItem}>\r\n                      <PlaneIcon color={fontColor} />\r\n                      <Autocomplete\r\n                        disablePortal\r\n                        onChange={(event, newValue) => {\r\n                          newValue\r\n                            ? extractAirlineId(newValue)\r\n                            : setAirlineId(null)\r\n                        }}\r\n                        style={{ width: \"100%   \" }}\r\n                        options={airlines.map((airline) => airline.name)}\r\n                        renderInput={(params) => (\r\n                          <div\r\n                            ref={params.InputProps.ref}\r\n                            style={{\r\n                              width: \"100%   \",\r\n                              display: \"flex   \",\r\n                            }}\r\n                          >\r\n                            <input\r\n                              type=\"text\"\r\n                              {...params.inputProps}\r\n                              placeholder=\"Airlines\"\r\n                              className={styles.airLinesInput}\r\n                              style={{\r\n                                width: \"100%   \",\r\n                                color: `${inputsFontColor}   `,\r\n                                border: `1px solid ${borderColorForInnerElements}   `,\r\n                                background: `${inputsBackground}   `,\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        )}\r\n                      />\r\n                    </div>\r\n                    <div className={styles.flightNumberContainer}>\r\n                      <div className={styles.flightNumberItem}>\r\n                        <Ticket color={fontColor} />\r\n                        <input\r\n                          name=\"flightNumber\"\r\n                          placeholder=\"Flight number\"\r\n                          className={styles.flightNumberInput}\r\n                          autoComplete=\"off\"\r\n                          style={{\r\n                            color: `${inputsFontColor}   `,\r\n                            border: `1px solid ${borderColorForInnerElements}   `,\r\n                            background: `${inputsBackground}   `,\r\n                          }}\r\n                          defaultValue={null}\r\n                          value={flightNumber}\r\n                          onChange={(e) => setFlightNumber(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              <div className={styles.dateTimeBlock}>\r\n                <div className={styles.dateTimeBlockContainer}>\r\n                  <div className={styles.datePicker}>\r\n                    <DateIcon color={inputsFontColor} />\r\n                    <div\r\n                      onClick={() => setShow(true)}\r\n                      className={\r\n                        redBorderOnSubmitForDate\r\n                          ? styles.datePickerOpenButtonWithRedBorder\r\n                          : styles.datePickerOpenButton\r\n                      }\r\n                      // placeholder=\"Pick up Date\"\r\n                      value={\r\n                        formData.dateForDefaultValue && !resetInputs\r\n                          ? formData.dateForDefaultValue\r\n                          : date?.toLocaleDateString(\"en-US\")\r\n                      }\r\n                      style={{\r\n                        color: inputsFontColor,\r\n                        border: !redBorderOnSubmitForDate\r\n                          ? `1px solid ${borderColorForInnerElements}   `\r\n                          : `1px solid red   `,\r\n                        borderRadius: `${borderRadiusesForInnerElements}   `,\r\n                        background: `${inputsBackground}   `,\r\n                      }}\r\n                    >\r\n                      {formData.dateForDefaultValue && !resetInputs\r\n                        ? formData.dateForDefaultValue\r\n                        : date?.toLocaleDateString(\"en-US\")}\r\n\r\n                      {!formData.dateForDefaultValue || resetInputs ? (\r\n                        <span\r\n                          style={{\r\n                            color: `${inputsFontColor}   `,\r\n                            fontSize: \"13.5px   \",\r\n                          }}\r\n                        >\r\n                          Pick up Date\r\n                        </span>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <Modal onClose={() => setShow(false)} show={show}>\r\n                      <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                        <div>\r\n                          <CalendarPicker\r\n                            date={date}\r\n                            onChange={(newDate) => {\r\n                              // console.log(newDate)\r\n                              if (newDate instanceof Date) {\r\n                                setShow(false)\r\n                              }\r\n                              setDateForDefaultValue(\r\n                                newDate.toLocaleDateString(\"en-US\")\r\n                              )\r\n                              setDate(newDate)\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </LocalizationProvider>\r\n                    </Modal>\r\n                  </div>\r\n                  <div className={styles.timePicker}>\r\n                    <div className={styles.timePickerContainer}>\r\n                      <ClockIcon color={inputsFontColor} />\r\n                      <TimeInput\r\n                        name=\"orderStartTime\"\r\n                        placeholder=\"hh:mm\"\r\n                        autoComplete=\"off\"\r\n                        className={styles.timePickerInput}\r\n                        setTime={setTime}\r\n                        ref={inputCard}\r\n                        onClick={(event) => {\r\n                          const { value } = event.target\r\n                          const position = value.length\r\n                          event.target.setSelectionRange(position, position)\r\n                        }}\r\n                        onChange={handleChange}\r\n                        style={{\r\n                          color: `${inputsFontColor}`,\r\n                          border:\r\n                            redBorderOnSubmitForTime ||\r\n                            redBorderOnSubmitForTime2 ||\r\n                            redBorderOnSubmitForTime3 ||\r\n                            redBorderOnSubmitForTime4 ||\r\n                            redBorderOnSubmitForTime5 ||\r\n                            redBorderOnSubmitForTime6\r\n                              ? `1px solid red`\r\n                              : `1px solid ${borderColorForInnerElements}`,\r\n                          background: `${inputsBackground}`,\r\n                          textAlign: \"right\",\r\n                          paddingRight: \"78px\",\r\n                          borderRadius: `${borderRadiusesForInnerElements}`,\r\n                        }}\r\n                        inputsFontColor={inputsFontColor}\r\n                        value={\r\n                          !resetInputs ? formData.timeForDefaultValue : null\r\n                        }\r\n                      />\r\n                      <div className={styles.toggleButtonsContainer}>\r\n                        <div\r\n                          className={styles.toggleButtonAM}\r\n                          onClick={(e) => {\r\n                            e.stopPropagation()\r\n                            handleChangeAMPM(e)\r\n                          }}\r\n                          style={{\r\n                            color:\r\n                              AMPM == \"AM\"\r\n                                ? AMPMHoverFontColor\r\n                                : inputsFontColor,\r\n                            background:\r\n                              AMPM == \"AM\"\r\n                                ? AMPMHoverBackgroundColor\r\n                                : \"transparent\",\r\n                            opacity: AMPM == \"AM\" ? \"1\" : \"0.5\",\r\n                            borderRadius: `calc(${borderRadiusesForInnerElements} - 2px)`,\r\n                          }}\r\n                        >\r\n                          AM\r\n                        </div>\r\n                        <div\r\n                          className={styles.toggleButtonPM}\r\n                          onClick={(e) => {\r\n                            e.stopPropagation()\r\n                            handleChangeAMPM(e)\r\n                          }}\r\n                          style={{\r\n                            color:\r\n                              AMPM == \"PM\"\r\n                                ? AMPMHoverFontColor\r\n                                : inputsFontColor,\r\n                            background:\r\n                              AMPM == \"PM\"\r\n                                ? AMPMHoverBackgroundColor\r\n                                : \"transparent\",\r\n                            opacity: AMPM == \"PM\" ? \"1\" : \"0.5\",\r\n                            borderRadius: `calc(${borderRadiusesForInnerElements} - 2px)`,\r\n                          }}\r\n                        >\r\n                          PM\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{ width: \"100%   \" }}\r\n                className={styles.passengersQuantityBlock}\r\n              >\r\n                <div className={styles.passengersQuantityBlockContainer}>\r\n                  <PassengerQuantity\r\n                    passengersqState={formData.passengersQuantity}\r\n                    setPassengers={setPassengers}\r\n                    passengers={passengers}\r\n                    setPassengersQuantityForBackStep={\r\n                      setPassengersQuantityForBackStep\r\n                    }\r\n                    passengersQuantityForBackStep={\r\n                      formData.passengersQuantityForBackStep\r\n                    }\r\n                    redBorderOnSubmitForPassengers={\r\n                      redBorderOnSubmitForPassengers\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              {(isAirline || formData.isAirportPickupIncluded) &&\r\n                (formData.bookingType === 3 || bookingType === 3) &&\r\n                MeetAndGreetSwitchBlock}\r\n              {destinations[1]?.rideCheckPoint.match(/(^|\\W)Airport($|\\W)/) &&\r\n                MeetAndGreetSwitchBlock}\r\n              {(isBoosterSeatExistOnBackend || isSafetySeatExistOnBackend) && (\r\n                <div className={styles.safetySeatWrapper}>\r\n                  <div className={styles.safetySeatContainer}>\r\n                    <div className={styles.safetySeatIconAndNameContainer}>\r\n                      <SafetySeatIcon color={fontColor} />\r\n                      <span\r\n                        className={styles.safetySeatIconAndNameTitle}\r\n                        style={{ color: `${fontColor}  ` }}\r\n                      >\r\n                        Safety Seat\r\n                      </span>\r\n                    </div>\r\n                    <Switch\r\n                      checked={formData.showCarsWithSafetySeat}\r\n                      onClick={() => {\r\n                        setSafetySeat(!safetySeat)\r\n                        setShowCarsWithSafetySeat(!safetySeat)\r\n                      }}\r\n                      numberToIdentify={2}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <div className={styles.SafetySeatCounterWrapper}>\r\n                {formData.showCarsWithSafetySeat === true && (\r\n                  <div className={styles.SafetySeatCounterContainer}>\r\n                    <SafetySeat\r\n                      setBoosterSeat={setBoosterSeat}\r\n                      setChildSafetySeat={setChildSafetySeat}\r\n                      boosterSeat={boosterSeat}\r\n                      childSafetySeat={childSafetySeat}\r\n                      isBoosterSeatExistOnBackend={isBoosterSeatExistOnBackend}\r\n                      isSafetySeatExistOnBackend={isSafetySeatExistOnBackend}\r\n                      setSafetySeatCount={setSafetySeatCount}\r\n                      setBoosterSeatCount={setBoosterSeatCount}\r\n                      safetySeatCountRedux={formData.safetySeatCount}\r\n                      boosterSeatCountRedux={formData.boosterSeatCount}\r\n                      showCarsWithSafetySeat={formData.showCarsWithSafetySeat}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className={styles.hourlyWrapper}>\r\n                <div className={styles.hourlyRowContainer}>\r\n                  <div className={styles.hourlyIconAndNameContainer}>\r\n                    <HourlyIcon color={fontColor} />\r\n                    <span\r\n                      className={styles.hourlyIconAndNameTitle}\r\n                      style={{ color: `${fontColor}   ` }}\r\n                    >\r\n                      Hourly\r\n                    </span>\r\n                  </div>\r\n                  <Switch\r\n                    checked={hourlyAndSeatsRedux}\r\n                    onClick={() => {\r\n                      if (!hourlyAndSeatsRedux) {\r\n                        setHourlyRedux(true)\r\n                      } else {\r\n                        setHourlyRedux(false)\r\n                      }\r\n                      setHourly(!hourly)\r\n                    }}\r\n                    numberToIdentify={3}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className={styles.hourlyCounter}>\r\n                {hourlyAndSeatsRedux === true && (\r\n                  <Hours\r\n                    hoursState={formData.hours}\r\n                    hourly={hourly}\r\n                    hoursAddressForm={hoursAddressForm}\r\n                    setHoursAddressForm={setHoursAddressForm}\r\n                    redBorderOnSubmitForHours={redBorderOnSubmitForHours}\r\n                    setHoursRedux={setHoursRedux}\r\n                    hoursCount={hoursCount}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className={styles.preferencesWrapper}>\r\n                <div className={styles.preferencesTitleContainer}>\r\n                  <span\r\n                    className={styles.preferencesTitle}\r\n                    style={{ color: `${fontColor}   ` }}\r\n                  >\r\n                    Preferences\r\n                  </span>\r\n                </div>\r\n                <div\r\n                  className={styles.preferencesCarsContainer}\r\n                  style={{\r\n                    borderRadius: `${borderRadiusesForInnerElements}   `,\r\n                    border: redBorderOnSubmitForCarType\r\n                      ? \"1px solid red   \"\r\n                      : \"1px solid transprent   \",\r\n                  }}\r\n                >\r\n                  <Carousel\r\n                    renderArrow={myArrow}\r\n                    itemsToShow={3}\r\n                    pagination={false}\r\n                    transitionMs={300}\r\n                  >\r\n                    {carTypes.map((car, indexOfEachCar) => (\r\n                      <CarItemContainer\r\n                        hoverColor={hoverColor}\r\n                        borderRadiusesForInnerElements={\r\n                          borderRadiusesForInnerElements\r\n                        }\r\n                        carsTypeColor={carsTypeColor}\r\n                        carsTypeBorderColor={carsTypeBorderColor}\r\n                        carSelected={car.id === carSelectionID}\r\n                        fontColor={fontColor}\r\n                        innerTextOnHover={innerTextOnHover}\r\n                        onClick={() => handleClick(car.id)}\r\n                        name=\"carsValidation\"\r\n                      >\r\n                        <div className={styles.carItemTitleContainer}>\r\n                          <span className={styles.carItemTitle}>\r\n                            {car.name}\r\n                          </span>\r\n                        </div>\r\n                        <div item className={styles.carImageContainer}>\r\n                          <img\r\n                            alt=\"carImage\"\r\n                            src={car.imageUrl}\r\n                            className={styles.carImage}\r\n                          />\r\n                          {/* {console.log(indexOfEachCar == 2)} */}\r\n                        </div>\r\n                      </CarItemContainer>\r\n                    ))}\r\n                  </Carousel>\r\n                </div>\r\n                <Modal\r\n                  onClose={() => setShowRecaptcha(false)}\r\n                  show={showRecaptcha}\r\n                >\r\n                  <ReCAPTCHA\r\n                    sitekey=\"6LeuP3weAAAAAHoe3aaP27xmYorD1s1vXK7XdlPk\"\r\n                    onChange={onChangeRecaptcha}\r\n                  />\r\n                </Modal>\r\n                <div className={styles.buttonGroupBlockContainer}>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className={styles.buttonNextSelf}\r\n                    style={{\r\n                      background: `${backAndNextButtonsColor}   `,\r\n                      color: `${backAndNextButtonsFontColor}   `,\r\n                      border: `1px solid ${backAndNextButtonsBorderColor}   `,\r\n                      borderRadius: ` ${borderRadiusesForInnerElements}   `,\r\n                    }}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst AdressFormUIComponent = React.memo(AdressFormwithoutReactMemo)\r\n\r\nexport default AdressFormUIComponent\r\n\r\nconst CarItemContainer = styled.div`\r\n  width: 60px;\r\n  height: 66px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border-radius: ${(props) => props.borderRadiusesForInnerElements};\r\n  border: 1px solid ${(props) => props.carsTypeBorderColor};\r\n  background: ${(props) => {\r\n    if (!props.carSelected) {\r\n      return props.carsTypeColor\r\n    } else {\r\n      return props.hoverColor\r\n    }\r\n  }};\r\n  outline: none;\r\n  span {\r\n    color: ${(props) => {\r\n      if (props.carSelected) {\r\n        return props.innerTextOnHover\r\n      } else {\r\n        return props.fontColor\r\n      }\r\n    }};\r\n  }\r\n\r\n  transition: 0.1s;\r\n  &:hover {\r\n    background: ${(props) => props.hoverColor};\r\n    cursor: pointer;\r\n    transition: 0.1s;\r\n\r\n    span {\r\n      color: ${(props) => props.innerTextOnHover};\r\n    }\r\n  }\r\n`\r\n\r\nconst TimeInput = styled.input`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 35px;\r\n  /* position: relative; */\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n  padding-left: 37px;\r\n  padding-right: 35px;\r\n  background-position-x: 2%;\r\n  background-position-y: 60%;\r\n  font-size: 13.5px;\r\n  &::placeholder {\r\n    /* Chrome, Firefox, Opera, Safari 10.1+ */\r\n    font-size: 13.5px;\r\n    color: ${(props) => props.inputsFontColor};\r\n    opacity: 1; /* Firefox */\r\n  }\r\n  &:-ms-input-placeholder {\r\n    /* Internet Explorer 10-11 */\r\n    font-size: 13.5px;\r\n    color: ${(props) => props.inputsFontColor};\r\n  }\r\n  &::-ms-input-placeholder {\r\n    /* Microsoft Edge */\r\n    font-size: 13.5px;\r\n    color: ${(props) => props.inputsFontColor};\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\FleetForm\\FleetFormUIComponent.js",["377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport Carousel from \"react-material-ui-carousel\"\r\nimport { Preloader } from \"../../../Helpers/Preloader/Preloader\"\r\nimport { AppBar, useMediaQuery } from \"@material-ui/core\"\r\nimport { AspectRatio } from \"react-aspect-ratio\"\r\nimport \"./FleetForm.css\"\r\nimport IncorrectAddressError from \"../../IncorrectAdressError/IncorrectAddressError\"\r\nimport styles from \"./FleetForm.module.scss\"\r\nimport { Modal } from \"../../../Helpers/Modal/Modal\"\r\nimport ThemeContext from \"../../../../context\"\r\nimport Slider from \"react-slick\"\r\nimport \"slick-carousel/slick/slick.css\"\r\nimport \"slick-carousel/slick/slick-theme.css\"\r\nimport \"./FleetForm.css\"\r\n\r\nfunction SampleNextArrow(props) {\r\n  const { className, style, onClick } = props\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{ ...style, display: \"block\", right: \"0\", zIndex: \"30\" }}\r\n      onClick={onClick}\r\n    />\r\n  )\r\n}\r\n\r\nfunction SamplePrevArrow(props) {\r\n  const { className, style, onClick } = props\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{ ...style, display: \"block\", left: \"0\", zIndex: \"30\" }}\r\n      onClick={onClick}\r\n    />\r\n  )\r\n}\r\n\r\nconst FleetForm = ({\r\n  cars,\r\n  isFetching,\r\n  back,\r\n  next,\r\n  setCarId,\r\n  gateMeeting,\r\n  setGateMeetingRedux,\r\n  error,\r\n  setActiveStep,\r\n  setResetWidgetInputs,\r\n  setIsAirportPickupIncluded,\r\n  carCard,\r\n  handleClickOpen,\r\n  handleClickClose,\r\n  handleClick,\r\n  result,\r\n  round,\r\n  show,\r\n  showSafetySeatIsNotAvailable,\r\n  setShowSafetySeatIsNotAvailable,\r\n  formData,\r\n}) => {\r\n  const isMobile = useMediaQuery(\"(max-width:500px)\")\r\n  const isiPad = useMediaQuery(\"(max-width:1024px)\")\r\n\r\n  const carTextColor = \"white\"\r\n  const car = [cars[0], cars[1]]\r\n\r\n  useEffect(() => {\r\n    setWidthForSlickSlide()\r\n  }, [setWidthForSlickSlide])\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    nextArrow: <SampleNextArrow />,\r\n    prevArrow: <SamplePrevArrow />,\r\n    appendDots: (dots) => (\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          height: \"6px\",\r\n          backgroundColor: \"transparent\",\r\n          // borderRadius: \"10px\",\r\n          padding: \"0\",\r\n          bottom: \"10px\",\r\n        }}\r\n      >\r\n        <ul style={{ margin: \"0px\", paddingLeft: \"0px\", textAlign: \"center\" }}>\r\n          {dots}\r\n        </ul>\r\n      </div>\r\n    ),\r\n    // customPaging: function (i) {\r\n    //   return (\r\n    //     <div\r\n    //     // style={{\r\n    //     //   width: \"3px\",\r\n    //     //   height: \"3px\",\r\n    //     //   background: \"red\",\r\n\r\n    //     //   // bottom: \"6px\",\r\n    //     // }}\r\n    //     ></div>\r\n    //   )\r\n    // },\r\n    dotsClass: \"button__bar\",\r\n  }\r\n\r\n  // const slickCurrent = document.getElementsByClassName(\"slick-current\")\r\n\r\n  // console.log(document.getElementById(\"modal\"))\r\n\r\n  const [isModalWithSlidesReady, setIsModalWithSlidesReady] = useState(false)\r\n\r\n  function setWidthForSlickSlide() {\r\n    const slickSlide = document\r\n      ?.getElementById(\"modal\")\r\n      ?.getElementsByClassName(\"slick-slide\")\r\n    for (let i = 0; i < slickSlide?.length; i++) {\r\n      slickSlide[i].style.width = \"auto\"\r\n    }\r\n    // for (let i = 0; i < slickCurrent.length; i++) {\r\n    //   slickCurrent[i].style.width = \"auto\"\r\n    // }\r\n\r\n    setIsModalWithSlidesReady(true)\r\n  }\r\n\r\n  // console.log(document.getElementsByClassName(\"slick-current\"))\r\n\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiuses,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    backAndNextButtonsFontColor,\r\n    backAndNextButtonsBorderColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n    fleetCarsBackgroundColor,\r\n    dotsLineColor,\r\n  } = useContext(ThemeContext)\r\n\r\n  const ifThereisError = () => {\r\n    if (error) {\r\n      return (\r\n        <IncorrectAddressError\r\n          errorMessage={error}\r\n          setActiveStep={setActiveStep}\r\n        />\r\n      )\r\n    } else {\r\n      if (!isFetching) {\r\n        return (\r\n          <div\r\n            className={styles.mainWrapperFleet}\r\n            style={{ background: ThemeProviderAppBackgroundColor }}\r\n          >\r\n            <div className={styles.contentContainer}>\r\n              {showSafetySeatIsNotAvailable && (\r\n                <div\r\n                  className={styles.showSafetySeatIsNotAvailable}\r\n                  style={{ background: ThemeProviderAppBackgroundColor }}\r\n                >\r\n                  <span\r\n                    style={{\r\n                      width: \"100%\",\r\n                      color: fontColor,\r\n                      textAlign: \"center\",\r\n                      marginTop: \"30px\",\r\n                      marginBottom: \" 45px\",\r\n                    }}\r\n                  >\r\n                    Safety Seat is Not Available\r\n                  </span>\r\n                  <button\r\n                    type=\"button\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      color: fontColor,\r\n                      background: ThemeProviderAppBackgroundColor,\r\n                      border: \"none\",\r\n                      borderTop: `1px solid ${fontColor}`,\r\n                      cursor: \"pointer\",\r\n                      paddingTop: \"18px\",\r\n                      paddingBottom: \"18px\",\r\n                    }}\r\n                    onClick={() => {\r\n                      setShowSafetySeatIsNotAvailable(false)\r\n                    }}\r\n                  >\r\n                    OK\r\n                  </button>\r\n                </div>\r\n              )}\r\n              <div className={styles.pageTitleContainer}>\r\n                <span className={styles.pageTitle} style={{ color: fontColor }}>\r\n                  Select vehicle\r\n                </span>\r\n              </div>\r\n              <div className={styles.carListContainer}>\r\n                {/* {console.log(typeof cars)} */}\r\n                {cars.map((car, index) => (\r\n                  <div\r\n                    onClick={(event) => {\r\n                      if (\r\n                        car.isBoosterSeatsExist == false &&\r\n                        car.isBoosterSeatsExist == false &&\r\n                        formData.showCarsWithSafetySeat == true\r\n                      ) {\r\n                        setShowSafetySeatIsNotAvailable(true)\r\n                      } else {\r\n                        !showSafetySeatIsNotAvailable && handleClick(car?.id)\r\n                      }\r\n                    }}\r\n                    className={\r\n                      car?.id === carCard\r\n                        ? styles.carContainerSelected\r\n                        : styles.carContainer\r\n                    }\r\n                    key={`${car?.id}${car?.name}`}\r\n                    style={{\r\n                      cursor: showSafetySeatIsNotAvailable\r\n                        ? \"not-allowed\"\r\n                        : \"pointer\",\r\n                      background: fleetCarsBackgroundColor,\r\n                      border: `1px solid ${borderColorForInnerElements}`,\r\n                      borderRadius: borderRadiusesForInnerElements,\r\n                    }}\r\n                  >\r\n                    <div className={styles.carImageBlock}>\r\n                      {car.isBoosterSeatsExist == false &&\r\n                        car.isBoosterSeatsExist == false &&\r\n                        formData.showCarsWithSafetySeat == true && (\r\n                          <span className={styles.safetySeatNotAvailable}>\r\n                            Safety Seat N/A\r\n                          </span>\r\n                        )}\r\n                      <Slider {...settings} className={styles.carImageSelf}>\r\n                        {car?.imageUrls?.length !== 0 ? (\r\n                          car?.imageUrls?.map((url) => (\r\n                            <span\r\n                              key={url.id}\r\n                              // variant=\"outlined\"\r\n                              // color=\"primary\"\r\n                            >\r\n                              <div\r\n                                className={styles.orSimiliar}\r\n                                style={{\r\n                                  background: fleetCarsBackgroundColor,\r\n                                  color: fontColor,\r\n                                  // borderTopLeftRadius:\r\n                                  //   borderRadiusesForInnerElements,\r\n                                }}\r\n                              >\r\n                                or similar\r\n                              </div>\r\n                              <img\r\n                                src={url?.path}\r\n                                key={url?.id}\r\n                                alt=\"car\"\r\n                                className={styles.carImageSelf}\r\n                                onClick={(event) => {\r\n                                  handleClickOpen(car?.id)\r\n                                  setWidthForSlickSlide()\r\n                                }}\r\n                                style={{\r\n                                  borderRadius: borderRadiusesForInnerElements,\r\n                                }}\r\n                              />\r\n                            </span>\r\n                          ))\r\n                        ) : (\r\n                          <>\r\n                            <span\r\n                              className={styles.orSimiliar}\r\n                              style={{\r\n                                background: fleetCarsBackgroundColor,\r\n                                color: fontColor,\r\n                                // borderTopLeftRadius:\r\n                                //   borderRadiusesForInnerElements,\r\n                              }}\r\n                            >\r\n                              or similar\r\n                            </span>\r\n\r\n                            <img\r\n                              src={\r\n                                \"https://fl-1.cdn.flockler.com/embed/not-found.png\"\r\n                              }\r\n                              className={styles.carImageSelf}\r\n                              alt=\"car\"\r\n                              style={{\r\n                                borderRadius: borderRadiusesForInnerElements,\r\n                              }}\r\n                            />\r\n                          </>\r\n                        )}\r\n                      </Slider>\r\n                    </div>\r\n                    <div className={styles.carDescriptionTextBlock}>\r\n                      <div className={styles.carDescriptionTextContainer}>\r\n                        <span\r\n                          className={styles.carModel}\r\n                          style={{\r\n                            color: fontColor,\r\n                          }}\r\n                        >\r\n                          {car?.make} {car?.model}\r\n                        </span>\r\n                        <div className={styles.detailedDescription}>\r\n                          <div\r\n                            className={styles.detailedDescriptionTitleContainer}\r\n                          >\r\n                            <span\r\n                              className={styles.detailedDescriptionTitleSelf}\r\n                              style={{\r\n                                color: fontColor,\r\n                              }}\r\n                            >\r\n                              Type\r\n                            </span>\r\n                          </div>\r\n                          <div\r\n                            className={\r\n                              styles.detailedDescriptionPointedLineContainer\r\n                            }\r\n                          >\r\n                            <div\r\n                              className={\r\n                                styles.detailedDescriptionPointedLineSelf\r\n                              }\r\n                              style={{\r\n                                borderBottom: `2px dotted ${dotsLineColor}`,\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div\r\n                            className={styles.detailedDescriptionValueContainer}\r\n                          >\r\n                            <span\r\n                              className={styles.detailedDescriptionValueSelf}\r\n                              style={{\r\n                                color: fontColor,\r\n                              }}\r\n                            >\r\n                              {car?.type}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className={styles.detailedDescription}>\r\n                          <div\r\n                            className={styles.detailedDescriptionTitleContainer}\r\n                          >\r\n                            <span\r\n                              className={styles.detailedDescriptionTitleSelf}\r\n                              style={{\r\n                                color: fontColor,\r\n                              }}\r\n                            >\r\n                              Capacity\r\n                            </span>\r\n                          </div>\r\n                          <div\r\n                            className={\r\n                              styles.detailedDescriptionPointedLineContainer\r\n                            }\r\n                          >\r\n                            <div\r\n                              className={\r\n                                styles.detailedDescriptionPointedLineSelf\r\n                              }\r\n                              style={{\r\n                                borderBottom: `2px dotted ${dotsLineColor}`,\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div\r\n                            className={styles.detailedDescriptionValueContainer}\r\n                          >\r\n                            <span\r\n                              className={styles.detailedDescriptionValueSelf}\r\n                              style={{\r\n                                color: fontColor,\r\n                              }}\r\n                            >\r\n                              {car?.capacity}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className={styles.detailedDescription}>\r\n                          <div\r\n                            className={styles.detailedDescriptionTitleContainer}\r\n                          >\r\n                            <span\r\n                              className={styles.detailedDescriptionTitleSelf}\r\n                              style={{\r\n                                color: fontColor,\r\n                              }}\r\n                            >\r\n                              Color\r\n                            </span>\r\n                          </div>\r\n                          <div\r\n                            className={\r\n                              styles.detailedDescriptionPointedLineContainer\r\n                            }\r\n                          >\r\n                            <div\r\n                              className={\r\n                                styles.detailedDescriptionPointedLineSelf\r\n                              }\r\n                              style={{\r\n                                borderBottom: `2px dotted ${dotsLineColor}`,\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div\r\n                            className={styles.detailedDescriptionValueContainer}\r\n                          >\r\n                            <span\r\n                              className={styles.detailedDescriptionValueSelf}\r\n                              style={{\r\n                                color: fontColor,\r\n                              }}\r\n                            >\r\n                              {car?.color}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className={styles.detailedDescription}>\r\n                          <div\r\n                            className={styles.detailedDescriptionTitleContainer}\r\n                          >\r\n                            <span\r\n                              className={styles.detailedDescriptionTitleSelf}\r\n                              style={{\r\n                                color: fontColor,\r\n                              }}\r\n                            >\r\n                              Amount\r\n                            </span>\r\n                          </div>\r\n                          <div\r\n                            className={\r\n                              styles.detailedDescriptionPointedLineContainer\r\n                            }\r\n                          >\r\n                            <div\r\n                              className={\r\n                                styles.detailedDescriptionPointedLineSelf\r\n                              }\r\n                              style={{\r\n                                borderBottom: `2px dotted ${dotsLineColor}`,\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div\r\n                            className={styles.detailedDescriptionValueContainer}\r\n                          >\r\n                            <span\r\n                              className={\r\n                                styles.detailedDescriptionValueAmountSelf\r\n                              }\r\n                              style={{\r\n                                color: fontColor,\r\n                              }}\r\n                            >\r\n                              {gateMeeting\r\n                                ? `$${round(car?.price, 2)}`\r\n                                : `$${round(car?.price, 2)}`}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                <Modal onClose={() => handleClickClose()} show={show}>\r\n                  {isModalWithSlidesReady && (\r\n                    <Slider\r\n                      {...settings}\r\n                      style={{\r\n                        width: !isMobile ? \"550px\" : \"239px\",\r\n                        height: !isMobile ? \"400px\" : \"170px\",\r\n                      }}\r\n                      // className={styles.modalSlider}\r\n                    >\r\n                      {result?.imageUrls?.map((url) => (\r\n                        <AspectRatio\r\n                          ratio=\"4/3\"\r\n                          style={{\r\n                            width: !isMobile ? \"550px\" : \"239px\",\r\n                            height: !isMobile ? \"400px\" : \"170px\",\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          {/* {console.log(result?.imageUrls)} */}\r\n                          <img\r\n                            src={url?.path}\r\n                            style={{\r\n                              borderRadius: \"8px\",\r\n                              width: !isMobile ? \"550px\" : \"239px\",\r\n                              height: !isMobile ? \"400px\" : \"170px\",\r\n                            }}\r\n                            alt=\"car\"\r\n                            key={`${url?.id}${url?.path}`}\r\n                          />\r\n                        </AspectRatio>\r\n                      ))}\r\n                    </Slider>\r\n                  )}\r\n                </Modal>\r\n                {Object.keys(cars).length === 0 && (\r\n                  <div\r\n                    style={{\r\n                      color: fontColor,\r\n                    }}\r\n                  >\r\n                    No cars\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={styles.fleetButtonGroupForPositioning}\r\n              style={{ background: ThemeProviderAppBackgroundColor }}\r\n            >\r\n              <div className={styles.fleetButtonGroupBlockContainer}>\r\n                <button\r\n                  onClick={() => {\r\n                    back()\r\n                    setGateMeetingRedux(false)\r\n                    setResetWidgetInputs(false)\r\n                    setIsAirportPickupIncluded(false)\r\n                  }}\r\n                  className={styles.buttonBackSelf}\r\n                  style={{\r\n                    background: backAndNextButtonsColor,\r\n                    color: backAndNextButtonsFontColor,\r\n                    border: `1px solid ${backAndNextButtonsBorderColor}`,\r\n                    borderRadius: borderRadiusesForInnerElements,\r\n                  }}\r\n                >\r\n                  Back\r\n                </button>\r\n                <button\r\n                  onClick={() => {\r\n                    next()\r\n                    setCarId(carCard)\r\n                  }}\r\n                  disabled={carCard ? false : true}\r\n                  className={styles.buttonNextSelf}\r\n                  style={{\r\n                    opacity: carCard ? \"1\" : \"0.3\",\r\n                    background: backAndNextButtonsColor,\r\n                    color: backAndNextButtonsFontColor,\r\n                    border: `1px solid ${backAndNextButtonsBorderColor}`,\r\n                    borderRadius: borderRadiusesForInnerElements,\r\n                  }}\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  return <>{isFetching ? <Preloader /> : ifThereisError()}</>\r\n}\r\n\r\nconst FleetFormUIComponent = React.memo(FleetForm)\r\n\r\nexport default FleetFormUIComponent\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\ReservationFailed\\ReservationFailed.js",["397","398","399","400","401","402","403","404","405","406","407","408","409"],"import React, { useContext } from \"react\"\r\n// import Grid from \"@material-ui/core/Grid\"\r\n// import Typography from \"@material-ui/core/Typography\"\r\n// import Button from \"@material-ui/core/Button\"\r\nimport { connect } from \"react-redux\"\r\nimport styles from \"./ReservationFailed.module.scss\"\r\nimport { ErrorIcon } from \"../../../assets/icons\"\r\nimport ThemeContext from \"../../../context\"\r\n\r\nconst ReservationFailed = ({ setActiveStep, failMessage }) => {\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n    inputsBackground,\r\n    bookNowIconFontAndCircleBorderColor,\r\n    bookNowIconBackgroundColor,\r\n    backAndNextButtonsColor,\r\n    backAndNextButtonsFontColor,\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div\r\n      // container\r\n      // direction='column'\r\n      // justify='center'\r\n      // alignItems='center'\r\n      // style={{ height: '80vh', backgroundColor: 'black' }}\r\n      className={styles.reservationFailedWrapper}\r\n    >\r\n      <div className={styles.reservationFailedTextContainer}>\r\n        <ErrorIcon />\r\n        <p\r\n          // style={{\r\n          //   textAlign: \"center\",\r\n          //   marginLeft: \"20px\",\r\n          //   marginRight: \"20px\",\r\n          //   marginBottom: \"30px\",\r\n          //   color: \"white\",\r\n          // }}\r\n          className={styles.reservationFailedTextSelf}\r\n          style={{ color: fontColor }}\r\n        >\r\n          {failMessage}\r\n        </p>\r\n      </div>\r\n      <div className={styles.reservationFailedButtonContainer}>\r\n        <button\r\n          // color=\"primary\"\r\n          // variant=\"contained\"\r\n          onClick={() => setActiveStep(3)}\r\n          className={styles.reservationFailedButtonSelf}\r\n          style={{\r\n            background: backAndNextButtonsColor,\r\n            color: backAndNextButtonsFontColor,\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    failMessage: state.companyProfile.failMessage,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ReservationFailed)\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\Helpers\\Switch\\Switch.js",["410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426"],"import { useContext, useState } from \"react\"\r\nimport styles from \"./Switch.module.scss\"\r\nimport styled from \"styled-components\"\r\nimport ThemeContext from \"../../../context\"\r\n\r\nexport const Switch = (props) => {\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n    inputsBackground,\r\n    bookNowIconFontAndCircleBorderColor,\r\n    bookNowIconBackgroundColor,\r\n    switchesBorderColor,\r\n    switchesCircleColor,\r\n    switchesBackgroundColor,\r\n    switchesBorderColorEnabled,\r\n    switchesCircleColorEnabled,\r\n    switchesBackgroundColorEnabled,\r\n  } = useContext(ThemeContext)\r\n  return (\r\n    <SwitchWrapper\r\n      switchesBorderColor={switchesBorderColor}\r\n      switchesCircleColor={switchesCircleColor}\r\n      switchesBackgroundColor={switchesBackgroundColor}\r\n      switchesBorderColorEnabled={switchesBorderColorEnabled}\r\n      switchesCircleColorEnabled={switchesCircleColorEnabled}\r\n      switchesBackgroundColorEnabled={switchesBackgroundColorEnabled}\r\n    >\r\n      <SwitchInput\r\n        type=\"checkbox\"\r\n        name={`switch${props.numberToIdentify}`}\r\n        className={styles.switchSelf}\r\n        id={`switch${props.numberToIdentify}`}\r\n        defaultChecked={props.checked}\r\n        // onClick={props.onClick}\r\n\r\n        {...props}\r\n      />\r\n      <label\r\n        htmlFor={`switch${props.numberToIdentify}`}\r\n        className={styles.siwtchsLabel}\r\n      ></label>\r\n    </SwitchWrapper>\r\n  )\r\n}\r\nconst SwitchInput = styled.input``\r\n\r\nconst SwitchLabel = styled.label``\r\n\r\nconst SwitchWrapper = styled.div`\r\n  // margin: auto;\r\n  // padding: 20px;\r\n  // width: 55px;\r\n  // border: 1px solid $lightgray;\r\n  // margin-top: 20px;\r\n  // border-radius: 5px;\r\n  // background: white;\r\n  display: flex !important;\r\n  align-items: center !important;\r\n  justify-content: center !important;\r\n\r\n  input {\r\n    &${SwitchInput} {\r\n      opacity: 0 !important; // hides checkbox\r\n      position: absolute !important;\r\n      // & + label {\r\n      //   background: white;\r\n      // }\r\n\r\n      & + label {\r\n        position: relative !important;\r\n        display: inline-block !important;\r\n        user-select: none !important;\r\n        transition: 0.4s ease !important;\r\n        height: 22px !important;\r\n        width: 34px !important;\r\n        border: 1px solid ${(props) => props.switchesBorderColor}!important;\r\n        background: ${(props) => props.switchesBackgroundColor}!important;\r\n        border-radius: 11px !important;\r\n        box-sizing: border-box !important;\r\n        &:hover {\r\n          cursor: pointer !important;\r\n          // border: 1px solid white;\r\n          transition: 0.1s ease !important;\r\n        }\r\n        &:before {\r\n          content: \"\" !important;\r\n          position: absolute !important;\r\n          display: block !important;\r\n          transition: 0.2s cubic-bezier(0.24, 0, 0.5, 1) !important;\r\n          height: 20px !important;\r\n          width: 32px !important;\r\n          top: 0 !important;\r\n          left: 0 !important;\r\n          border-radius: 30px !important;\r\n        }\r\n        &:after {\r\n          content: \"\" !important;\r\n          position: absolute !important;\r\n          display: block !important;\r\n          box-shadow: 0 0 0 1px hsla(0, 0%, 0%, 0.1),\r\n            0 4px 0px 0 hsla(0, 0%, 0%, 0.04), 0 4px 9px hsla(0, 0%, 0%, 0.13),\r\n            0 3px 3px hsla(0, 0%, 0%, 0.05) !important;\r\n          transition: 0.35s cubic-bezier(0.54, 1.6, 0.5, 1) !important;\r\n          background: ${(props) => props.switchesCircleColor}!important;\r\n          height: 13px !important;\r\n          width: 13px !important;\r\n          top: 3px !important;\r\n          left: 2px !important;\r\n          border-radius: 60px !important;\r\n          // &:hover {\r\n          //   background: white;\r\n          //   transition: 0.1s ease;\r\n          // }\r\n        }\r\n        &:hover::after {\r\n          // @include inactiveMixin;\r\n          // @include afterAnimation;\r\n          background: ${(props) => props.switchesCircleColorEnabled}!important;\r\n          // height: 15px;\r\n          // width: 15px;\r\n          // top: 1px;\r\n          // left: 0px;\r\n          // border-radius: 60px;\r\n          // &:hover {\r\n          //   background: white;\r\n          //   transition: 0.1s ease;\r\n          // }\r\n        }\r\n      }\r\n      // When Active\r\n      &:checked {\r\n        & + label {\r\n          border: 1px solid\r\n            ${(props) => props.switchesBorderColorEnabled}!important;\r\n          background: ${(props) =>\r\n            props.switchesBackgroundColorEnabled}!important;\r\n        }\r\n\r\n        & + label:after {\r\n          left: 51% !important;\r\n\r\n          background: ${(props) => props.switchesBorderColorEnabled}!important;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\Helpers\\Modal\\Modal.js",["427","428","429","430"],"import React, { useEffect } from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n// import { CSSTransition } from \"react-transition-group\"\r\nimport styles from \"./Modal.module.scss\"\r\n\r\nexport const Modal = (props) => {\r\n  const closeOnEscapeKeyDown = (e) => {\r\n    if ((e.charCode || e.keyCode) === 27) {\r\n      props.onClose()\r\n    }\r\n  }\r\n  const closeOnBodyClick = () => {\r\n    props.onClose()\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener(\"keydown\", closeOnEscapeKeyDown)\r\n\r\n    return function cleanup() {\r\n      document.body.removeEventListener(\"keydown\", closeOnEscapeKeyDown)\r\n    }\r\n  }, [])\r\n\r\n  return ReactDOM.createPortal(\r\n    // <CSSTransition\r\n    //   in={props.show}\r\n    //   unmountOnExit\r\n    //   timeout={{ enter: 0, exit: 300 }}\r\n    // >\r\n    <div\r\n      className={props.show ? styles.showModal : styles.hideModal}\r\n      onClick={props.onClose}\r\n      style={{ pointerEvents: \"auto\" }}\r\n    >\r\n      <div className={styles.modal}>\r\n        <div\r\n          className={styles.modalContent}\r\n          // onClick={(e) => {\r\n          //   e.stopPropagation()\r\n          // }}\r\n        >\r\n          {/* <div className={styles.modalHeader}>\r\n            <h4 className={styles.modalTitle}>{props.title}</h4>\r\n          </div> */}\r\n          <div\r\n            className={styles.modalBody}\r\n            id=\"modal\" // IMPORTANT THIS ID FOR SLICK SLIDER. WITHOUT THIS ID IT\"S GONNA CRASH\r\n            onClick={(e) => {\r\n              e.stopPropagation()\r\n            }}\r\n          >\r\n            {props.children}\r\n          </div>\r\n          {/* {console.log(props.children)} */}\r\n          {props?.children?.props?.children?.type == \"div\" && (\r\n            <div className={styles.modalFooter}>\r\n              <button onClick={props.onClose} className={styles.modalOkButton}>\r\n                OK\r\n              </button>\r\n            </div>\r\n          )}\r\n          {props?.children?.type == \"div\" && (\r\n            <div className={styles.modalFooter}>\r\n              <button onClick={props.onClose} className={styles.modalOkButton}>\r\n                OK\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    // </CSSTransition>,\r\n    document.getElementById(\"widget-by-bookinglane\")\r\n  )\r\n}\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\IncorrectAdressError\\IncorrectAddressError.js",["431","432","433","434","435","436","437","438","439","440","441","442","443"],"// import { CircularProgress } from \"@material-ui/core\"\r\nimport React, { useContext } from \"react\"\r\n// import { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\"\r\nimport { ErrorIcon } from \"../../../assets/icons\"\r\n// import { Grid, Typography } from \"@material-ui/core\"\r\n// import Button from \"@material-ui/core/Button\"\r\nimport { connect } from \"react-redux\"\r\nimport { setError } from \"../../../Redux/car-reducer\"\r\nimport { setGotAddressError } from \"../../../Redux/company-profile-reducer\"\r\nimport styles from \"./IncorrectAddressError.module.scss\"\r\nimport ThemeContext from \"../../../context\"\r\n\r\n// const theme = createMuiTheme({\r\n//   palette: {\r\n//     secondary: {\r\n//       main: \"#4F4F4F\",\r\n//     },\r\n//   },\r\n// })\r\n\r\nconst IncorrectAddressError = ({\r\n  error,\r\n  setActiveStep,\r\n  setError,\r\n  setGotAddressError,\r\n}) => {\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n    inputsBackground,\r\n    bookNowIconFontAndCircleBorderColor,\r\n    bookNowIconBackgroundColor,\r\n    backAndNextButtonsColor,\r\n    backAndNextButtonsFontColor,\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div\r\n      // style={{\r\n      //   margin: \"0 auto\",\r\n      //   width: \"100%\",\r\n      //   height: \"90%\",\r\n      //   display: \"flex\",\r\n      //   flexDirection: \"row \",\r\n      //   justifyContent: \"center\",\r\n      //   alignItems: \"center\",\r\n      //   backgroundColor: \"black\",\r\n      //   // paddingTop: \"40%\",\r\n      //   // paddingRight: \"20px\",\r\n      //   // paddingLeft: \"20px\",\r\n      // }}\r\n      className={styles.incorrectAddressErrorWrapper}\r\n    >\r\n      {/* <MuiThemeProvider theme={theme}> */}\r\n      {/* <CircularProgress color=\"secondary\" /> */}\r\n      <div\r\n        // container\r\n        // direction=\"column\"\r\n        // alignItems=\"center\"\r\n        // style={{ height: \"50%\" }}\r\n        className={styles.incorrectAddressErrorTextContainer}\r\n      >\r\n        <ErrorIcon />\r\n        <p\r\n          // style={{ fontWeight: \"700\", fontSize: \"19px\", marginTop: \"15px\" }}\r\n\r\n          className={styles.incorrectAddressErrorTextSelf1}\r\n          style={{ color: fontColor }}\r\n        >\r\n          Oops!\r\n        </p>\r\n        <p\r\n          // style={{ textAlign: \"center\", marginTop: \"15px\", color: \"#BCBCBC\" }}\r\n          className={styles.incorrectAddressErrorTextSelf2}\r\n          style={{ color: fontColor }}\r\n        >\r\n          {error}\r\n        </p>\r\n      </div>\r\n      <div className={styles.incorrectAddressErrorButtonContainer}>\r\n        <button\r\n          // color=\"primary\"\r\n          // variant=\"contained\"\r\n          onClick={() => {\r\n            setActiveStep(0)\r\n            setError(\"\")\r\n            setGotAddressError(true)\r\n          }}\r\n          className={styles.incorrectAddressErrorButtonSelf}\r\n          style={{\r\n            background: backAndNextButtonsColor,\r\n            color: backAndNextButtonsFontColor,\r\n          }}\r\n          // style={{ marginTop: \"17px\", background: \"#c9c9c9\" }}\r\n        >\r\n          Back\r\n        </button>\r\n      </div>\r\n\r\n      {/* </MuiThemeProvider> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    error: state.cars.error,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setGotAddressError, setError })(\r\n  IncorrectAddressError\r\n)\r\n// export default Error\r\n\r\n//#region styled-components\r\n\r\n// const Container = styled.div`\r\n//     margin: 0 auto;\r\n//     width: 100%;\r\n//     /* @media (max-width: 500px) {\r\n//         width: 94%;\r\n//     } */\r\n// `;\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\Luggage\\Luggage.js",["444","445","446","447","448","449","450","451","452","453","454","455"],"import { makeStyles } from \"@material-ui/core\"\r\n// import Grid from \"@material-ui/core/Grid\"\r\n// import Typography from \"@material-ui/core/Typography\"\r\nimport React, { useContext } from \"react\"\r\nimport { useFormContext } from \"react-hook-form\"\r\nimport { LuggageIcon } from \"../../../../../assets/icons\"\r\nimport ThemeContext from \"../../../../../context\"\r\nimport {\r\n  // HourlyIcon,\r\n  // LuggageIcon,\r\n  MinusIcon,\r\n  PlusIcon,\r\n} from \"../../../../../assets/icons\"\r\nimport \"../../index.css\"\r\nimport styles from \"./Luggage.module.scss\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPlusMinusContainer: {\r\n    height: \"34px\",\r\n\r\n    borderBottom: \"2px solid #AC8159\",\r\n    transition: \"200ms\",\r\n    \"&:hover\": { borderBottom: \"2px solid white\", transition: \"200ms\" },\r\n  },\r\n}))\r\n\r\nconst Luggage = ({ luggage, setLuggage }) => {\r\n  const classes = useStyles()\r\n\r\n  const { register } = useFormContext()\r\n\r\n  //   const [hoursAddressForm, setHoursAddressForm] = useState(0)\r\n\r\n  const onDecrease = () => {\r\n    if (luggage === 0) {\r\n      return\r\n    }\r\n    setLuggage((luggage) => luggage - 1)\r\n  }\r\n  const onIncrease = () => {\r\n    setLuggage((luggage) => luggage + 1)\r\n  }\r\n\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n    inputsBackground,\r\n    bookNowIconFontAndCircleBorderColor,\r\n    bookNowIconBackgroundColor,\r\n    countersOuterBorderColor,\r\n    countersInnerDividerBorder,\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div className={styles.luggageQuantityWrapper}>\r\n      <div className={styles.luggageQuantityIconAndTitleContainer}>\r\n        <LuggageIcon color={fontColor} />\r\n        <span\r\n          className={styles.luggageCounterTitle}\r\n          style={{ color: fontColor }}\r\n        >\r\n          Luggage Count\r\n        </span>\r\n      </div>\r\n      <div className={styles.luggageQuantityCounterContainer}>\r\n        <div className={styles.luggageQuantityMinusContainer}>\r\n          <button\r\n            onClick={onDecrease}\r\n            style={{\r\n              background: inputsBackground,\r\n              border: `1px solid ${countersOuterBorderColor}`,\r\n\r\n              borderRight: `1px solid ${countersInnerDividerBorder}`,\r\n\r\n              borderTopLeftRadius: borderRadiusesForInnerElements,\r\n              borderBottomLeftRadius: borderRadiusesForInnerElements,\r\n            }}\r\n            className={styles.luggageQuantityMinusSelf}\r\n            type=\"button\"\r\n          >\r\n            <MinusIcon color={fontColor} />\r\n          </button>\r\n        </div>\r\n        <div className={styles.luggageQuantityInputContainer}>\r\n          <input\r\n            ref={register}\r\n            name=\"hours\"\r\n            onChange={(e) => {\r\n              setLuggage(e.target.value)\r\n            }}\r\n            value={luggage}\r\n            size=\"1\"\r\n            style={{\r\n              background: inputsBackground,\r\n              borderTop: `1px solid ${countersOuterBorderColor}`,\r\n              borderBottom: `1px solid ${countersOuterBorderColor}`,\r\n              color: inputsFontColor,\r\n            }}\r\n            type=\"number\"\r\n            className={styles.luggageQuantityInputSelf}\r\n          />\r\n        </div>\r\n        <div className={styles.luggageQuantityPlusContainer}>\r\n          <button\r\n            onClick={onIncrease}\r\n            style={{\r\n              background: inputsBackground,\r\n              border: `1px solid ${countersOuterBorderColor}`,\r\n\r\n              borderLeft: `1px solid ${countersInnerDividerBorder}`,\r\n              borderTopRightRadius: borderRadiusesForInnerElements,\r\n              borderBottomRightRadius: borderRadiusesForInnerElements,\r\n            }}\r\n            className={styles.luggageQuantityPlusSelf}\r\n            type=\"button\"\r\n          >\r\n            <PlusIcon color={fontColor} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Luggage\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\SafetySeat\\SafetySeat.js",["456","457","458","459","460","461","462","463","464","465","466","467","468","469","470"],"import { makeStyles, useMediaQuery } from \"@material-ui/core\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\n// import Typography from \"@material-ui/core/Typography\"\r\nimport React, { useContext } from \"react\"\r\nimport { useFormContext } from \"react-hook-form\"\r\nimport ThemeContext from \"../../../../../context\"\r\nimport {\r\n  MinusIcon,\r\n  // NumberOfPassengers,\r\n  // NumberOfPassengersIcon,\r\n  PlusIcon,\r\n} from \"../../../../../assets/icons\"\r\nimport \"../../index.css\"\r\nimport styles from \"./SafetySeat.module.scss\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPlusMinusContainer: {\r\n    height: \"34px\",\r\n    borderBottom: \"2px solid #AC8159\",\r\n    transition: \"200ms\",\r\n    \"&:hover\": { borderBottom: \"2px solid white\", transition: \"200ms\" },\r\n  },\r\n}))\r\n\r\nexport default React.memo(function SafetySeat({\r\n  setBoosterSeat,\r\n  setChildSafetySeat,\r\n  boosterSeat,\r\n  childSafetySeat,\r\n  isBoosterSeatExistOnBackend,\r\n  isSafetySeatExistOnBackend,\r\n  showCarsWithSafetySeat,\r\n  setSafetySeatCount,\r\n  setBoosterSeatCount,\r\n  safetySeatCountRedux,\r\n  boosterSeatCountRedux,\r\n}) {\r\n  const classes = useStyles()\r\n  const { register } = useFormContext()\r\n\r\n  const onDecreaseBoosterSeat = () => {\r\n    if (boosterSeatCountRedux === 0) {\r\n      return\r\n    }\r\n    setBoosterSeat((boosterSeat) => boosterSeat - 1)\r\n    setBoosterSeatCount(boosterSeatCountRedux - 1)\r\n  }\r\n  const onIncreaseBoosterSeat = () => {\r\n    if (boosterSeatCountRedux === 14) {\r\n      return\r\n    }\r\n    setBoosterSeat((boosterSeat) => boosterSeat + 1)\r\n    setBoosterSeatCount(boosterSeatCountRedux + 1)\r\n    console.log(boosterSeatCountRedux)\r\n  }\r\n\r\n  const onDecreaseChildSafetySeat = () => {\r\n    if (safetySeatCountRedux === 0) {\r\n      return\r\n    }\r\n    setChildSafetySeat((childSafetySeat) => childSafetySeat - 1)\r\n    setSafetySeatCount(safetySeatCountRedux - 1)\r\n  }\r\n  const onIncreaseChildSafetySeat = () => {\r\n    if (safetySeatCountRedux === 14) {\r\n      return\r\n    }\r\n    setChildSafetySeat((childSafetySeat) => childSafetySeat + 1)\r\n    setSafetySeatCount(safetySeatCountRedux + 1)\r\n  }\r\n\r\n  //   React.useEffect(() => {\r\n  //     setPassengers(parseInt(passengersqState))\r\n  //   }, [passengersqState])\r\n  const isMobile = useMediaQuery(\"(max-width:340px)\")\r\n  const shouldSafetySeatBeColumnDirection = useMediaQuery(\"(max-width:420px)\")\r\n\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n    inputsBackground,\r\n    bookNowIconFontAndCircleBorderColor,\r\n    bookNowIconBackgroundColor,\r\n    countersOuterBorderColor,\r\n    countersInnerDividerBorder,\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div style={{ paddingLeft: \"9px\" }}>\r\n      {isBoosterSeatExistOnBackend && (\r\n        <div className={styles.boosterSeatCounterWrapper}>\r\n          <div className={styles.boosterSeatCounterIconAndTitleContainer}>\r\n            <span\r\n              className={styles.boosterSeatCounterTitle}\r\n              style={{ color: fontColor }}\r\n            >\r\n              Youth Booster Seat\r\n            </span>\r\n          </div>\r\n          <div className={styles.boosterSeatCounterContainer}>\r\n            <div className={styles.boosterSeatCounterMinusContainer}>\r\n              <button\r\n                onClick={onDecreaseBoosterSeat}\r\n                className={styles.boosterSeatCounterMinusSelf}\r\n                style={{\r\n                  background: inputsBackground,\r\n                  border: `1px solid ${countersOuterBorderColor}`,\r\n                  borderRight: `1px solid ${countersInnerDividerBorder}`,\r\n                  borderTopLeftRadius: borderRadiusesForInnerElements,\r\n                  borderBottomLeftRadius: borderRadiusesForInnerElements,\r\n                }}\r\n                type=\"button\"\r\n              >\r\n                <MinusIcon color={fontColor} />\r\n              </button>\r\n            </div>\r\n            <div className={styles.boosterSeatCounterInputContainer}>\r\n              <input\r\n                ref={register}\r\n                name=\"Youth Booster Seat\"\r\n                onChange={(e) => {\r\n                  setBoosterSeat(e.target.value)\r\n                  setBoosterSeatCount(e.target.value)\r\n                }}\r\n                value={boosterSeatCountRedux}\r\n                size=\"1\"\r\n                type=\"number\"\r\n                className={styles.boosterSeatCounterInputSelf}\r\n                style={{\r\n                  background: inputsBackground,\r\n                  borderTop: `1px solid ${countersOuterBorderColor}`,\r\n                  borderBottom: `1px solid ${countersOuterBorderColor}`,\r\n                  color: inputsFontColor,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={styles.boosterSeatCounterPlusContainer}>\r\n              <button\r\n                onClick={onIncreaseBoosterSeat}\r\n                className={styles.boosterSeatCounterPlusSelf}\r\n                style={{\r\n                  background: inputsBackground,\r\n                  border: `1px solid ${countersOuterBorderColor}`,\r\n                  borderLeft: `1px solid ${countersInnerDividerBorder}`,\r\n                  borderTopRightRadius: borderRadiusesForInnerElements,\r\n                  borderBottomRightRadius: borderRadiusesForInnerElements,\r\n                }}\r\n                type=\"button\"\r\n              >\r\n                <PlusIcon color={fontColor} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isSafetySeatExistOnBackend && (\r\n        <div className={styles.safetySeatCounterWrapper}>\r\n          <div className={styles.safetySeatCounterIconAndTitleContainer}>\r\n            <span\r\n              className={styles.safetySeatCounterTitle}\r\n              style={{ color: fontColor }}\r\n            >\r\n              {\"Infant & Child Safety Seat\"}\r\n            </span>\r\n          </div>\r\n          <div className={styles.safetySeatCounterContainer}>\r\n            <div className={styles.safetySeatCounterMinusContainer}>\r\n              <button\r\n                onClick={onDecreaseChildSafetySeat}\r\n                className={styles.safetySeatCounterMinusSelf}\r\n                style={{\r\n                  background: inputsBackground,\r\n                  border: `1px solid ${countersOuterBorderColor}`,\r\n                  borderRight: `1px solid ${countersInnerDividerBorder}`,\r\n                  borderTopLeftRadius: borderRadiusesForInnerElements,\r\n                  borderBottomLeftRadius: borderRadiusesForInnerElements,\r\n                }}\r\n                type=\"button\"\r\n              >\r\n                <MinusIcon color={fontColor} />\r\n              </button>\r\n            </div>\r\n            <div className={styles.safetySeatCounterInputContainer}>\r\n              <input\r\n                ref={register}\r\n                name={`Infant & Child Safety Seat`}\r\n                onChange={(e) => {\r\n                  setChildSafetySeat(e.target.value)\r\n                  setSafetySeatCount(e.target.value)\r\n                }}\r\n                value={safetySeatCountRedux}\r\n                size=\"1\"\r\n                type=\"number\"\r\n                className={styles.safetySeatCounterInputSelf}\r\n                style={{\r\n                  background: inputsBackground,\r\n                  borderTop: `1px solid ${countersOuterBorderColor}`,\r\n                  borderBottom: `1px solid ${countersOuterBorderColor}`,\r\n                  color: inputsFontColor,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={styles.safetySeatCounterPlusContainer}>\r\n              <button\r\n                onClick={onIncreaseChildSafetySeat}\r\n                className={styles.safetySeatCounterPlusSelf}\r\n                style={{\r\n                  background: inputsBackground,\r\n                  border: `1px solid ${countersOuterBorderColor}`,\r\n                  borderLeft: `1px solid ${countersInnerDividerBorder}`,\r\n                  borderTopRightRadius: borderRadiusesForInnerElements,\r\n                  borderBottomRightRadius: borderRadiusesForInnerElements,\r\n                }}\r\n                type=\"button\"\r\n              >\r\n                <PlusIcon color={fontColor} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n})\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\PassengerQuantity\\PassengerQuantity.js",["471","472","473","474","475","476","477","478","479","480","481","482","483","484"],"import { makeStyles, useMediaQuery } from \"@material-ui/core\"\r\n// import Grid from \"@material-ui/core/Grid\"\r\n// import Typography from \"@material-ui/core/Typography\"\r\nimport React, { useContext } from \"react\"\r\nimport { useFormContext } from \"react-hook-form\"\r\nimport { NumberOfPassengersIcon } from \"../../../../../assets/icons\"\r\nimport ThemeContext from \"../../../../../context\"\r\nimport {\r\n  MinusIcon,\r\n  // NumberOfPassengers,\r\n  // NumberOfPassengersIcon,\r\n  PlusIcon,\r\n} from \"../../../../../assets/icons\"\r\nimport \"../../index.css\"\r\nimport styles from \"./PassengerQuantity.module.scss\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPlusMinusContainer: {\r\n    height: \"34px\",\r\n    borderBottom: \"2px solid #AC8159\",\r\n    transition: \"200ms\",\r\n    \"&:hover\": { borderBottom: \"2px solid white\", transition: \"200ms\" },\r\n  },\r\n}))\r\n\r\nexport default React.memo(function PassengerQuantity({\r\n  passengersqState,\r\n  setPassengers,\r\n  passengers,\r\n  passengersQuantityForBackStep,\r\n  setPassengersQuantityForBackStep,\r\n  redBorderOnSubmitForPassengers,\r\n}) {\r\n  const classes = useStyles()\r\n  const { register } = useFormContext()\r\n\r\n  const onDecrease = () => {\r\n    if (passengersQuantityForBackStep === 0) {\r\n      return\r\n    }\r\n    let progress = passengersQuantityForBackStep - 1\r\n    setPassengers((passengers) => passengers - 1)\r\n    setPassengersQuantityForBackStep(progress)\r\n  }\r\n  const onIncrease = (e) => {\r\n    if (passengersQuantityForBackStep === 14) {\r\n      return\r\n    }\r\n    let progress = passengersQuantityForBackStep + 1\r\n    setPassengers((passengers) => passengers + 1)\r\n    setPassengersQuantityForBackStep(progress)\r\n\r\n    // console.log(passengersQuantityForBackStep)\r\n  }\r\n  // console.log(passengersQuantityForBackStep)\r\n  //   React.useEffect(() => {\r\n  //     setPassengers(parseInt(passengersqState))\r\n  //   }, [passengersqState])\r\n  const isMobile = useMediaQuery(\"(max-width:340px)\")\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n    inputsBackground,\r\n    bookNowIconFontAndCircleBorderColor,\r\n    bookNowIconBackgroundColor,\r\n    countersOuterBorderColor,\r\n    countersInnerDividerBorder,\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div className={styles.passengerQuantityWrapper}>\r\n      <div className={styles.passengerQuantityIconAndTitleContainer}>\r\n        <NumberOfPassengersIcon color={fontColor} />\r\n\r\n        <span\r\n          className={styles.passengerCounterTitle}\r\n          style={{ color: `${fontColor}  ` }}\r\n        >\r\n          Number of passengers\r\n        </span>\r\n      </div>\r\n      <div className={styles.passengerQuantityCounterContainer}>\r\n        <div className={styles.passengerQuantityMinusContainer}>\r\n          <button\r\n            onClick={onDecrease}\r\n            type=\"button\"\r\n            className={styles.passengerQuantityMinusSelf}\r\n            style={{\r\n              background: `${inputsBackground}`,\r\n              border: redBorderOnSubmitForPassengers\r\n                ? \"1px solid red\"\r\n                : `1px solid ${countersOuterBorderColor}`,\r\n\r\n              // borderRight: redBorderOnSubmitForPassengers\r\n              //   ? `1px solid red   `\r\n              //   : `1px solid ${countersInnerDividerBorder}`,\r\n              borderTopLeftRadius: `${borderRadiusesForInnerElements}   `,\r\n              borderBottomLeftRadius: `${borderRadiusesForInnerElements}  `,\r\n            }}\r\n          >\r\n            <MinusIcon color={fontColor} />\r\n          </button>\r\n        </div>\r\n        <div className={styles.passengerQuantityInputContainer}>\r\n          <input\r\n            ref={register}\r\n            name=\"passengersQuantity\"\r\n            onChange={(e) => {\r\n              setPassengers(e.target.value)\r\n              setPassengersQuantityForBackStep(e.target.value)\r\n            }}\r\n            value={passengersQuantityForBackStep}\r\n            size=\"1\"\r\n            type=\"number\"\r\n            className={styles.passengerQuantityInputSelf}\r\n            style={{\r\n              background: `${inputsBackground}   `,\r\n              borderTop: redBorderOnSubmitForPassengers\r\n                ? \"1px solid red   \"\r\n                : `1px solid ${countersOuterBorderColor}   `,\r\n              borderBottom: redBorderOnSubmitForPassengers\r\n                ? \"1px solid red   \"\r\n                : `1px solid ${countersOuterBorderColor}   `,\r\n              color: `${inputsFontColor}   `,\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={styles.passengerQuantityPlusContainer}>\r\n          <button\r\n            onClick={(event) => {\r\n              onIncrease()\r\n              event.stopPropagation()\r\n            }}\r\n            className={styles.passengerQuantityPlusSelf}\r\n            style={{\r\n              background: `${inputsBackground}   `,\r\n              border: redBorderOnSubmitForPassengers\r\n                ? \"1px solid red   \"\r\n                : `1px solid ${countersOuterBorderColor}   `,\r\n\r\n              // borderLeft: redBorderOnSubmitForPassengers\r\n              //   ? `1px solid red   `\r\n              //   : `1px solid ${countersInnerDividerBorder}   `,\r\n              borderTopRightRadius: `${borderRadiusesForInnerElements}   `,\r\n              borderBottomRightRadius: `${borderRadiusesForInnerElements}   `,\r\n            }}\r\n            type=\"button\"\r\n          >\r\n            <PlusIcon color={fontColor} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\Hours\\Hours.js",["485","486","487","488","489","490","491","492","493","494","495","496"],"import { makeStyles } from \"@material-ui/core\"\r\n// import Grid from \"@material-ui/core/Grid\"\r\n// import Typography from \"@material-ui/core/Typography\"\r\nimport React, { useContext } from \"react\"\r\nimport { useFormContext } from \"react-hook-form\"\r\nimport { MinusIcon, PlusIcon } from \"../../../../../assets/icons\"\r\nimport styles from \"./Hours.module.scss\"\r\nimport \"../../index.css\"\r\nimport ThemeContext from \"../../../../../context\"\r\nimport { HourlyIcon } from \"../../../../../assets/icons\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPlusMinusContainer: {\r\n    height: \"34px\",\r\n\r\n    borderBottom: \"2px solid #AC8159\",\r\n    transition: \"200ms\",\r\n    \"&:hover\": { borderBottom: \"2px solid white\", transition: \"200ms\" },\r\n  },\r\n}))\r\n\r\nconst Hours = ({\r\n  hoursState,\r\n  setHourly,\r\n  hoursAddressForm,\r\n  setHoursAddressForm,\r\n  hourlyAndSeatsRedux,\r\n  redBorderOnSubmitForHours,\r\n  setHoursRedux,\r\n  hoursCount,\r\n}) => {\r\n  const classes = useStyles()\r\n\r\n  const { register } = useFormContext()\r\n\r\n  //   const [hoursAddressForm, setHoursAddressForm] = useState(0)\r\n\r\n  const onDecrease = () => {\r\n    if (hoursCount === 0) {\r\n      return\r\n    }\r\n    setHoursAddressForm((hoursAddressForm) => hoursAddressForm - 1)\r\n    setHoursRedux(hoursCount - 1)\r\n  }\r\n  const onIncrease = () => {\r\n    setHoursAddressForm((hoursAddressForm) => hoursAddressForm + 1)\r\n    setHoursRedux(hoursCount + 1)\r\n  }\r\n\r\n  //   React.useEffect(() => {\r\n  //     if (hoursState !== 0) {\r\n  //       setHourly(true)\r\n  //       setHoursAddressForm(parseInt(hoursState))\r\n  //     }\r\n  //   }, [hoursState])\r\n\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n    inputsBackground,\r\n    bookNowIconFontAndCircleBorderColor,\r\n    bookNowIconBackgroundColor,\r\n    countersOuterBorderColor,\r\n    countersInnerDividerBorder,\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div className={styles.hoursCounterWrapper}>\r\n      <div className={styles.hoursCounterIconAndTitleContainer}>\r\n        <HourlyIcon color={fontColor} />\r\n        <h3 className={styles.hoursCounterTitle} style={{ color: fontColor }}>\r\n          Hours\r\n        </h3>\r\n      </div>\r\n      <div className={styles.hoursCounterPlusMinusContainer}>\r\n        <div className={styles.hoursCounterMinusContainer}>\r\n          <button\r\n            onClick={onDecrease}\r\n            className={styles.hoursCounterMinus}\r\n            style={{\r\n              background: inputsBackground,\r\n              border: redBorderOnSubmitForHours\r\n                ? `1px solid red`\r\n                : `1px solid ${countersOuterBorderColor}`,\r\n\r\n              borderRight: redBorderOnSubmitForHours\r\n                ? `1px solid red`\r\n                : `1px solid ${countersInnerDividerBorder}`,\r\n\r\n              borderTopLeftRadius: borderRadiusesForInnerElements,\r\n              borderBottomLeftRadius: borderRadiusesForInnerElements,\r\n            }}\r\n            type=\"button\"\r\n          >\r\n            <MinusIcon color={inputsFontColor} />\r\n          </button>\r\n        </div>\r\n        <div className={styles.hoursCounterInputContainer}>\r\n          <input\r\n            ref={register}\r\n            name=\"hours\"\r\n            onChange={(e) => {\r\n              setHoursAddressForm(e.target.value)\r\n              setHoursRedux(e.target.value)\r\n            }}\r\n            value={hoursCount}\r\n            size=\"1\"\r\n            style={{\r\n              background: inputsBackground,\r\n              borderTop: redBorderOnSubmitForHours\r\n                ? `1px solid red`\r\n                : `1px solid ${countersOuterBorderColor}`,\r\n              borderBottom: redBorderOnSubmitForHours\r\n                ? `1px solid red`\r\n                : `1px solid ${countersOuterBorderColor}`,\r\n              color: inputsFontColor,\r\n            }}\r\n            type=\"number\"\r\n            className={styles.hoursCounterInput}\r\n          />\r\n        </div>\r\n        <div className={styles.hoursCounterPlusContainer}>\r\n          <button\r\n            className={styles.hoursCounterPlus}\r\n            onClick={onIncrease}\r\n            style={{\r\n              background: inputsBackground,\r\n              border: redBorderOnSubmitForHours\r\n                ? `1px solid red`\r\n                : `1px solid ${countersOuterBorderColor}`,\r\n              borderLeft: redBorderOnSubmitForHours\r\n                ? `1px solid red`\r\n                : `1px solid ${countersInnerDividerBorder}`,\r\n              borderTopRightRadius: borderRadiusesForInnerElements,\r\n              borderBottomRightRadius: borderRadiusesForInnerElements,\r\n            }}\r\n            type=\"button\"\r\n          >\r\n            <PlusIcon color={inputsFontColor} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Hours\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\CheckoutForm\\CheckOut\\CustomFormInput\\CustomFormInput.js",[],"C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\GoogleMap\\Directions\\Directions.js",["497"],"import { useMediaQuery } from \"@material-ui/core\"\r\n// import Grid from \"@material-ui/core/Grid\"\r\n// import { makeStyles } from \"@material-ui/core/styles\"\r\n// import { styles } from \"@material-ui/pickers/views/Calendar/Calendar\"\r\nimport { GoogleApiWrapper, Map } from \"google-maps-react\"\r\nimport React from \"react\"\r\nimport MapStyles from \"../mapStyles\"\r\nimport styles from \"./Directions.module.scss\"\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   mapContainer: {\r\n//     width: \"91.3%\",\r\n//     marginLeft: \"17px\",\r\n//     height: \"250px\",\r\n//     position: \"relative\",\r\n//   },\r\n//   mapContainerForMobile: {\r\n//     width: \"92%\",\r\n//     marginLeft: \"17px\",\r\n//     height: \"250px\",\r\n//     position: \"relative\",\r\n//   },\r\n// }))\r\n\r\nconst Directions = ({ destinations, setDistance, ...props }) => {\r\n  // const classes = useStyles()\r\n\r\n  const handleMapReady = (mapProps, map) => {\r\n    calculateAndDisplayRoute(map)\r\n  }\r\n\r\n  const calculateAndDisplayRoute = (map) => {\r\n    const directionsService = new window.google.maps.DirectionsService()\r\n    const directionsDisplay = new window.google.maps.DirectionsRenderer()\r\n\r\n    directionsDisplay.setMap(map)\r\n    const waypoints = []\r\n    destinations.map((item) =>\r\n      waypoints.push({\r\n        location: { lat: item.latitude, lng: item.longitude },\r\n        stopover: true,\r\n      })\r\n    )\r\n    const origin = waypoints.shift().location\r\n    const destination = waypoints.pop().location\r\n\r\n    directionsService.route(\r\n      {\r\n        origin: origin,\r\n        destination: destination,\r\n        waypoints: waypoints,\r\n        travelMode: \"DRIVING\",\r\n      },\r\n      (response, status) => {\r\n        if (status === \"OK\") {\r\n          directionsDisplay.setDirections(response)\r\n          let distance = 0\r\n          response.routes[0].legs.forEach((element) => {\r\n            distance += element.distance.value\r\n          })\r\n          const miles = (distance / 1000) * 0.621371\r\n          setDistance(miles.toFixed(2))\r\n        } else {\r\n          window.alert(\"Directions request failed due to \" + status)\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  const isMobile = useMediaQuery(\"(max-width:650px)\")\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        // container\r\n        // direction=\"column\"\r\n        className={styles.directionsWrapper}\r\n      >\r\n        <div\r\n          // item\r\n          // className={\r\n          //   !isMobile ? classes.mapContainer : classes.mapContainerForMobile\r\n          // }\r\n          className={styles.directionsContainer}\r\n        >\r\n          <Map\r\n            google={props.google}\r\n            styles={MapStyles}\r\n            disableDefaultUI={true}\r\n            className={\"map\"}\r\n            onReady={handleMapReady}\r\n          ></Map>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyCmKhi_5V_pulQtm6DFJ8teDZpR9I5hJoM\",\r\n  libraries: [\"geometry\"],\r\n})(Directions)\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\GoogleMap\\GoogleMapContainer\\GoogleMap.js",["498","499","500","501","502","503","504","505","506","507","508","509","510","511"],"import { GoogleApiWrapper, Map, Marker } from \"google-maps-react\"\r\nimport React, { forwardRef, useContext, useState } from \"react\"\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\"\r\nimport {\r\n  AddLocIcon,\r\n  DeleteLocIcon,\r\n  EndLocationIcon,\r\n  StartLocationIcon,\r\n} from \"../../../assets/icons\"\r\nimport MapStyles from \"../mapStyles\"\r\nimport { connect } from \"react-redux\"\r\nimport { useStyles } from \"./GoogleMapStyles\"\r\nimport styles from \"./GoogleMap.module.scss\"\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"\r\nimport \"./animationForGoogleMap.css\"\r\nimport ThemeContext from \"../../../context\"\r\nimport styled from \"styled-components\"\r\n\r\nconst GoogleMap = React.memo(\r\n  forwardRef(\r\n    ({\r\n      setDestinations,\r\n      destinations,\r\n      orderAddressDetails,\r\n      ref,\r\n      errors,\r\n      redBorderOnSubmit,\r\n      redBorderOnSubmit2,\r\n      resetInputs,\r\n      formData,\r\n      flagForGotAddressError,\r\n      ...props\r\n    }) => {\r\n      const {\r\n        ThemeProviderAppBackgroundColor,\r\n        fontColor,\r\n        borderRadiuses,\r\n        carsTypeColor,\r\n        hoverColor,\r\n        iconsColor,\r\n        backAndNextButtonsColor,\r\n        innerTextOnHover,\r\n        inputsFontColor,\r\n        borderRadiusesForInnerElements,\r\n        borderRadiusesForWholeApp,\r\n        borderColorForInnerElements,\r\n        borderColorForOuterApp,\r\n        inputsBackground,\r\n        latitude,\r\n        longitude,\r\n      } = useContext(ThemeContext)\r\n\r\n      const [condition, setCondition] = useState([])\r\n\r\n      const handleChanger = (e) => {\r\n        setCondition(e.event.target)\r\n        // console.log(condition)\r\n      }\r\n      const [markers, setMarkers] = useState([])\r\n      const [mapCenter, setMapCenter] = useState({\r\n        lat: latitude,\r\n        lng: longitude,\r\n      })\r\n\r\n      const setUseHookState = (value, id) => {\r\n        let newArr = [...destinations]\r\n        newArr[id].rideCheckPoint = value\r\n        setDestinations(newArr)\r\n      }\r\n\r\n      const handleChange = (value, id) => {\r\n        setUseHookState(value, id)\r\n      }\r\n\r\n      let selectedArray = null\r\n\r\n      const handleSelect = async (value, id) => {\r\n        setUseHookState(value, id)\r\n        const results = await geocodeByAddress(value)\r\n        const latLng = await getLatLng(results[0])\r\n        const placeId = results[0].place_id\r\n        let placeType = 0\r\n        if (results[0].types.some((types) => types === \"airport\")) {\r\n          placeType = 2\r\n        }\r\n        selectedArray = [...destinations]\r\n        selectedArray[id] = {\r\n          ...selectedArray[id],\r\n          latitude: latLng.lat,\r\n          longitude: latLng.lng,\r\n          placeId: placeId,\r\n          placeType: placeType,\r\n        }\r\n\r\n        setDestinations(selectedArray)\r\n\r\n        setMapCenter({ lat: latLng.lat, lng: latLng.lng })\r\n        if (markers.length >= 1) {\r\n          markers.splice(0, 2)\r\n          setMarkers([...markers, { lat: latLng.lat, lng: latLng.lng }])\r\n        } else {\r\n          setMarkers([...markers, { lat: latLng.lat, lng: latLng.lng }])\r\n        }\r\n      }\r\n\r\n      const addEndPoint = () => {\r\n        let newArr = [\r\n          ...destinations,\r\n          {\r\n            rideCheckPoint: \"\",\r\n            latitude: 0,\r\n            longitude: 0,\r\n            placeType: 0,\r\n            placeId: \"\",\r\n          },\r\n        ]\r\n        setDestinations(newArr)\r\n      }\r\n\r\n      const airportCenter4 = [\r\n        \"Daniel K. Inouye International Airport (HNL), Rodgers Blvd, Honolulu, HI, USA\",\r\n        \"Honolulu Airport (HNL), Rodgers Blvd, Honolulu, HI, USA\",\r\n      ]\r\n      var nothing = null\r\n      const removeEndPoint = (index) => {\r\n        let newArr = [...destinations]\r\n        newArr.splice(index, 1)\r\n        setDestinations(newArr)\r\n      }\r\n      var copiedSuggestions = null\r\n      var copiedLoading = null\r\n      React.useEffect(() => {}, [orderAddressDetails])\r\n      React.useEffect(() => {\r\n        if (Boolean(formData.orderAddressDetails[0]?.rideCheckPoint)) {\r\n          setDestinations(formData.orderAddressDetails)\r\n        }\r\n        if (resetInputs) {\r\n          setDestinations(destinations)\r\n        }\r\n      }, [])\r\n\r\n      const setDestinationsIcons = (id, destinations) => {\r\n        if (id === 0) {\r\n          return styles.destinationsInputWithFROMIcon\r\n        } else if (id === destinations.length - 1) {\r\n          return styles.destinationsInputWithTOIcon\r\n        }\r\n        if (id > 0 && id < destinations.length - 1) {\r\n          return styles.destinationsInputWithNumberIcon\r\n        }\r\n      }\r\n      const getDestinationsIcons = (id, destinations) => {\r\n        if (id === 0) {\r\n          return <StartLocationIcon color={inputsFontColor} />\r\n        } else if (id === destinations.length - 1) {\r\n          return <EndLocationIcon color={inputsFontColor} />\r\n        }\r\n      }\r\n\r\n      return (\r\n        <>\r\n          <div className={styles.mapWithInputsWrapper}>\r\n            <div className={styles.mapContainer}>\r\n              <div className={styles.mapContainerForHideMapsTagsPositioning}>\r\n                <Map\r\n                  google={props.google}\r\n                  disableDefaultUI={true}\r\n                  initialCenter={{\r\n                    lat: mapCenter.lat,\r\n                    lng: mapCenter.lng,\r\n                  }}\r\n                  center={{\r\n                    lat: mapCenter.lat,\r\n                    lng: mapCenter.lng,\r\n                  }}\r\n                  styles={MapStyles}\r\n                  zoom={12}\r\n                >\r\n                  {markers.map((marker, id) => (\r\n                    <Marker\r\n                      key={`${id}${marker.lat}`}\r\n                      lat={marker.lat}\r\n                      lng={marker.lng}\r\n                    />\r\n                  ))}\r\n                </Map>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={styles.mapInputsContainerForHideMapsTagsPositioning}\r\n              style={{ background: ThemeProviderAppBackgroundColor }}\r\n            >\r\n              <div className={styles.mapInputsContainer}>\r\n                <TransitionGroup>\r\n                  {destinations.map((destination, id) => {\r\n                    // console.log(destinations)\r\n                    if (!airportCenter4.includes(destination?.rideCheckPoint)) {\r\n                      nothing = destinations[id]?.rideCheckPoint\r\n                    }\r\n\r\n                    return (\r\n                      <CSSTransition\r\n                        key={id}\r\n                        classNames={{\r\n                          enter: \"enter\",\r\n                          enterActive: \"enterActive\",\r\n                          exit: \"exit\",\r\n                          exitActive: \"exitActive\",\r\n                        }}\r\n                        timeout={300}\r\n                      >\r\n                        <PlacesAutocomplete\r\n                          value={\r\n                            formData.orderAddressDetails[id]?.rideCheckPoint &&\r\n                            !resetInputs\r\n                              ? formData.orderAddressDetails[id]?.rideCheckPoint\r\n                              : nothing\r\n                          }\r\n                          onChange={(value) => handleChange(value, id)}\r\n                          onSelect={(value) => {\r\n                            handleSelect(value, id)\r\n                          }}\r\n                          key={`${destination.id}${id}`}\r\n                        >\r\n                          {({\r\n                            getInputProps,\r\n                            suggestions,\r\n                            getSuggestionItemProps,\r\n                            loading,\r\n                          }) => {\r\n                            copiedSuggestions = [...suggestions].filter(\r\n                              (item) => {\r\n                                return !airportCenter4.includes(\r\n                                  item.description\r\n                                )\r\n                              }\r\n                            )\r\n\r\n                            return (\r\n                              <>\r\n                                <div\r\n                                  className={styles.destinationsInputContainer}\r\n                                >\r\n                                  {id > 0 && id < destinations.length - 1 && (\r\n                                    <span\r\n                                      className={\r\n                                        styles.numberOfDestinationPoint\r\n                                      }\r\n                                      style={{\r\n                                        color: inputsFontColor,\r\n                                        border: `2px solid ${inputsFontColor}`,\r\n                                      }}\r\n                                    >\r\n                                      {id}\r\n                                    </span>\r\n                                  )}\r\n                                  {getDestinationsIcons(id, destinations)}\r\n                                  <AddressInput\r\n                                    value={\r\n                                      formData.orderAddressDetails[id]\r\n                                        ?.rideCheckPoint && !resetInputs\r\n                                        ? formData.orderAddressDetails[id]\r\n                                            ?.rideCheckPoint\r\n                                        : nothing\r\n                                    }\r\n                                    name=\"rideCheckPoint\"\r\n                                    defaultValue={\r\n                                      destinations[id]?.rideCheckPoint\r\n                                    }\r\n                                    inputRef={ref}\r\n                                    style={{\r\n                                      color: inputsFontColor,\r\n                                      border:\r\n                                        redBorderOnSubmit ||\r\n                                        redBorderOnSubmit2 ||\r\n                                        flagForGotAddressError\r\n                                          ? `1px solid red`\r\n                                          : `1px solid ${borderColorForInnerElements}`,\r\n                                      background: inputsBackground,\r\n                                      borderRadius:\r\n                                        borderRadiusesForInnerElements,\r\n                                    }}\r\n                                    inputsFontColor={inputsFontColor}\r\n                                    placeholder={id === 0 ? \"From\" : \"To\"}\r\n                                    className={setDestinationsIcons(\r\n                                      id,\r\n                                      destinations\r\n                                    )}\r\n                                    {...getInputProps()}\r\n                                  />\r\n                                  {id === destinations.length - 1 && (\r\n                                    <span\r\n                                      onClick={addEndPoint}\r\n                                      className={styles.addLocationIcon}\r\n                                    >\r\n                                      <AddLocIcon color={inputsFontColor} />\r\n                                    </span>\r\n                                  )}\r\n                                  {id > 0 && id < destinations.length - 1 && (\r\n                                    <span\r\n                                      onClick={() => removeEndPoint(id)}\r\n                                      className={styles.deleteLocationIcon}\r\n                                    >\r\n                                      <DeleteLocIcon color={inputsFontColor} />\r\n                                    </span>\r\n                                  )}\r\n                                  <div className={styles.dropDown}>\r\n                                    {loading && (\r\n                                      <div\r\n                                        className={styles.dropDownLoadingText}\r\n                                      >\r\n                                        Loading...\r\n                                      </div>\r\n                                    )}\r\n                                    {copiedSuggestions.map((suggestion, id) => {\r\n                                      return (\r\n                                        <div\r\n                                          key={`${id}${suggestion.description}`}\r\n                                          {...getSuggestionItemProps(\r\n                                            suggestion\r\n                                          )}\r\n                                          className={styles.itemInsideDropDown}\r\n                                        >\r\n                                          {suggestion.description}\r\n                                        </div>\r\n                                      )\r\n                                    })}\r\n                                  </div>\r\n                                </div>\r\n                              </>\r\n                            )\r\n                          }}\r\n                        </PlacesAutocomplete>\r\n                      </CSSTransition>\r\n                    )\r\n                  })}\r\n                </TransitionGroup>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )\r\n    }\r\n  )\r\n)\r\n\r\nconst AddressInput = styled.input`\r\n  box-sizing: border-box !important;\r\n  width: 100% !important;\r\n  height: 35px !important;\r\n  position: relative !important;\r\n  padding-top: 0 !important;\r\n  padding-bottom: 0 !important;\r\n  padding-left: 37px !important;\r\n  padding-right: 35px !important;\r\n  background-position-x: 2% !important;\r\n  background-position-y: 60% !important;\r\n  font-size: 13.5px !important;\r\n  margin: 0 !important;\r\n  &::placeholder {\r\n    /* Chrome, Firefox, Opera, Safari 10.1+ */\r\n    color: ${(props) => props.inputsFontColor}!important;\r\n    opacity: 1 !important; /* Firefox */\r\n  }\r\n  &:-ms-input-placeholder {\r\n    /* Internet Explorer 10-11 */\r\n    color: ${(props) => props.inputsFontColor}!important;\r\n  }\r\n  &::-ms-input-placeholder {\r\n    /* Microsoft Edge */\r\n    color: ${(props) => props.inputsFontColor}!important;\r\n  }\r\n  &:focus {\r\n    outline: none !important;\r\n  }\r\n`\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // profile: state.companyProfile.profile,\r\n    formData: state.formData,\r\n    resetInputs: state.resetWidgetInputs.resetInputs,\r\n    flagForGotAddressError: state.companyProfile.gotAddressError,\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyCmKhi_5V_pulQtm6DFJ8teDZpR9I5hJoM\",\r\n  libraries: [\"places\", \"drawing\", \"geometry\"],\r\n})(connect(mapStateToProps, {})(GoogleMap))\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\TermsOfUse\\TermOfUse\\TermOfUse.js",["512","513","514","515","516","517","518","519","520","521","522","523","524"],"import React, { useContext } from \"react\"\r\nimport styles from \"./TermOfUse.module.scss\"\r\nimport { Modal } from \"../../Helpers/Modal/Modal\"\r\nimport ThemeContext from \"../../../context\"\r\n\r\nexport default function TermsOfUse() {\r\n  const [open, setOpen] = React.useState(false)\r\n  const [term, setTerm] = React.useState(\"\")\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n  const [show, setShow] = React.useState(false)\r\n\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiuses,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n  } = useContext(ThemeContext)\r\n  return (\r\n    <>\r\n      <span\r\n        onClick={() => setShow(true)}\r\n        className={styles.termOfUseOpenButton}\r\n        style={{ color: fontColor }}\r\n      >\r\n        Terms&nbsp;\r\n      </span>\r\n      <Modal\r\n        onClose={() => setShow(false)}\r\n        show={show}\r\n        // aria-labelledby='scroll-dialog-title'\r\n        // aria-describedby='scroll-dialog-description'\r\n      >\r\n        {/* <DialogTitle\r\n          id='scroll-dialog-title'\r\n          style={{ height: '55px', backgroundColor: 'black' }}\r\n        > */}\r\n        <div\r\n          // style={{ width: \"600px\", height: \"100%\" }}\r\n          className={styles.termOfUseContainer}\r\n        >\r\n          <p>Terms Of Use</p>\r\n          {/* </DialogTitle> */}\r\n          {/* <DialogContent style={{ backgroundColor: 'black' }}>\r\n          <DialogContentText\r\n            id='scroll-dialog-description'\r\n            ref={descriptionElementRef}\r\n            tabIndex={-1}\r\n            style={{ overflowX: 'hidden', backgroundColor: 'black' }}\r\n          > */}\r\n          <>\r\n            <p>Terms and Conditions of Bookinglane Manager</p>\r\n            <p>\r\n              These Terms governa the use of Bookinglane Manager, and, any other\r\n              related Agreement or legal relationship with the Owner in a\r\n              legally binding way. Capitalized words are defined in the relevant\r\n              dedicated section of this document. The User must read this\r\n              document carefully. Any other contract or agreement entered into\r\n              between the Owner and the Sellers shall always prevail over the\r\n              provisions of these Terms. Therefore, in such cases, these Terms\r\n              shall apply only residually and in accordance with applicable\r\n              provisions in such agreements or contracts. Although the entire\r\n              contractual relationship relating to these Products is entered\r\n              into solely by the Owner and Users, Users acknowledge and agree\r\n              that, where Bookinglane Manager has been provided to them via the\r\n              Apple App Store, Apple may enforce these Terms as a third-party\r\n              beneficiary. Nothing in these Terms creates any relationship of\r\n              employment, agency, or partnership between the involved parties.\r\n              Bookinglane Manager is provided by: Bookinglane LLC 1905 Concord\r\n              Blvd, Concord, CA, 94520, USA Owner contact email:\r\n              info@bookinglane.com\r\n            </p>\r\n\r\n            <p>What the User should know at a glance</p>\r\n            <p>\r\n              Bookinglane Manager uses automatic renewal for Product\r\n              subscriptions. Information about the a) renewal period, b)\r\n              termination details and c) termination notice can be found in the\r\n              relevant section of these Terms. Please note that some provisions\r\n              in these Terms may only apply to certain categories of Users. In\r\n              particular, certain provisions may only apply to Consumers or to\r\n              those Users that do not qualify as Consumers. Such limitations are\r\n              always explicitly mentioned within each affected clause. In the\r\n              absence of any such mention, clauses apply to all Users. How\r\n              Bookinglane Manager works By accepting the Terms, Users fully and\r\n              unconditionally release and forever discharge the Owner, its\r\n              officers, directors, employees and agents from any and all claims,\r\n              demands and damages (actual or consequential, direct or indirect),\r\n              whether now known or unknown, of every kind and nature relating\r\n              to, arising out of or in any way connected with: disputes between\r\n              Users, or any other person or entity, the Products’ use,\r\n              including, without limitation, any and all claims that such use\r\n              violates any of Seller’s intellectual property rights, copyrights,\r\n              rights of publicity or privacy, “moral rights,” or rights of\r\n              attribution and integrity, or Users’ activity on Bookinglane\r\n              Manager, including, but not limited to, Users’ legal capacity,\r\n              ability to complete a transaction, or pay the associated costs.\r\n              User acknowledges and agrees that the Owner has no control over,\r\n              and shall have no liability for any damages resulting from, the\r\n              use or misuse by any other person or entity of any Products. If\r\n              the Owner becomes aware of any Products that allegedly may not\r\n              conform to the Terms, the Owner may investigate the allegation and\r\n              determine in its sole discretion whether to take action in\r\n              accordance with the Terms. The Owner has no liability or\r\n              responsibility to Users for performance or nonperformance of such\r\n              activities. The Owner has the absolute right to remove and/or\r\n              delete without notice any Products within its control that it\r\n              deems objectionable. Users consent to such removal and/or deletion\r\n              and waive any claim against the Owner for such removal and/or\r\n              deletion. The Owner is not responsible or liable for failure to\r\n              store posted content or other materials Users may transmit through\r\n              Bookinglane Manager. Users shall take measures to preserve copies\r\n              of any data, material, content or information such User posts on\r\n              Bookinglane Manager. Any identity verification methods the Owner\r\n              employs is strictly on a best efforts basis and shall not be\r\n              relied upon by Users. Without prejudice to its role as a mere\r\n              technical intermediary as described above, the Owner may provide\r\n              additional services to either party of such interaction, such as\r\n              providing packaging, shipping or facilitating dispute resolution.\r\n              Bookinglane Manager merely serves as a technical infrastructure or\r\n              platform to allow Users to interact with each other. The Owner\r\n              therefore is not directly involved in any such interactions\r\n              between Users. These Terms only apply to the described usage of\r\n              Bookinglane Manager as a platform. Terms, conditions and any other\r\n              provision applying specifically to transactions between Buyers and\r\n              Sellers are specified by each Seller.\r\n            </p>\r\n\r\n            <p>TERMS OF USE</p>\r\n            <p>\r\n              Unless otherwise specified, the terms of use detailed in this\r\n              section apply generally when using Bookinglane Manager. Single or\r\n              additional conditions of use or access may apply in specific\r\n              scenarios and in such cases are additionally indicated within this\r\n              document. By using Bookinglane Manager, Users confirm to meet the\r\n              following requirements: There are no restrictions for Users in\r\n              terms of being Consumers or Business Users; Users aren’t located\r\n              in a country that is subject to a U.S. Government embargo, or that\r\n              has been designated by the U.S. Government as a\r\n              “terrorist-supporting” country; Users aren’t listed on any U.S.\r\n              Government list of prohibited or restricted parties;\r\n            </p>\r\n\r\n            <p>Account registration</p>\r\n\r\n            <p>\r\n              To use the Service Users must register or create a User account,\r\n              providing all required data or information in a complete and\r\n              truthful manner. Failure to do so will cause unavailability of the\r\n              Service. Users are responsible for keeping their login credentials\r\n              confidential and safe. For this reason, Users are also required to\r\n              choose passwords that meet the highest standards of strength\r\n              permitted by Bookinglane Manager. By registering, Users agree to\r\n              be fully responsible for all activities that occur under their\r\n              username and password. Users are required to immediately and\r\n              unambiguously inform the Owner via the contact details indicated\r\n              in this document, if they think their personal information,\r\n              including but not limited to User accounts, access credentials or\r\n              personal data, have been violated, unduly disclosed or stolen.\r\n            </p>\r\n\r\n            <p>Conditions for account registration</p>\r\n\r\n            <p>\r\n              Registration of User accounts on Bookinglane Manager is subject to\r\n              the conditions outlined below. By registering, Users agree to meet\r\n              such conditions. Accounts registered by bots or any other\r\n              automated methods are not permitted. Unless otherwise specified,\r\n              each User must register only one account. Unless explicitly\r\n              permitted, a User account may not be shared with other persons.\r\n            </p>\r\n\r\n            <p>Account termination</p>\r\n\r\n            <p>\r\n              Users can terminate their account and stop using the Service at\r\n              any time by doing the following: By directly contacting the Owner\r\n              at the contact details provided in this document. However,\r\n              termination of the account will not be possible until the\r\n              subscription period paid for by the User has expired.\r\n            </p>\r\n\r\n            <p>Account suspension and deletion</p>\r\n\r\n            <p>\r\n              The Owner reserves the right, at its sole discretion, to suspend\r\n              or delete at any time and without notice, User accounts which it\r\n              deems inappropriate, offensive or in violation of these Terms. The\r\n              suspension or deletion of User accounts shall not entitle Users to\r\n              any claims for compensation, damages or reimbursement. The\r\n              suspension or deletion of accounts due to causes attributable to\r\n              the User does not exempt the User from paying any applicable fees\r\n              or prices.\r\n            </p>\r\n\r\n            <p>Content on Bookinglane Manager</p>\r\n\r\n            <p>\r\n              Unless where otherwise specified or clearly recognizable, all\r\n              content available on Bookinglane Manager is owned or provided by\r\n              the Owner or its licensors. The Owner undertakes its utmost effort\r\n              to ensure that the content provided on Bookinglane Manager\r\n              infringes no applicable legal provisions or third-party rights.\r\n              However, it may not always be possible to achieve such a result.\r\n              In such cases, without prejudice to any legal prerogatives of\r\n              Users to enforce their rights, Users are kindly asked to\r\n              preferably report related complaints using the contact details\r\n              provided in this document.\r\n            </p>\r\n\r\n            <p>\r\n              Rights regarding content on Bookinglane Manager - All rights\r\n              reserved\r\n            </p>\r\n\r\n            <p>\r\n              The Owner holds and reserves all intellectual property rights for\r\n              any such content. Users may not therefore use such content in any\r\n              way that is not necessary or implicit in the proper use of the\r\n              Service. In particular, but without limitation, Users may not\r\n              copy, download, share (beyond the limits set forth below), modify,\r\n              translate, transform, publish, transmit, sell, sublicense, edit,\r\n              transfer/assign to third parties or create derivative works from\r\n              the content available on Bookinglane Manager, nor allow any third\r\n              party to do so through the User or their device, even without the\r\n              User's knowledge. Where explicitly stated on Bookinglane Manager,\r\n              the User may download, copy and/or share some content available\r\n              through Bookinglane Manager for its sole personal and\r\n              non-commercial use and provided that the copyright attributions\r\n              and all the other attributions requested by the Owner are\r\n              correctly implemented. Any applicable statutory limitation or\r\n              exception to copyright shall stay unaffected.\r\n            </p>\r\n\r\n            <p>Content provided by Users</p>\r\n\r\n            <p>\r\n              The Owner allows Users to upload, share or provide their own\r\n              content to Bookinglane Manager. By providing content to\r\n              Bookinglane Manager, Users confirm that they are legally allowed\r\n              to do so and that they are not infringing any statutory provisions\r\n              and/or third-party rights. Further insights regarding acceptable\r\n              content can be found inside the respective section on Bookinglane\r\n              Manager which details the acceptable uses.\r\n            </p>\r\n\r\n            <p>Rights regarding content provided by Users</p>\r\n\r\n            <p>\r\n              Users acknowledge and accept that by providing their own content\r\n              on Bookinglane Manager they grant the Owner a non-exclusive, fully\r\n              paid-up and royalty-free license to process such content solely\r\n              for the operation and maintenance of Bookinglane Manager as\r\n              contractually required. To the extent permitted by applicable law,\r\n              Users waive any moral rights in connection with content they\r\n              provide to Bookinglane Manager. Users acknowledge, accept and\r\n              confirm that all content they provide through Bookinglane Manager\r\n              is provided subject to the same general conditions set forth for\r\n              content on Bookinglane Manager.\r\n            </p>\r\n\r\n            <p>Liability for provided content</p>\r\n            <p>\r\n              Users are solely liable for any content they upload, post, share,\r\n              or provide through Bookinglane Manager. Users acknowledge and\r\n              accept that the Owner does not filter or moderate such content.\r\n              However, the Owner reserves the right to remove, delete, block or\r\n              rectify such content at its own discretion and to, without prior\r\n              notice, deny the uploading User access to Bookinglane Manager: if\r\n              any complaint based on such content is received; if a notice of\r\n              infringement of intellectual property rights is received; upon\r\n              order of a public authority; or where the Owner is made aware that\r\n              the content, while being accessible via Bookinglane Manager, may\r\n              represent a risk for Users, third parties and/or the availability\r\n              of the Service. The removal, deletion, blocking or rectification\r\n              of content shall not entitle Users that have provided such content\r\n              or that are liable for it, to any claims for compensation, damages\r\n              or reimbursement. Users agree to hold the Owner harmless from and\r\n              against any claim asserted and/or damage suffered due to content\r\n              they provided to or provided through Bookinglane Manager.\r\n            </p>\r\n\r\n            <p>Access to external resources</p>\r\n            <p>\r\n              Through Bookinglane Manager Users may have access to external\r\n              resources provided by third parties. Users acknowledge and accept\r\n              that the Owner has no control over such resources and is therefore\r\n              not responsible for their content and availability. Conditions\r\n              applicable to any resources provided by third parties, including\r\n              those applicable to any possible grant of rights in content,\r\n              result from each such third parties’ terms and conditions or, in\r\n              the absence of those, applicable statutory law.\r\n            </p>\r\n\r\n            <p>Acceptable use</p>\r\n            <p>\r\n              Bookinglane Manager and the Service may only be used within the\r\n              scope of what they are provided for, under these Terms and\r\n              applicable law. Users are solely responsible for making sure that\r\n              their use of Bookinglane Manager and/or the Service violates no\r\n              applicable law, regulations or third-party rights. Therefore, the\r\n              Owner reserves the right to take any appropriate measure to\r\n              protect its legitimate interests including by denying Users access\r\n              to Bookinglane Manager or the Service, terminating contracts,\r\n              reporting any misconduct performed through Bookinglane Manager or\r\n              the Service to the competent authorities – such as judicial or\r\n              administrative authorities - whenever Users engage or are\r\n              suspected to engage in any of the following activities: violate\r\n              laws, regulations and/or these Terms; infringe any third-party\r\n              rights; considerably impair the Owner’s legitimate interests;\r\n              offend the Owner or any third party.\r\n            </p>\r\n\r\n            <p>Software license</p>\r\n            <p>\r\n              The software embedded in or related to Bookinglane Manager is\r\n              provided under a some-rights-reserved license. This means that\r\n              Users are granted broad rights, including but not limited to the\r\n              rights to use, execute, copy or distribute the software, to the\r\n              extent determined by such license. The terms of such license shall\r\n              always prevail upon conflicting, divergent or inconsistent\r\n              provisions of these Terms. Users may find further information\r\n              regarding the license terms in the relevant section of Bookinglane\r\n              Manager.\r\n            </p>\r\n\r\n            <p variant=\"h5\" color=\"textPrimary\" paragraph={true}>\r\n              TERMS AND CONDITIONS OF SALE\r\n            </p>\r\n\r\n            <p>Paid Products</p>\r\n            <p>\r\n              Some of the Products provided on Bookinglane Manager, as part of\r\n              the Service, are provided on the basis of payment. The fees,\r\n              duration and conditions applicable to the purchase of such\r\n              Products are described below and in the dedicated sections of\r\n              Bookinglane Manager.\r\n            </p>\r\n            <p>Product description</p>\r\n            <p>\r\n              Prices, descriptions or availability of Products are outlined in\r\n              the respective sections of Bookinglane Manager and are subject to\r\n              change without notice. While Products on Bookinglane Manager are\r\n              presented with the greatest accuracy technically possible,\r\n              representation on Bookinglane Manager through any means\r\n              (including, as the case may be, graphic material, images, colors,\r\n              sounds) is for reference only and implies no warranty as to the\r\n              characteristics of the purchased Product. The characteristics of\r\n              the chosen Product will be outlined during the purchasing process.\r\n            </p>\r\n            <p>Purchasing process</p>\r\n            <p>\r\n              Any steps taken from choosing a Product to order submission form\r\n              part of the purchasing process. The purchasing process includes\r\n              these steps: By clicking on the checkout button, Users open the\r\n              Stripe checkout section, wherein they will have to specify their\r\n              contact details and a payment method of their choice. After\r\n              providing all the required information, Users must carefully\r\n              review the order and, subsequently, confirm and submit it by using\r\n              the relevant button or mechanism on Bookinglane Manager, hereby\r\n              accepting these Terms and committing to pay the agreed-upon price.\r\n            </p>\r\n            <p>Order submission</p>\r\n            <p>\r\n              When the User submits an order, the following applies: The\r\n              submission of an order determines contract conclusion and\r\n              therefore creates for the User the obligation to pay the price,\r\n              taxes and possible further fees and expenses, as specified on the\r\n              order page. In case the purchased Product requires active input\r\n              from the User, such as the provision of personal information or\r\n              data, specifications or special wishes, the order submission\r\n              creates an obligation for the User to cooperate accordingly. Upon\r\n              submission of the order, Users will receive a receipt confirming\r\n              that the order has been received. All notifications related to the\r\n              described purchasing process shall be sent to the email address\r\n              provided by the User for such purposes.\r\n            </p>\r\n\r\n            <p>Prices</p>\r\n            <p>\r\n              Users are informed during the purchasing process and before order\r\n              submission, about any fees, taxes and costs (including, if any,\r\n              delivery costs) that they will be charged. Prices on Bookinglane\r\n              Manager are displayed: either exclusive or inclusive of any\r\n              applicable fees, taxes and costs, depending on the section the\r\n              User is browsing.\r\n            </p>\r\n\r\n            <p>Methods of payment</p>\r\n            <p>\r\n              Information related to accepted payment methods are made available\r\n              during the purchasing process. Some payment methods may only be\r\n              available subject to additional conditions or fees. In such cases\r\n              related information can be found in the dedicated section of\r\n              Bookinglane Manager. All payments are independently processed\r\n              through third-party services. Therefore, Bookinglane Manager does\r\n              not collect any payment information – such as credit card details\r\n              – but only receives a notification once the payment has been\r\n              successfully completed. If payment through the available methods\r\n              fail or is refused by the payment service provider, the Owner\r\n              shall be under no obligation to fulfil the purchase order. Any\r\n              possible costs or fees resulting from the failed or refused\r\n              payment shall be borne by the User.\r\n            </p>\r\n            <p>Purchase via app store</p>\r\n            <p>\r\n              Bookinglane Manager or specific Products available for sale on\r\n              Bookinglane Manager must be purchased via a third-party app store.\r\n              To access such purchases, Users must follow the instructions\r\n              provided on the relevant online store (such as \"Apple App Store\"\r\n              or \"Google Play\"), which may vary depending on the particular\r\n              device in use. Unless otherwise specified, purchases done via\r\n              third-party online stores are also subject to such third-parties’\r\n              terms and conditions, which, in case of any inconsistency or\r\n              conflict, shall always prevail upon these Terms. Users purchasing\r\n              through such third-party online stores must therefore read such\r\n              terms and conditions of sale carefully and accept them.\r\n            </p>\r\n            <p>Retention of usage rights</p>\r\n            <p>\r\n              Users do not acquire any rights to use the purchased Product until\r\n              the total purchase price is received by the Owner.\r\n            </p>\r\n            <p>Delivery</p>\r\n            <p>\r\n              Performance of services The purchased service shall be performed\r\n              or made available within the timeframe specified on Bookinglane\r\n              Manager or as communicated before the order submission.\r\n            </p>\r\n            <p>Contract duration</p>\r\n            <p>\r\n              Trial period Users have the option to test Bookinglane Manager or\r\n              selected Products during a limited and non-renewable trial period,\r\n              at no cost. Some features or functions of Bookinglane Manager may\r\n              not be available to Users during the trial period. Further\r\n              conditions applicable to the trial period, including its duration,\r\n              will be specified on Bookinglane Manager. The trial period shall\r\n              automatically convert into the equivalent paid Product, unless the\r\n              User cancels the purchase before the trial period expires.\r\n              Subscriptions Subscriptions allow Users to receive a Product\r\n              continuously or regularly over a determined period of time. Paid\r\n              subscriptions begin on the day the payment is received by the\r\n              Owner. In order to maintain subscriptions, Users must pay the\r\n              required recurring fee in a timely manner. Failure to do so may\r\n              cause service interruptions. Fixed-term subscriptions Paid\r\n              fixed-term subscriptions start on the day the payment is received\r\n              by the Owner and last for the subscription period chosen by the\r\n              User or otherwise specified during the purchasing process. Once\r\n              the subscription period expires, the Product shall no longer be\r\n              accessible, unless the User renews the subscription by paying the\r\n              relevant fee. Fixed-term subscriptions may not be terminated\r\n              prematurely and shall run out upon expiration of the subscription\r\n              term. Subscriptions handled via Apple ID Users may subscribe to a\r\n              Product using the Apple ID associated with their Apple App Store\r\n              account by using the relevant process on Bookinglane Manager. When\r\n              doing so, Users acknowledge and accept that any payment due shall\r\n              be charged to their Apple ID account; subscriptions are\r\n              automatically renewed for the same duration unless the User\r\n              cancels at least 24 hours before the current period expires; any\r\n              and all fees or payments due for renewal will be charged within\r\n              24-hours before the end of the current period; subscriptions can\r\n              be managed or cancelled in the Users’ Apple App Store account\r\n              settings. The above shall prevail upon any conflicting or\r\n              diverging provision of these Terms. Automatic renewal\r\n              Subscriptions are automatically renewed through the payment method\r\n              that the User chose during purchase, unless the User cancels the\r\n              subscription within the deadlines for termination specified in the\r\n              relevant section of these Terms and/or Bookinglane Manager. The\r\n              renewed subscription will last for a period equal to the original\r\n              term. The User shall receive a reminder of the upcoming renewal\r\n              with reasonable advance, outlining the procedure to be followed in\r\n              order to cancel the automatic renewal. Termination Recurring\r\n              subscriptions may be terminated at any time by sending a clear and\r\n              unambiguous termination notice to the Owner using the contact\r\n              details provided in this document, or — if applicable — by using\r\n              the corresponding controls inside Bookinglane Manager. Termination\r\n              notice If the notice of termination is received by the Owner\r\n              before the subscription renews, the termination shall take effect\r\n              as soon as the current period is completed.\r\n            </p>\r\n            <p>User rights</p>\r\n            <p>Right of withdrawal</p>\r\n            <p>\r\n              Unless exceptions apply, the User may be eligible to withdraw from\r\n              the contract within the period specified below (generally 14\r\n              days), for any reason and without justification. Users can learn\r\n              more about the withdrawal conditions within this section. The\r\n              right of withdrawal does not apply on Bookinglane Manager Users\r\n              acknowledge and accept that the right of withdrawal does not apply\r\n              to contracts concluded over Bookinglane Manager due to the nature\r\n              of its offering.\r\n            </p>\r\n            <p>Liability and indemnification</p>\r\n            <p>EU Users</p>\r\n            <p>\r\n              Indemnification The User agrees to indemnify and hold the Owner\r\n              and its subsidiaries, affiliates, officers, directors, agents,\r\n              co-branders, partners and employees harmless from and against any\r\n              claim or demand ⁠— including but not limited to lawyer's fees and\r\n              costs ⁠— made by any third party due to or in relation with any\r\n              culpable use of or connection to the Service, violation of these\r\n              Terms, infringement of any third-party rights or statutory\r\n              provision by the User or its affiliates, officers, directors,\r\n              agents, co-branders, partners and employees to the extent allowed\r\n              by applicable law. Users acknowledge and accept that the Owner\r\n              merely provides Users with the technical infrastructure and\r\n              features incorporated in Bookinglane Manager. The Owner does not\r\n              intermediate, moderate, promote or intervene in interactions,\r\n              agreements or transactions between Users and therefore bears no\r\n              liability for any such interactions among Users, including the\r\n              performance of any Users' obligations. Users, in particular,\r\n              acknowledge and accept that the Owner is not involved in sales and\r\n              purchases by Users qualifying respectively as Sellers or Buyers\r\n              over Bookinglane Manager. This means that Sellers and Buyers are\r\n              solely liable for respectively offering and purchasing through\r\n              Bookinglane Manager and for the obligations resulting thereof. In\r\n              particular, the Owner shall bear no liability for: any\r\n              pre-contractual statement, claim or description of the Products\r\n              offered through/via Bookinglane Manager; the existence of any\r\n              applicable license, authorization, qualification or other official\r\n              permit allowing Sellers to offer specific goods or services, as\r\n              may be required by applicable law; the Buyers' eligibility (e.g.\r\n              in terms of age, solvency etc.) for purchase according to\r\n              applicable law; any obligation stipulated by Users over\r\n              Bookinglane Manager, including but not limited to product\r\n              guarantees and product safety; any claim based on partial,\r\n              incorrect or failed performance of binding agreements entered into\r\n              on Bookinglane Manager. Limitation of liability Unless otherwise\r\n              explicitly stated and without prejudice to applicable statutory\r\n              product liability provisions, Users shall have no right to claim\r\n              damages against the Owner (or any natural or legal person acting\r\n              on its behalf). This does not apply to damages to life, health or\r\n              physical integrity, damages resulting from the breach of an\r\n              essential contractual obligation such as any obligation strictly\r\n              necessary to achieve the purpose of the contract, and/or damages\r\n              resulting from intent or gross negligence, as long as Bookinglane\r\n              Manager has been appropriately and correctly used by the User.\r\n              Unless damages have been caused by way of intent or gross\r\n              negligence, or they affect life, health or physical integrity, the\r\n              Owner shall only be liable to the extent of typical and\r\n              foreseeable damages at the moment the contract was entered into.\r\n              In particular, within the limits stated above, the Owner shall not\r\n              be liable for: any loss of business opportunities and any other\r\n              loss, even indirect, that may be incurred by the User (such as,\r\n              but not limited to, trading losses, loss of revenue, income,\r\n              profits or anticipated savings, loss of contracts or business\r\n              relationships, loss of reputation or goodwill, etc.); damages or\r\n              losses resulting from interruptions or malfunctions of Bookinglane\r\n              Manager due to acts of force majeure, or unforeseen and\r\n              unforeseeable events and, in any case, independent of the will and\r\n              beyond the control of the Owner, such as, but not limited to,\r\n              failures or disruptions of telephone or electrical lines, the\r\n              Internet and / or other means of transmission, unavailability of\r\n              websites, strikes, natural disasters, viruses and cyber attacks,\r\n              interruptions in the delivery of products, third-party services or\r\n              applications; any losses that are not the direct consequence of a\r\n              breach of the Terms by the Owner; Notwithstanding the above, the\r\n              following limitation applies to all Users not qualifying as\r\n              Consumers: In any event of liability, the compensation may not\r\n              exceed the total payments that have been, will be or would be\r\n              received by the Owner from the User based on the contract over a\r\n              period of 12 months, or the period of the duration of the\r\n              Agreement, if shorter.\r\n            </p>\r\n            <p>Australian Users</p>\r\n            <p>Limitation of liability</p>\r\n            <p>\r\n              Nothing in these Terms excludes, restricts or modifies any\r\n              guarantee, condition, warranty, right or remedy which the User may\r\n              have under the Competition and Consumer Act 2010 (Cth) or any\r\n              similar State and Territory legislation and which cannot be\r\n              excluded, restricted or modified (non-excludable right). To the\r\n              fullest extent permitted by law, our liability to the User,\r\n              including liability for a breach of a non-excludable right and\r\n              liability which is not otherwise excluded under these Terms of\r\n              Use, is limited, at the Owner’s sole discretion, to the\r\n              re-performance of the services or the payment of the cost of\r\n              having the services supplied again.\r\n            </p>\r\n\r\n            <p>US Users</p>\r\n            <p>\r\n              Disclaimer of Warranties Bookinglane Manager is provided strictly\r\n              on an “as is” and “as available” basis. Use of the Service is at\r\n              Users’ own risk. To the maximum extent permitted by applicable\r\n              law, the Owner expressly disclaims all conditions,\r\n              representations, and warranties — whether express, implied,\r\n              statutory or otherwise, including, but not limited to, any implied\r\n              warranty of merchantability, fitness for a particular purpose, or\r\n              non-infringement of third-party rights. No advice or information,\r\n              whether oral or written, obtained by user from owner or through\r\n              the Service will create any warranty not expressly stated herein.\r\n              Without limiting the foregoing, the Owner, its subsidiaries,\r\n              affiliates, licensors, officers, directors, agents, co-branders,\r\n              partners, suppliers and employees do not warrant that the content\r\n              is accurate, reliable or correct; that the Service will meet\r\n              Users’ requirements; that the Service will be available at any\r\n              particular time or location, uninterrupted or secure; that any\r\n              defects or errors will be corrected; or that the Service is free\r\n              of viruses or other harmful components. Any content downloaded or\r\n              otherwise obtained through the use of the Service is downloaded at\r\n              users own risk and users shall be solely responsible for any\r\n              damage to Users’ computer system or mobile device or loss of data\r\n              that results from such download or Users’ use of the Service. The\r\n              Owner does not warrant, endorse, guarantee, or assume\r\n              responsibility for any product or service advertised or offered by\r\n              a third party through the Service or any hyperlinked website or\r\n              service, and the Owner shall not be a party to or in any way\r\n              monitor any transaction between Users and third-party providers of\r\n              products or services. The Service may become inaccessible or it\r\n              may not function properly with Users’ web browser, mobile device,\r\n              and/or operating system. The owner cannot be held liable for any\r\n              perceived or actual damages arising from Service content,\r\n              operation, or use of this Service. Federal law, some states, and\r\n              other jurisdictions, do not allow the exclusion and limitations of\r\n              certain implied warranties. The above exclusions may not apply to\r\n              Users. This Agreement gives Users specific legal rights, and Users\r\n              may also have other rights which vary from state to state. The\r\n              disclaimers and exclusions under this agreement shall not apply to\r\n              the extent prohibited by applicable law.\r\n            </p>\r\n            <p>Limitations of liability</p>\r\n            <p>\r\n              To the maximum extent permitted by applicable law, in no event\r\n              shall the Owner, and its subsidiaries, affiliates, officers,\r\n              directors, agents, co-branders, partners, suppliers and employees\r\n              be liable for any indirect, punitive, incidental, special,\r\n              consequential or exemplary damages, including without limitation\r\n              damages for loss of profits, goodwill, use, data or other\r\n              intangible losses, arising out of or relating to the use of, or\r\n              inability to use, the Service; and any damage, loss or injury\r\n              resulting from hacking, tampering or other unauthorized access or\r\n              use of the Service or User account or the information contained\r\n              therein; any errors, mistakes, or inaccuracies of content;\r\n              personal injury or property damage, of any nature whatsoever,\r\n              resulting from User access to or use of the Service; any\r\n              unauthorized access to or use of the Owner’s secure servers and/or\r\n              any and all personal information stored therein; any interruption\r\n              or cessation of transmission to or from the Service; any bugs,\r\n              viruses, trojan horses, or the like that may be transmitted to or\r\n              through the Service; any errors or omissions in any content or for\r\n              any loss or damage incurred as a result of the use of any content\r\n              posted, emailed, transmitted, or otherwise made available through\r\n              the Service; and/or the defamatory, offensive, or illegal conduct\r\n              of any User or third party. In no event shall the Owner, and its\r\n              subsidiaries, affiliates, officers, directors, agents,\r\n              co-branders, partners, suppliers and employees be liable for any\r\n              claims, proceedings, liabilities, obligations, damages, losses or\r\n              costs in an amount exceeding the amount paid by User to the Owner\r\n              hereunder in the preceding 12 months, or the period of duration of\r\n              this agreement between the Owner and User, whichever is shorter.\r\n              This limitation of liability section shall apply to the fullest\r\n              extent permitted by law in the applicable jurisdiction whether the\r\n              alleged liability is based on contract, tort, negligence, strict\r\n              liability, or any other basis, even if company has been advised of\r\n              the possibility of such damage. Some jurisdictions do not allow\r\n              the exclusion or limitation of incidental or consequential\r\n              damages, therefore the above limitations or exclusions may not\r\n              apply to User. The terms give User specific legal rights, and User\r\n              may also have other rights which vary from jurisdiction to\r\n              jurisdiction. The disclaimers, exclusions, and limitations of\r\n              liability under the terms shall not apply to the extent prohibited\r\n              by applicable law.\r\n            </p>\r\n            <p>Indemnification</p>\r\n            <p>\r\n              The User agrees to defend, indemnify and hold the Owner and its\r\n              subsidiaries, affiliates, officers, directors, agents,\r\n              co-branders, partners, suppliers and employees harmless from and\r\n              against any and all claims or demands, damages, obligations,\r\n              losses, liabilities, costs or debt, and expenses, including, but\r\n              not limited to, legal fees and expenses, arising from User’s use\r\n              of and access to the Service, including any data or content\r\n              transmitted or received by User; User’s violation of these terms,\r\n              including, but not limited to, User’s breach of any of the\r\n              representations and warranties set forth in these terms; User’s\r\n              violation of any third-party rights, including, but not limited\r\n              to, any right of privacy or intellectual property rights; User’s\r\n              violation of any statutory law, rule, or regulation; any content\r\n              that is submitted from User’s account, including third party\r\n              access with User’s unique username, password or other security\r\n              measure, if applicable, including, but not limited to, misleading,\r\n              false, or inaccurate information; User’s willful misconduct; or\r\n              statutory provision by User or its affiliates, officers,\r\n              directors, agents, co-branders, partners, suppliers and employees\r\n              to the extent allowed by applicable law.\r\n            </p>\r\n            <p>Common provisions</p>\r\n            <p>No Waiver</p>\r\n            <p>\r\n              The Owner’s failure to assert any right or provision under these\r\n              Terms shall not constitute a waiver of any such right or\r\n              provision. No waiver shall be considered a further or continuing\r\n              waiver of such term or any other term.\r\n            </p>\r\n            <p>Service interruption</p>\r\n            <p>\r\n              To ensure the best possible service level, the Owner reserves the\r\n              right to interrupt the Service for maintenance, system updates or\r\n              any other changes, informing the Users appropriately. Within the\r\n              limits of law, the Owner may also decide to suspend or terminate\r\n              the Service altogether. If the Service is terminated, the Owner\r\n              will cooperate with Users to enable them to withdraw Personal Data\r\n              or information in accordance with applicable law. Additionally,\r\n              the Service might not be available due to reasons outside the\r\n              Owner’s reasonable control, such as “force majeure” (eg. labor\r\n              actions, infrastructural breakdowns or blackouts etc).\r\n            </p>\r\n            <p>Service reselling</p>\r\n            <p>\r\n              Users may not reproduce, duplicate, copy, sell, resell or exploit\r\n              any portion of Bookinglane Manager and of its Service without the\r\n              Owner’s express prior written permission, granted either directly\r\n              or through a legitimate reselling program.\r\n            </p>\r\n            <p>Privacy policy</p>\r\n            <p>\r\n              To learn more about the use of their Personal Data, Users may\r\n              refer to the privacy policy of Bookinglane Manager.\r\n            </p>\r\n\r\n            <p>Intellectual property rights</p>\r\n            <p>\r\n              Without prejudice to any more specific provision of these Terms,\r\n              any intellectual property rights, such as copyrights, trademark\r\n              rights, patent rights and design rights related to Bookinglane\r\n              Manager are the exclusive property of the Owner or its licensors\r\n              and are subject to the protection granted by applicable laws or\r\n              international treaties relating to intellectual property. All\r\n              trademarks — nominal or figurative — and all other marks, trade\r\n              names, service marks, word marks, illustrations, images, or logos\r\n              appearing in connection with Bookinglane Manager are, and remain,\r\n              the exclusive property of the Owner or its licensors and are\r\n              subject to the protection granted by applicable laws or\r\n              international treaties related to intellectual property.\r\n            </p>\r\n            <p>Changes to these Terms</p>\r\n            <p>\r\n              The Owner reserves the right to amend or otherwise modify these\r\n              Terms at any time. In such cases, the Owner will appropriately\r\n              inform the User of these changes. Such changes will only affect\r\n              the relationship with the User for the future. The continued use\r\n              of the Service will signify the User’s acceptance of the revised\r\n              Terms. If Users do not wish to be bound by the changes, they must\r\n              stop using the Service. Failure to accept the revised Terms, may\r\n              entitle either party to terminate the Agreement. The applicable\r\n              previous version will govern the relationship prior to the User's\r\n              acceptance. The User can obtain any previous version from the\r\n              Owner. If required by applicable law, the Owner will specify the\r\n              date by which the modified Terms will enter into force.\r\n            </p>\r\n            <p>Assignment of contract</p>\r\n            <p>\r\n              The Owner reserves the right to transfer, assign, dispose of by\r\n              novation, or subcontract any or all rights or obligations under\r\n              these Terms, taking the User’s legitimate interests into account.\r\n              Provisions regarding changes of these Terms will apply\r\n              accordingly. Users may not assign or transfer their rights or\r\n              obligations under these Terms in any way, without the written\r\n              permission of the Owner.\r\n            </p>\r\n            <p>Contacts</p>\r\n            <p>\r\n              All communications relating to the use of Bookinglane Manager must\r\n              be sent using the contact information stated in this document.\r\n            </p>\r\n            <p>Severability</p>\r\n            <p>\r\n              Should any provision of these Terms be deemed or become invalid or\r\n              unenforceable under applicable law, the invalidity or\r\n              unenforceability of such provision shall not affect the validity\r\n              of the remaining provisions, which shall remain in full force and\r\n              effect.\r\n            </p>\r\n            <p>US Users</p>\r\n            <p>\r\n              Any such invalid or unenforceable provision will be interpreted,\r\n              construed and reformed to the extent reasonably required to render\r\n              it valid, enforceable and consistent with its original intent.\r\n              These Terms constitute the entire Agreement between Users and the\r\n              Owner with respect to the subject matter hereof, and supersede all\r\n              other communications, including but not limited to all prior\r\n              agreements, between the parties with respect to such subject\r\n              matter. These Terms will be enforced to the fullest extent\r\n              permitted by law.\r\n            </p>\r\n            <p>EU Users</p>\r\n            <p>\r\n              Should any provision of these Terms be or be deemed void, invalid\r\n              or unenforceable, the parties shall do their best to find, in an\r\n              amicable way, an agreement on valid and enforceable provisions\r\n              thereby substituting the void, invalid or unenforceable parts. In\r\n              case of failure to do so, the void, invalid or unenforceable\r\n              provisions shall be replaced by the applicable statutory\r\n              provisions, if so permitted or stated under the applicable law.\r\n              Without prejudice to the above, the nullity, invalidity or the\r\n              impossibility to enforce a particular provision of these Terms\r\n              shall not nullify the entire Agreement, unless the severed\r\n              provisions are essential to the Agreement, or of such importance\r\n              that the parties would not have entered into the contract if they\r\n              had known that the provision would not be valid, or in cases where\r\n              the remaining provisions would translate into an unacceptable\r\n              hardship on any of the parties.\r\n            </p>\r\n            <p>Governing law</p>\r\n            <p>\r\n              These Terms are governed by the law of the place where the Owner\r\n              is based, as disclosed in the relevant section of this document,\r\n              without regard to conflict of laws principles. Exception for\r\n              European Consumers However, regardless of the above, if the User\r\n              qualifies as a European Consumer and has their habitual residence\r\n              in a country where the law provides for a higher consumer\r\n              protection standard, such higher standards shall prevail.\r\n            </p>\r\n            <p>Venue of jurisdiction</p>\r\n            <p>\r\n              The exclusive competence to decide on any controversy resulting\r\n              from or connected to these Terms lies with the courts of the place\r\n              where the Owner is based, as displayed in the relevant section of\r\n              this document. Exception for European Consumers The above does not\r\n              apply to any Users that qualify as European Consumers, nor to\r\n              Consumers based in Switzerland, Norway or Iceland.\r\n            </p>\r\n\r\n            <p>Dispute resolution</p>\r\n            <p>Amicable dispute resolution</p>\r\n            <p>\r\n              Users may bring any disputes to the Owner who will try to resolve\r\n              them amicably. While Users' right to take legal action shall\r\n              always remain unaffected, in the event of any controversy\r\n              regarding the use of Bookinglane Manager or the Service, Users are\r\n              kindly asked to contact the Owner at the contact details provided\r\n              in this document. The User may submit the complaint including a\r\n              brief description and if applicable, the details of the related\r\n              order, purchase, or account, to the Owner’s email address\r\n              specified in this document. The Owner will process the complaint\r\n              without undue delay and within 21 days of receiving it.\r\n            </p>\r\n            <p>Definitions and legal references</p>\r\n            <p>\r\n              Bookinglane Manager (or this Application) The property that\r\n              enables the provision of the Service.\r\n            </p>\r\n\r\n            <p>Agreement</p>\r\n            <p>\r\n              Any legally binding or contractual relationship between the Owner\r\n              and the User, governed by these Terms.\r\n            </p>\r\n            <p>Business User</p>\r\n            <p>Any User that does not qualify as a Consumer.</p>\r\n            <p>Buyer</p>\r\n            <p>\r\n              Indicates any User who buys goods or services from Sellers through\r\n              Bookinglane Manager, regardless of whether or not the actual\r\n              transaction takes place through Bookinglane Manager.\r\n            </p>\r\n            <p>European (or Europe)</p>\r\n            <p>\r\n              Applies where a User is physically present or has their registered\r\n              offices within the EU, regardless of nationality.\r\n            </p>\r\n            <p>Example withdrawal form</p>\r\n            <p>\r\n              Addressed to: Bookinglane LLC 1905 Concord Blvd, Concord, CA,\r\n              94520, USA info@bookinglane.com\r\n            </p>\r\n            <p>\r\n              I/We hereby give notice that I/we withdraw from my/our contract of\r\n              sale of the following goods/for the provision of the following\r\n              service: _____________________________________________ (insert a\r\n              description of the goods/services that are subject to the\r\n              respective withdrawal) Ordered on:\r\n              _____________________________________________ (insert the date)\r\n              Received on: _____________________________________________ (insert\r\n              the date) Name of\r\n              consumer(s):_____________________________________________ Address\r\n              of consumer(s):_____________________________________________ Date:\r\n              _____________________________________________ (sign if this form\r\n              is notified on paper)\r\n            </p>\r\n            <p>Owner (or We)</p>\r\n            <p>\r\n              Indicates the natural person(s) or legal entity that provides\r\n              Bookinglane Manager and/or the Service to Users.\r\n            </p>\r\n            <p>Product</p>\r\n            <p>\r\n              A good or service available for purchase through Bookinglane\r\n              Manager, such as e.g. physical goods, digital files, software,\r\n              booking services etc. The sale of Products may be part of the\r\n              Service.\r\n            </p>\r\n            <p>Seller</p>\r\n            <p>\r\n              Indicates any User who sells goods or services to Buyers through\r\n              Bookinglane Manager, regardless of whether or not the actual\r\n              transaction takes place through Bookinglane Manager.\r\n            </p>\r\n            <p>Service</p>\r\n            <p>\r\n              The service provided by Bookinglane Manager as described in these\r\n              Terms and on Bookinglane Manager.\r\n            </p>\r\n            <p>Terms</p>\r\n            <p>\r\n              All provisions applicable to the use of Bookinglane Manager and/or\r\n              the Service as described in this document, including any other\r\n              related documents or agreements, and as updated from time to time.\r\n            </p>\r\n            <p>User (or You)</p>\r\n            <p>\r\n              Indicates any natural person or legal entity using Bookinglane\r\n              Manager.\r\n            </p>\r\n            <p>Consumer</p>\r\n            <p>\r\n              Any User qualifying as a natural person who accesses goods or\r\n              services for personal use, or more generally, acts for purposes\r\n              outside their trade, business, craft or profession. Latest update:\r\n              April 19, 2021 iubenda hosts this content and only collects the\r\n              Personal Data strictly necessary for it to be provided.\r\n            </p>\r\n          </>\r\n        </div>\r\n        {/* </DialogContentText>\r\n        </DialogContent> */}\r\n        {/* <DialogActions>\r\n          <Button onClick={handleClose} color='primary'>\r\n            OK\r\n          </Button>\r\n        </DialogActions> */}\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\TermsOfUse\\PrivacyPolicy\\PrivacyPolicy.js",["525","526","527","528","529","530","531","532","533","534","535","536","537"],"import React, { useContext } from \"react\"\r\nimport ThemeContext from \"../../../context\"\r\nimport { Modal } from \"../../Helpers/Modal/Modal\"\r\nimport styles from \"./PrivacyPolicy.module.scss\"\r\n\r\nexport default function PrivacyPolicy() {\r\n  const [open, setOpen] = React.useState(false)\r\n  const [privacyPolicy, setPrivacyPolicy] = React.useState(\"\")\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setShow(false)\r\n  }\r\n\r\n  const [show, setShow] = React.useState(false)\r\n\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiuses,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <>\r\n      <span\r\n        onClick={(event) => setShow(true)}\r\n        className={styles.privacyPolicyOpenButton}\r\n        style={{ color: fontColor }}\r\n      >\r\n        / Privacy Policy\r\n      </span>\r\n      <Modal onClose={() => setShow(false)} show={show}>\r\n        {/* <DialogTitle\r\n          id='scroll-dialog-title'\r\n          style={{ height: '55px', backgroundColor: 'black' }}\r\n        > */}\r\n        <div\r\n          // style={{ width: \"600px\", height: \"100%\" }}\r\n          className={styles.privacyPolicyContainer}\r\n        >\r\n          <span>Privacy Policy</span>\r\n          {/* </DialogTitle> */}\r\n          {/* <DialogContent style={{ backgroundColor: 'black' }}>\r\n          <DialogContentText\r\n            id='scroll-dialog-description'\r\n            ref={descriptionElementRef}\r\n            tabIndex={-1}\r\n            style={{ backgroundColor: 'black' }}\r\n          > */}\r\n          <p>Privacy Policy of Bookinglane</p>\r\n          <p>Bookinglane collects some Personal Data from its Users.</p>\r\n          <p>\r\n            Personal Data collected for the following purposes and using the\r\n            following services:\r\n          </p>\r\n          <p>Analytics</p>\r\n          <p>\r\n            <span style={{ marginRight: \"7px\" }}>&#9679;</span>Google Analytics\r\n            <br />\r\n            <span style={{ marginRight: \"7px\" }}>&#9679;</span>Personal Data:\r\n            Tracker; Usage Data\r\n          </p>\r\n          <p>Beta Testing</p>\r\n          <p>\r\n            <span style={{ marginRight: \"7px\" }}>&#9679;</span>App Center\r\n            <br />\r\n            <span style={{ marginRight: \"7px\" }}>&#9679;</span>Personal Data:\r\n            Data communicated while using the service; email address; various\r\n            types of Data as specified in the privacy policy of the service\r\n            <br />\r\n          </p>\r\n          <p>Displaying content from external platforms</p>\r\n          <p>\r\n            <span style={{ marginRight: \"7px\" }}>&#9679;</span>Google Maps\r\n            widget and Instagram widget\r\n            <br />\r\n            <span style={{ marginRight: \"7px\" }}>&#9679;</span>Personal Data:\r\n            Tracker; Usage Data\r\n          </p>\r\n          <p>Handling payments</p>\r\n          <p>\r\n            <span style={{ marginRight: \"7px\" }}>&#9679;</span>Stripe\r\n            <br />\r\n            Personal Data: billing address; email address; first name; last\r\n            name; purchase history; various types of Data as specified in the\r\n            privacy policy of the service Apple Pay Personal Data: billing\r\n            address; email address; first name; last name; payment info; phone\r\n            number; purchase history; various types of Data as specified in the\r\n            privacy policy of the service\r\n          </p>\r\n          <p>Payments processed via the Google Play Store</p>\r\n          <p>\r\n            Personal Data: billing address; email address; first name; last\r\n            name; payment info; phone number; purchase history\r\n          </p>\r\n          <p>Hosting and backend infrastructure</p>\r\n          <p>\r\n            Amazon Web Services (AWS) Personal Data: various types of Data as\r\n            specified in the privacy policy of the service\r\n          </p>\r\n          <p>Interaction with external social networks and platforms</p>\r\n          <p>\r\n            <span style={{ marginRight: \"7px\" }}>&#9679;</span>LinkedIn button\r\n            and social widgets and Twitter Tweet button and social widgets\r\n            Personal Data: Tracker; Usage Data <br />\r\n            <span style={{ marginRight: \"7px\" }}>&#9679;</span>Buffer button and\r\n            social widgets Personal Data:Usage Data\r\n          </p>\r\n          <p>Interaction with live chat platforms</p>\r\n          <p>\r\n            <span style={{ marginRight: \"7px\" }}>&#9679;</span>ClickDesk Widget{\" \"}\r\n            <br />\r\n            Personal Data: Data communicated while using the service; Tracker;\r\n            Usage Data\r\n          </p>\r\n          <p>Platform services and hosting</p>\r\n          <p>\r\n            <span style={{ marginRight: \"7px\" }}>&#9679;</span>Apple App Store\r\n            and Google Play Store <br />\r\n            Personal Data: Usage Data\r\n          </p>\r\n          <p>Contact information</p>\r\n          <p>\r\n            <span style={{ marginRight: \"7px\" }}>&#9679;</span>Owner and Data\r\n            Controller <br />\r\n            Bookinglane LLC 1905 Concord Blvd, Concord, 94520, CA, USA\r\n          </p>\r\n          <p>Owner contact email: info@bookinglane.com</p>\r\n          {/* </DialogContentText>\r\n        </DialogContent> */}\r\n          {/* <DialogActions> */}\r\n          {/* <button\r\n            onClick={handleClose}\r\n            style={{ position: 'fixed', bottom: '0' }}\r\n          >\r\n            OK\r\n          </button> */}\r\n          {/* </DialogActions> */}\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\GoogleMap\\mapStyles.js",["538"],"// console.log(window)\r\n\r\nexport default [...window.mapsStyles]\r\n","C:\\Emir's folder\\Refactored-widget\\First-refactored-widget-withOUT-webpack-latest\\src\\Components\\GoogleMap\\GoogleMapContainer\\GoogleMapStyles.js",[],{"ruleId":"539","replacedBy":"540"},{"ruleId":"541","replacedBy":"542"},{"ruleId":"543","severity":1,"message":"544","line":9,"column":40,"nodeType":"545","messageId":"546","endLine":9,"endColumn":48},{"ruleId":"543","severity":1,"message":"547","line":21,"column":3,"nodeType":"545","messageId":"546","endLine":21,"endColumn":15},{"ruleId":"543","severity":1,"message":"548","line":26,"column":45,"nodeType":"545","messageId":"546","endLine":26,"endColumn":54},{"ruleId":"543","severity":1,"message":"549","line":27,"column":10,"nodeType":"545","messageId":"546","endLine":27,"endColumn":16},{"ruleId":"543","severity":1,"message":"550","line":67,"column":5,"nodeType":"545","messageId":"546","endLine":67,"endColumn":38},{"ruleId":"543","severity":1,"message":"551","line":68,"column":5,"nodeType":"545","messageId":"546","endLine":68,"endColumn":41},{"ruleId":"552","severity":1,"message":"553","line":83,"column":3,"nodeType":"554","messageId":"555","endLine":85,"endColumn":4},{"ruleId":"552","severity":1,"message":"553","line":106,"column":5,"nodeType":"554","messageId":"555","endLine":108,"endColumn":6},{"ruleId":"552","severity":1,"message":"553","line":128,"column":5,"nodeType":"554","messageId":"555","endLine":130,"endColumn":6},{"ruleId":"543","severity":1,"message":"556","line":186,"column":9,"nodeType":"545","messageId":"546","endLine":186,"endColumn":17},{"ruleId":"557","severity":1,"message":"558","line":191,"column":6,"nodeType":"559","endLine":191,"endColumn":8,"suggestions":"560"},{"ruleId":"543","severity":1,"message":"561","line":193,"column":9,"nodeType":"545","messageId":"546","endLine":193,"endColumn":19},{"ruleId":"543","severity":1,"message":"562","line":242,"column":5,"nodeType":"545","messageId":"546","endLine":242,"endColumn":14},{"ruleId":"543","severity":1,"message":"563","line":243,"column":5,"nodeType":"545","messageId":"546","endLine":243,"endColumn":35},{"ruleId":"543","severity":1,"message":"564","line":245,"column":5,"nodeType":"545","messageId":"546","endLine":245,"endColumn":32},{"ruleId":"543","severity":1,"message":"565","line":247,"column":5,"nodeType":"545","messageId":"546","endLine":247,"endColumn":18},{"ruleId":"543","severity":1,"message":"566","line":248,"column":5,"nodeType":"545","messageId":"546","endLine":248,"endColumn":15},{"ruleId":"543","severity":1,"message":"567","line":249,"column":5,"nodeType":"545","messageId":"546","endLine":249,"endColumn":15},{"ruleId":"543","severity":1,"message":"568","line":250,"column":5,"nodeType":"545","messageId":"546","endLine":250,"endColumn":28},{"ruleId":"543","severity":1,"message":"569","line":251,"column":5,"nodeType":"545","messageId":"546","endLine":251,"endColumn":21},{"ruleId":"543","severity":1,"message":"570","line":252,"column":5,"nodeType":"545","messageId":"546","endLine":252,"endColumn":20},{"ruleId":"543","severity":1,"message":"571","line":253,"column":5,"nodeType":"545","messageId":"546","endLine":253,"endColumn":21},{"ruleId":"572","severity":1,"message":"573","line":288,"column":33,"nodeType":"574","messageId":"575","endLine":288,"endColumn":35},{"ruleId":"576","severity":1,"message":"577","line":307,"column":21,"nodeType":"578","messageId":"575","endLine":307,"endColumn":31},{"ruleId":"572","severity":1,"message":"573","line":379,"column":33,"nodeType":"574","messageId":"575","endLine":379,"endColumn":35},{"ruleId":"576","severity":1,"message":"577","line":415,"column":23,"nodeType":"578","messageId":"575","endLine":415,"endColumn":33},{"ruleId":"576","severity":1,"message":"577","line":532,"column":25,"nodeType":"578","messageId":"575","endLine":532,"endColumn":35},{"ruleId":"543","severity":1,"message":"579","line":6,"column":7,"nodeType":"545","messageId":"546","endLine":6,"endColumn":30},{"ruleId":"543","severity":1,"message":"544","line":2,"column":10,"nodeType":"545","messageId":"546","endLine":2,"endColumn":18},{"ruleId":"543","severity":1,"message":"580","line":3,"column":8,"nodeType":"545","messageId":"546","endLine":3,"endColumn":17},{"ruleId":"576","severity":1,"message":"581","line":330,"column":7,"nodeType":"578","messageId":"575","endLine":330,"endColumn":16},{"ruleId":"572","severity":1,"message":"573","line":68,"column":21,"nodeType":"574","messageId":"575","endLine":68,"endColumn":23},{"ruleId":"572","severity":1,"message":"573","line":74,"column":21,"nodeType":"574","messageId":"575","endLine":74,"endColumn":23},{"ruleId":"543","severity":1,"message":"582","line":1,"column":10,"nodeType":"545","messageId":"546","endLine":1,"endColumn":17},{"ruleId":"543","severity":1,"message":"582","line":1,"column":10,"nodeType":"545","messageId":"546","endLine":1,"endColumn":17},{"ruleId":"543","severity":1,"message":"582","line":1,"column":10,"nodeType":"545","messageId":"546","endLine":1,"endColumn":17},{"ruleId":"543","severity":1,"message":"583","line":49,"column":9,"nodeType":"545","messageId":"546","endLine":49,"endColumn":21},{"ruleId":"543","severity":1,"message":"584","line":51,"column":9,"nodeType":"545","messageId":"546","endLine":51,"endColumn":26},{"ruleId":"543","severity":1,"message":"563","line":65,"column":5,"nodeType":"545","messageId":"546","endLine":65,"endColumn":35},{"ruleId":"543","severity":1,"message":"564","line":67,"column":5,"nodeType":"545","messageId":"546","endLine":67,"endColumn":32},{"ruleId":"543","severity":1,"message":"585","line":68,"column":5,"nodeType":"545","messageId":"546","endLine":68,"endColumn":27},{"ruleId":"543","severity":1,"message":"565","line":69,"column":5,"nodeType":"545","messageId":"546","endLine":69,"endColumn":18},{"ruleId":"543","severity":1,"message":"566","line":70,"column":5,"nodeType":"545","messageId":"546","endLine":70,"endColumn":15},{"ruleId":"543","severity":1,"message":"567","line":71,"column":5,"nodeType":"545","messageId":"546","endLine":71,"endColumn":15},{"ruleId":"543","severity":1,"message":"568","line":72,"column":5,"nodeType":"545","messageId":"546","endLine":72,"endColumn":28},{"ruleId":"543","severity":1,"message":"569","line":73,"column":5,"nodeType":"545","messageId":"546","endLine":73,"endColumn":21},{"ruleId":"543","severity":1,"message":"570","line":74,"column":5,"nodeType":"545","messageId":"546","endLine":74,"endColumn":20},{"ruleId":"543","severity":1,"message":"571","line":75,"column":5,"nodeType":"545","messageId":"546","endLine":75,"endColumn":21},{"ruleId":"543","severity":1,"message":"586","line":76,"column":5,"nodeType":"545","messageId":"546","endLine":76,"endColumn":40},{"ruleId":"543","severity":1,"message":"587","line":77,"column":5,"nodeType":"545","messageId":"546","endLine":77,"endColumn":31},{"ruleId":"543","severity":1,"message":"588","line":141,"column":7,"nodeType":"545","messageId":"546","endLine":141,"endColumn":25},{"ruleId":"543","severity":1,"message":"562","line":18,"column":5,"nodeType":"545","messageId":"546","endLine":18,"endColumn":14},{"ruleId":"543","severity":1,"message":"589","line":19,"column":5,"nodeType":"545","messageId":"546","endLine":19,"endColumn":19},{"ruleId":"543","severity":1,"message":"565","line":20,"column":5,"nodeType":"545","messageId":"546","endLine":20,"endColumn":18},{"ruleId":"543","severity":1,"message":"566","line":21,"column":5,"nodeType":"545","messageId":"546","endLine":21,"endColumn":15},{"ruleId":"543","severity":1,"message":"567","line":22,"column":5,"nodeType":"545","messageId":"546","endLine":22,"endColumn":15},{"ruleId":"543","severity":1,"message":"568","line":23,"column":5,"nodeType":"545","messageId":"546","endLine":23,"endColumn":28},{"ruleId":"543","severity":1,"message":"569","line":24,"column":5,"nodeType":"545","messageId":"546","endLine":24,"endColumn":21},{"ruleId":"543","severity":1,"message":"570","line":25,"column":5,"nodeType":"545","messageId":"546","endLine":25,"endColumn":20},{"ruleId":"543","severity":1,"message":"556","line":3,"column":7,"nodeType":"545","messageId":"546","endLine":3,"endColumn":15},{"ruleId":"543","severity":1,"message":"556","line":65,"column":11,"nodeType":"545","messageId":"546","endLine":65,"endColumn":19},{"ruleId":"543","severity":1,"message":"556","line":112,"column":11,"nodeType":"545","messageId":"546","endLine":112,"endColumn":19},{"ruleId":"557","severity":1,"message":"590","line":41,"column":6,"nodeType":"559","endLine":41,"endColumn":8,"suggestions":"591"},{"ruleId":"543","severity":1,"message":"592","line":42,"column":9,"nodeType":"545","messageId":"546","endLine":42,"endColumn":18},{"ruleId":"543","severity":1,"message":"593","line":45,"column":5,"nodeType":"545","messageId":"546","endLine":45,"endColumn":36},{"ruleId":"543","severity":1,"message":"563","line":47,"column":5,"nodeType":"545","messageId":"546","endLine":47,"endColumn":35},{"ruleId":"543","severity":1,"message":"594","line":48,"column":5,"nodeType":"545","messageId":"546","endLine":48,"endColumn":30},{"ruleId":"543","severity":1,"message":"564","line":49,"column":5,"nodeType":"545","messageId":"546","endLine":49,"endColumn":32},{"ruleId":"543","severity":1,"message":"585","line":50,"column":5,"nodeType":"545","messageId":"546","endLine":50,"endColumn":27},{"ruleId":"543","severity":1,"message":"565","line":51,"column":5,"nodeType":"545","messageId":"546","endLine":51,"endColumn":18},{"ruleId":"543","severity":1,"message":"566","line":52,"column":5,"nodeType":"545","messageId":"546","endLine":52,"endColumn":15},{"ruleId":"543","severity":1,"message":"567","line":53,"column":5,"nodeType":"545","messageId":"546","endLine":53,"endColumn":15},{"ruleId":"543","severity":1,"message":"569","line":54,"column":5,"nodeType":"545","messageId":"546","endLine":54,"endColumn":21},{"ruleId":"543","severity":1,"message":"570","line":55,"column":5,"nodeType":"545","messageId":"546","endLine":55,"endColumn":20},{"ruleId":"543","severity":1,"message":"571","line":56,"column":5,"nodeType":"545","messageId":"546","endLine":56,"endColumn":21},{"ruleId":"543","severity":1,"message":"586","line":57,"column":5,"nodeType":"545","messageId":"546","endLine":57,"endColumn":40},{"ruleId":"543","severity":1,"message":"587","line":58,"column":5,"nodeType":"545","messageId":"546","endLine":58,"endColumn":31},{"ruleId":"543","severity":1,"message":"595","line":1,"column":29,"nodeType":"545","messageId":"546","endLine":1,"endColumn":38},{"ruleId":"543","severity":1,"message":"596","line":5,"column":8,"nodeType":"545","messageId":"546","endLine":5,"endColumn":16},{"ruleId":"543","severity":1,"message":"548","line":11,"column":10,"nodeType":"545","messageId":"546","endLine":11,"endColumn":19},{"ruleId":"543","severity":1,"message":"597","line":31,"column":8,"nodeType":"545","messageId":"546","endLine":31,"endColumn":14},{"ruleId":"543","severity":1,"message":"598","line":32,"column":13,"nodeType":"545","messageId":"546","endLine":32,"endColumn":16},{"ruleId":"543","severity":1,"message":"599","line":86,"column":10,"nodeType":"545","messageId":"546","endLine":86,"endColumn":23},{"ruleId":"543","severity":1,"message":"600","line":93,"column":10,"nodeType":"545","messageId":"546","endLine":93,"endColumn":21},{"ruleId":"543","severity":1,"message":"601","line":107,"column":37,"nodeType":"545","messageId":"546","endLine":107,"endColumn":65},{"ruleId":"543","severity":1,"message":"602","line":109,"column":37,"nodeType":"545","messageId":"546","endLine":109,"endColumn":65},{"ruleId":"543","severity":1,"message":"603","line":115,"column":10,"nodeType":"545","messageId":"546","endLine":115,"endColumn":29},{"ruleId":"543","severity":1,"message":"604","line":124,"column":9,"nodeType":"545","messageId":"546","endLine":124,"endColumn":22},{"ruleId":"543","severity":1,"message":"605","line":126,"column":10,"nodeType":"545","messageId":"546","endLine":126,"endColumn":18},{"ruleId":"543","severity":1,"message":"606","line":126,"column":20,"nodeType":"545","messageId":"546","endLine":126,"endColumn":31},{"ruleId":"572","severity":1,"message":"573","line":138,"column":27,"nodeType":"574","messageId":"575","endLine":138,"endColumn":29},{"ruleId":"543","severity":1,"message":"607","line":149,"column":18,"nodeType":"545","messageId":"546","endLine":149,"endColumn":24},{"ruleId":"608","severity":1,"message":"609","line":176,"column":34,"nodeType":"574","messageId":"610","endLine":176,"endColumn":35},{"ruleId":"543","severity":1,"message":"593","line":185,"column":5,"nodeType":"545","messageId":"546","endLine":185,"endColumn":36},{"ruleId":"543","severity":1,"message":"589","line":187,"column":5,"nodeType":"545","messageId":"546","endLine":187,"endColumn":19},{"ruleId":"543","severity":1,"message":"565","line":188,"column":5,"nodeType":"545","messageId":"546","endLine":188,"endColumn":18},{"ruleId":"543","severity":1,"message":"566","line":189,"column":5,"nodeType":"545","messageId":"546","endLine":189,"endColumn":15},{"ruleId":"543","severity":1,"message":"567","line":190,"column":5,"nodeType":"545","messageId":"546","endLine":190,"endColumn":15},{"ruleId":"543","severity":1,"message":"568","line":191,"column":5,"nodeType":"545","messageId":"546","endLine":191,"endColumn":28},{"ruleId":"543","severity":1,"message":"611","line":192,"column":5,"nodeType":"545","messageId":"546","endLine":192,"endColumn":32},{"ruleId":"543","severity":1,"message":"569","line":193,"column":5,"nodeType":"545","messageId":"546","endLine":193,"endColumn":21},{"ruleId":"543","severity":1,"message":"570","line":194,"column":5,"nodeType":"545","messageId":"546","endLine":194,"endColumn":20},{"ruleId":"543","severity":1,"message":"594","line":197,"column":5,"nodeType":"545","messageId":"546","endLine":197,"endColumn":30},{"ruleId":"543","severity":1,"message":"585","line":199,"column":5,"nodeType":"545","messageId":"546","endLine":199,"endColumn":27},{"ruleId":"543","severity":1,"message":"612","line":201,"column":26,"nodeType":"545","messageId":"546","endLine":201,"endColumn":43},{"ruleId":"543","severity":1,"message":"613","line":229,"column":10,"nodeType":"545","messageId":"546","endLine":229,"endColumn":19},{"ruleId":"543","severity":1,"message":"614","line":243,"column":9,"nodeType":"545","messageId":"546","endLine":243,"endColumn":19},{"ruleId":"572","severity":1,"message":"573","line":337,"column":30,"nodeType":"574","messageId":"575","endLine":337,"endColumn":32},{"ruleId":"572","severity":1,"message":"573","line":338,"column":35,"nodeType":"574","messageId":"575","endLine":338,"endColumn":37},{"ruleId":"572","severity":1,"message":"573","line":339,"column":30,"nodeType":"574","messageId":"575","endLine":339,"endColumn":32},{"ruleId":"572","severity":1,"message":"573","line":340,"column":35,"nodeType":"574","messageId":"575","endLine":340,"endColumn":37},{"ruleId":"572","severity":1,"message":"573","line":368,"column":52,"nodeType":"574","messageId":"575","endLine":368,"endColumn":54},{"ruleId":"543","severity":1,"message":"615","line":404,"column":15,"nodeType":"545","messageId":"546","endLine":404,"endColumn":22},{"ruleId":"608","severity":1,"message":"609","line":409,"column":44,"nodeType":"574","messageId":"610","endLine":409,"endColumn":45},{"ruleId":"557","severity":1,"message":"616","line":450,"column":3,"nodeType":"617","endLine":450,"endColumn":18,"suggestions":"618"},{"ruleId":"543","severity":1,"message":"619","line":51,"column":5,"nodeType":"545","messageId":"546","endLine":51,"endColumn":11},{"ruleId":"543","severity":1,"message":"620","line":3,"column":10,"nodeType":"545","messageId":"546","endLine":3,"endColumn":22},{"ruleId":"543","severity":1,"message":"614","line":111,"column":9,"nodeType":"545","messageId":"546","endLine":111,"endColumn":19},{"ruleId":"621","severity":1,"message":"622","line":129,"column":18,"nodeType":"623","messageId":"624","endLine":129,"endColumn":19},{"ruleId":"572","severity":1,"message":"573","line":181,"column":27,"nodeType":"574","messageId":"575","endLine":181,"endColumn":29},{"ruleId":"572","severity":1,"message":"573","line":189,"column":27,"nodeType":"574","messageId":"575","endLine":189,"endColumn":29},{"ruleId":"543","severity":1,"message":"544","line":1,"column":17,"nodeType":"545","messageId":"546","endLine":1,"endColumn":25},{"ruleId":"543","severity":1,"message":"595","line":1,"column":27,"nodeType":"545","messageId":"546","endLine":1,"endColumn":36},{"ruleId":"543","severity":1,"message":"625","line":2,"column":24,"nodeType":"545","messageId":"546","endLine":2,"endColumn":31},{"ruleId":"543","severity":1,"message":"614","line":62,"column":9,"nodeType":"545","messageId":"546","endLine":62,"endColumn":19},{"ruleId":"543","severity":1,"message":"589","line":70,"column":5,"nodeType":"545","messageId":"546","endLine":70,"endColumn":19},{"ruleId":"543","severity":1,"message":"565","line":71,"column":5,"nodeType":"545","messageId":"546","endLine":71,"endColumn":18},{"ruleId":"543","severity":1,"message":"566","line":72,"column":5,"nodeType":"545","messageId":"546","endLine":72,"endColumn":15},{"ruleId":"543","severity":1,"message":"567","line":73,"column":5,"nodeType":"545","messageId":"546","endLine":73,"endColumn":15},{"ruleId":"543","severity":1,"message":"569","line":77,"column":5,"nodeType":"545","messageId":"546","endLine":77,"endColumn":21},{"ruleId":"543","severity":1,"message":"594","line":80,"column":5,"nodeType":"545","messageId":"546","endLine":80,"endColumn":30},{"ruleId":"543","severity":1,"message":"585","line":82,"column":5,"nodeType":"545","messageId":"546","endLine":82,"endColumn":27},{"ruleId":"572","severity":1,"message":"573","line":593,"column":36,"nodeType":"574","messageId":"575","endLine":593,"endColumn":38},{"ruleId":"543","severity":1,"message":"596","line":4,"column":8,"nodeType":"545","messageId":"546","endLine":4,"endColumn":16},{"ruleId":"543","severity":1,"message":"626","line":4,"column":20,"nodeType":"545","messageId":"546","endLine":4,"endColumn":26},{"ruleId":"543","severity":1,"message":"589","line":115,"column":5,"nodeType":"545","messageId":"546","endLine":115,"endColumn":19},{"ruleId":"543","severity":1,"message":"565","line":116,"column":5,"nodeType":"545","messageId":"546","endLine":116,"endColumn":18},{"ruleId":"543","severity":1,"message":"566","line":117,"column":5,"nodeType":"545","messageId":"546","endLine":117,"endColumn":15},{"ruleId":"543","severity":1,"message":"567","line":118,"column":5,"nodeType":"545","messageId":"546","endLine":118,"endColumn":15},{"ruleId":"543","severity":1,"message":"569","line":122,"column":5,"nodeType":"545","messageId":"546","endLine":122,"endColumn":21},{"ruleId":"543","severity":1,"message":"570","line":123,"column":5,"nodeType":"545","messageId":"546","endLine":123,"endColumn":20},{"ruleId":"543","severity":1,"message":"594","line":125,"column":5,"nodeType":"545","messageId":"546","endLine":125,"endColumn":30},{"ruleId":"543","severity":1,"message":"585","line":127,"column":5,"nodeType":"545","messageId":"546","endLine":127,"endColumn":27},{"ruleId":"572","severity":1,"message":"573","line":734,"column":41,"nodeType":"574","messageId":"575","endLine":734,"endColumn":43},{"ruleId":"572","severity":1,"message":"573","line":736,"column":47,"nodeType":"574","messageId":"575","endLine":736,"endColumn":49},{"ruleId":"572","severity":1,"message":"573","line":784,"column":40,"nodeType":"574","messageId":"575","endLine":784,"endColumn":42},{"ruleId":"572","severity":1,"message":"573","line":786,"column":47,"nodeType":"574","messageId":"575","endLine":786,"endColumn":49},{"ruleId":"543","severity":1,"message":"627","line":1,"column":10,"nodeType":"545","messageId":"546","endLine":1,"endColumn":18},{"ruleId":"543","severity":1,"message":"628","line":1,"column":20,"nodeType":"545","messageId":"546","endLine":1,"endColumn":29},{"ruleId":"543","severity":1,"message":"629","line":3,"column":10,"nodeType":"545","messageId":"546","endLine":3,"endColumn":20},{"ruleId":"543","severity":1,"message":"625","line":3,"column":36,"nodeType":"545","messageId":"546","endLine":3,"endColumn":43},{"ruleId":"543","severity":1,"message":"626","line":7,"column":20,"nodeType":"545","messageId":"546","endLine":7,"endColumn":26},{"ruleId":"543","severity":1,"message":"630","line":24,"column":3,"nodeType":"545","messageId":"546","endLine":24,"endColumn":24},{"ruleId":"552","severity":1,"message":"631","line":33,"column":1,"nodeType":"554","messageId":"632","endLine":35,"endColumn":2},{"ruleId":"543","severity":1,"message":"633","line":110,"column":9,"nodeType":"545","messageId":"546","endLine":110,"endColumn":17},{"ruleId":"543","severity":1,"message":"589","line":115,"column":5,"nodeType":"545","messageId":"546","endLine":115,"endColumn":19},{"ruleId":"543","severity":1,"message":"567","line":119,"column":5,"nodeType":"545","messageId":"546","endLine":119,"endColumn":15},{"ruleId":"543","severity":1,"message":"594","line":127,"column":5,"nodeType":"545","messageId":"546","endLine":127,"endColumn":30},{"ruleId":"543","severity":1,"message":"585","line":129,"column":5,"nodeType":"545","messageId":"546","endLine":129,"endColumn":27},{"ruleId":"543","severity":1,"message":"634","line":134,"column":10,"nodeType":"545","messageId":"546","endLine":134,"endColumn":14},{"ruleId":"543","severity":1,"message":"635","line":134,"column":16,"nodeType":"545","messageId":"546","endLine":134,"endColumn":23},{"ruleId":"543","severity":1,"message":"604","line":136,"column":9,"nodeType":"545","messageId":"546","endLine":136,"endColumn":22},{"ruleId":"572","severity":1,"message":"573","line":181,"column":33,"nodeType":"574","messageId":"575","endLine":181,"endColumn":35},{"ruleId":"557","severity":1,"message":"636","line":218,"column":6,"nodeType":"559","endLine":218,"endColumn":8,"suggestions":"637"},{"ruleId":"572","severity":1,"message":"573","line":423,"column":36,"nodeType":"574","messageId":"575","endLine":423,"endColumn":38},{"ruleId":"572","severity":1,"message":"573","line":427,"column":36,"nodeType":"574","messageId":"575","endLine":427,"endColumn":38},{"ruleId":"572","severity":1,"message":"573","line":430,"column":43,"nodeType":"574","messageId":"575","endLine":430,"endColumn":45},{"ruleId":"572","severity":1,"message":"573","line":444,"column":36,"nodeType":"574","messageId":"575","endLine":444,"endColumn":38},{"ruleId":"572","severity":1,"message":"573","line":448,"column":36,"nodeType":"574","messageId":"575","endLine":448,"endColumn":38},{"ruleId":"572","severity":1,"message":"573","line":451,"column":43,"nodeType":"574","messageId":"575","endLine":451,"endColumn":45},{"ruleId":"543","severity":1,"message":"596","line":2,"column":8,"nodeType":"545","messageId":"546","endLine":2,"endColumn":16},{"ruleId":"543","severity":1,"message":"549","line":4,"column":10,"nodeType":"545","messageId":"546","endLine":4,"endColumn":16},{"ruleId":"543","severity":1,"message":"638","line":62,"column":9,"nodeType":"545","messageId":"546","endLine":62,"endColumn":15},{"ruleId":"543","severity":1,"message":"639","line":64,"column":9,"nodeType":"545","messageId":"546","endLine":64,"endColumn":21},{"ruleId":"543","severity":1,"message":"640","line":65,"column":9,"nodeType":"545","messageId":"546","endLine":65,"endColumn":12},{"ruleId":"557","severity":1,"message":"641","line":117,"column":3,"nodeType":"642","endLine":129,"endColumn":4},{"ruleId":"543","severity":1,"message":"589","line":136,"column":5,"nodeType":"545","messageId":"546","endLine":136,"endColumn":19},{"ruleId":"543","severity":1,"message":"565","line":137,"column":5,"nodeType":"545","messageId":"546","endLine":137,"endColumn":18},{"ruleId":"543","severity":1,"message":"566","line":138,"column":5,"nodeType":"545","messageId":"546","endLine":138,"endColumn":15},{"ruleId":"543","severity":1,"message":"567","line":139,"column":5,"nodeType":"545","messageId":"546","endLine":139,"endColumn":15},{"ruleId":"543","severity":1,"message":"569","line":143,"column":5,"nodeType":"545","messageId":"546","endLine":143,"endColumn":21},{"ruleId":"543","severity":1,"message":"570","line":144,"column":5,"nodeType":"545","messageId":"546","endLine":144,"endColumn":20},{"ruleId":"543","severity":1,"message":"594","line":146,"column":5,"nodeType":"545","messageId":"546","endLine":146,"endColumn":30},{"ruleId":"543","severity":1,"message":"585","line":148,"column":5,"nodeType":"545","messageId":"546","endLine":148,"endColumn":27},{"ruleId":"572","severity":1,"message":"573","line":216,"column":49,"nodeType":"574","messageId":"575","endLine":216,"endColumn":51},{"ruleId":"572","severity":1,"message":"573","line":217,"column":49,"nodeType":"574","messageId":"575","endLine":217,"endColumn":51},{"ruleId":"572","severity":1,"message":"573","line":218,"column":57,"nodeType":"574","messageId":"575","endLine":218,"endColumn":59},{"ruleId":"572","severity":1,"message":"573","line":241,"column":48,"nodeType":"574","messageId":"575","endLine":241,"endColumn":50},{"ruleId":"572","severity":1,"message":"573","line":242,"column":49,"nodeType":"574","messageId":"575","endLine":242,"endColumn":51},{"ruleId":"572","severity":1,"message":"573","line":243,"column":57,"nodeType":"574","messageId":"575","endLine":243,"endColumn":59},{"ruleId":"543","severity":1,"message":"593","line":12,"column":5,"nodeType":"545","messageId":"546","endLine":12,"endColumn":36},{"ruleId":"543","severity":1,"message":"563","line":14,"column":5,"nodeType":"545","messageId":"546","endLine":14,"endColumn":35},{"ruleId":"543","severity":1,"message":"594","line":15,"column":5,"nodeType":"545","messageId":"546","endLine":15,"endColumn":30},{"ruleId":"543","severity":1,"message":"564","line":16,"column":5,"nodeType":"545","messageId":"546","endLine":16,"endColumn":32},{"ruleId":"543","severity":1,"message":"585","line":17,"column":5,"nodeType":"545","messageId":"546","endLine":17,"endColumn":27},{"ruleId":"543","severity":1,"message":"565","line":18,"column":5,"nodeType":"545","messageId":"546","endLine":18,"endColumn":18},{"ruleId":"543","severity":1,"message":"566","line":19,"column":5,"nodeType":"545","messageId":"546","endLine":19,"endColumn":15},{"ruleId":"543","severity":1,"message":"567","line":20,"column":5,"nodeType":"545","messageId":"546","endLine":20,"endColumn":15},{"ruleId":"543","severity":1,"message":"569","line":21,"column":5,"nodeType":"545","messageId":"546","endLine":21,"endColumn":21},{"ruleId":"543","severity":1,"message":"570","line":22,"column":5,"nodeType":"545","messageId":"546","endLine":22,"endColumn":20},{"ruleId":"543","severity":1,"message":"571","line":23,"column":5,"nodeType":"545","messageId":"546","endLine":23,"endColumn":21},{"ruleId":"543","severity":1,"message":"586","line":24,"column":5,"nodeType":"545","messageId":"546","endLine":24,"endColumn":40},{"ruleId":"543","severity":1,"message":"587","line":25,"column":5,"nodeType":"545","messageId":"546","endLine":25,"endColumn":31},{"ruleId":"543","severity":1,"message":"544","line":1,"column":22,"nodeType":"545","messageId":"546","endLine":1,"endColumn":30},{"ruleId":"543","severity":1,"message":"593","line":8,"column":5,"nodeType":"545","messageId":"546","endLine":8,"endColumn":36},{"ruleId":"543","severity":1,"message":"562","line":9,"column":5,"nodeType":"545","messageId":"546","endLine":9,"endColumn":14},{"ruleId":"543","severity":1,"message":"563","line":10,"column":5,"nodeType":"545","messageId":"546","endLine":10,"endColumn":35},{"ruleId":"543","severity":1,"message":"594","line":11,"column":5,"nodeType":"545","messageId":"546","endLine":11,"endColumn":30},{"ruleId":"543","severity":1,"message":"564","line":12,"column":5,"nodeType":"545","messageId":"546","endLine":12,"endColumn":32},{"ruleId":"543","severity":1,"message":"585","line":13,"column":5,"nodeType":"545","messageId":"546","endLine":13,"endColumn":27},{"ruleId":"543","severity":1,"message":"565","line":14,"column":5,"nodeType":"545","messageId":"546","endLine":14,"endColumn":18},{"ruleId":"543","severity":1,"message":"566","line":15,"column":5,"nodeType":"545","messageId":"546","endLine":15,"endColumn":15},{"ruleId":"543","severity":1,"message":"567","line":16,"column":5,"nodeType":"545","messageId":"546","endLine":16,"endColumn":15},{"ruleId":"543","severity":1,"message":"568","line":17,"column":5,"nodeType":"545","messageId":"546","endLine":17,"endColumn":28},{"ruleId":"543","severity":1,"message":"569","line":18,"column":5,"nodeType":"545","messageId":"546","endLine":18,"endColumn":21},{"ruleId":"543","severity":1,"message":"570","line":19,"column":5,"nodeType":"545","messageId":"546","endLine":19,"endColumn":20},{"ruleId":"543","severity":1,"message":"571","line":20,"column":5,"nodeType":"545","messageId":"546","endLine":20,"endColumn":21},{"ruleId":"543","severity":1,"message":"586","line":21,"column":5,"nodeType":"545","messageId":"546","endLine":21,"endColumn":40},{"ruleId":"543","severity":1,"message":"587","line":22,"column":5,"nodeType":"545","messageId":"546","endLine":22,"endColumn":31},{"ruleId":"543","severity":1,"message":"643","line":58,"column":7,"nodeType":"545","messageId":"546","endLine":58,"endColumn":18},{"ruleId":"543","severity":1,"message":"644","line":12,"column":9,"nodeType":"545","messageId":"546","endLine":12,"endColumn":25},{"ruleId":"557","severity":1,"message":"645","line":22,"column":6,"nodeType":"559","endLine":22,"endColumn":8,"suggestions":"646"},{"ruleId":"572","severity":1,"message":"573","line":55,"column":51,"nodeType":"574","messageId":"575","endLine":55,"endColumn":53},{"ruleId":"572","severity":1,"message":"573","line":62,"column":34,"nodeType":"574","messageId":"575","endLine":62,"endColumn":36},{"ruleId":"543","severity":1,"message":"593","line":28,"column":5,"nodeType":"545","messageId":"546","endLine":28,"endColumn":36},{"ruleId":"543","severity":1,"message":"563","line":30,"column":5,"nodeType":"545","messageId":"546","endLine":30,"endColumn":35},{"ruleId":"543","severity":1,"message":"594","line":31,"column":5,"nodeType":"545","messageId":"546","endLine":31,"endColumn":30},{"ruleId":"543","severity":1,"message":"564","line":32,"column":5,"nodeType":"545","messageId":"546","endLine":32,"endColumn":32},{"ruleId":"543","severity":1,"message":"585","line":33,"column":5,"nodeType":"545","messageId":"546","endLine":33,"endColumn":27},{"ruleId":"543","severity":1,"message":"565","line":34,"column":5,"nodeType":"545","messageId":"546","endLine":34,"endColumn":18},{"ruleId":"543","severity":1,"message":"566","line":35,"column":5,"nodeType":"545","messageId":"546","endLine":35,"endColumn":15},{"ruleId":"543","severity":1,"message":"567","line":36,"column":5,"nodeType":"545","messageId":"546","endLine":36,"endColumn":15},{"ruleId":"543","severity":1,"message":"569","line":37,"column":5,"nodeType":"545","messageId":"546","endLine":37,"endColumn":21},{"ruleId":"543","severity":1,"message":"570","line":38,"column":5,"nodeType":"545","messageId":"546","endLine":38,"endColumn":20},{"ruleId":"543","severity":1,"message":"571","line":39,"column":5,"nodeType":"545","messageId":"546","endLine":39,"endColumn":21},{"ruleId":"543","severity":1,"message":"586","line":40,"column":5,"nodeType":"545","messageId":"546","endLine":40,"endColumn":40},{"ruleId":"543","severity":1,"message":"587","line":41,"column":5,"nodeType":"545","messageId":"546","endLine":41,"endColumn":31},{"ruleId":"543","severity":1,"message":"647","line":28,"column":9,"nodeType":"545","messageId":"546","endLine":28,"endColumn":16},{"ruleId":"543","severity":1,"message":"593","line":45,"column":5,"nodeType":"545","messageId":"546","endLine":45,"endColumn":36},{"ruleId":"543","severity":1,"message":"594","line":48,"column":5,"nodeType":"545","messageId":"546","endLine":48,"endColumn":30},{"ruleId":"543","severity":1,"message":"564","line":49,"column":5,"nodeType":"545","messageId":"546","endLine":49,"endColumn":32},{"ruleId":"543","severity":1,"message":"585","line":50,"column":5,"nodeType":"545","messageId":"546","endLine":50,"endColumn":27},{"ruleId":"543","severity":1,"message":"565","line":51,"column":5,"nodeType":"545","messageId":"546","endLine":51,"endColumn":18},{"ruleId":"543","severity":1,"message":"566","line":52,"column":5,"nodeType":"545","messageId":"546","endLine":52,"endColumn":15},{"ruleId":"543","severity":1,"message":"567","line":53,"column":5,"nodeType":"545","messageId":"546","endLine":53,"endColumn":15},{"ruleId":"543","severity":1,"message":"568","line":54,"column":5,"nodeType":"545","messageId":"546","endLine":54,"endColumn":28},{"ruleId":"543","severity":1,"message":"569","line":55,"column":5,"nodeType":"545","messageId":"546","endLine":55,"endColumn":21},{"ruleId":"543","severity":1,"message":"586","line":58,"column":5,"nodeType":"545","messageId":"546","endLine":58,"endColumn":40},{"ruleId":"543","severity":1,"message":"587","line":59,"column":5,"nodeType":"545","messageId":"546","endLine":59,"endColumn":31},{"ruleId":"543","severity":1,"message":"648","line":2,"column":8,"nodeType":"545","messageId":"546","endLine":2,"endColumn":12},{"ruleId":"543","severity":1,"message":"647","line":38,"column":9,"nodeType":"545","messageId":"546","endLine":38,"endColumn":16},{"ruleId":"543","severity":1,"message":"633","line":75,"column":9,"nodeType":"545","messageId":"546","endLine":75,"endColumn":17},{"ruleId":"543","severity":1,"message":"649","line":76,"column":9,"nodeType":"545","messageId":"546","endLine":76,"endColumn":42},{"ruleId":"543","severity":1,"message":"593","line":79,"column":5,"nodeType":"545","messageId":"546","endLine":79,"endColumn":36},{"ruleId":"543","severity":1,"message":"594","line":82,"column":5,"nodeType":"545","messageId":"546","endLine":82,"endColumn":30},{"ruleId":"543","severity":1,"message":"564","line":83,"column":5,"nodeType":"545","messageId":"546","endLine":83,"endColumn":32},{"ruleId":"543","severity":1,"message":"585","line":84,"column":5,"nodeType":"545","messageId":"546","endLine":84,"endColumn":27},{"ruleId":"543","severity":1,"message":"565","line":85,"column":5,"nodeType":"545","messageId":"546","endLine":85,"endColumn":18},{"ruleId":"543","severity":1,"message":"566","line":86,"column":5,"nodeType":"545","messageId":"546","endLine":86,"endColumn":15},{"ruleId":"543","severity":1,"message":"567","line":87,"column":5,"nodeType":"545","messageId":"546","endLine":87,"endColumn":15},{"ruleId":"543","severity":1,"message":"568","line":88,"column":5,"nodeType":"545","messageId":"546","endLine":88,"endColumn":28},{"ruleId":"543","severity":1,"message":"569","line":89,"column":5,"nodeType":"545","messageId":"546","endLine":89,"endColumn":21},{"ruleId":"543","severity":1,"message":"586","line":92,"column":5,"nodeType":"545","messageId":"546","endLine":92,"endColumn":40},{"ruleId":"543","severity":1,"message":"587","line":93,"column":5,"nodeType":"545","messageId":"546","endLine":93,"endColumn":31},{"ruleId":"543","severity":1,"message":"647","line":34,"column":9,"nodeType":"545","messageId":"546","endLine":34,"endColumn":16},{"ruleId":"543","severity":1,"message":"633","line":59,"column":9,"nodeType":"545","messageId":"546","endLine":59,"endColumn":17},{"ruleId":"543","severity":1,"message":"593","line":61,"column":5,"nodeType":"545","messageId":"546","endLine":61,"endColumn":36},{"ruleId":"543","severity":1,"message":"594","line":64,"column":5,"nodeType":"545","messageId":"546","endLine":64,"endColumn":30},{"ruleId":"543","severity":1,"message":"564","line":65,"column":5,"nodeType":"545","messageId":"546","endLine":65,"endColumn":32},{"ruleId":"543","severity":1,"message":"585","line":66,"column":5,"nodeType":"545","messageId":"546","endLine":66,"endColumn":27},{"ruleId":"543","severity":1,"message":"565","line":67,"column":5,"nodeType":"545","messageId":"546","endLine":67,"endColumn":18},{"ruleId":"543","severity":1,"message":"566","line":68,"column":5,"nodeType":"545","messageId":"546","endLine":68,"endColumn":15},{"ruleId":"543","severity":1,"message":"567","line":69,"column":5,"nodeType":"545","messageId":"546","endLine":69,"endColumn":15},{"ruleId":"543","severity":1,"message":"568","line":70,"column":5,"nodeType":"545","messageId":"546","endLine":70,"endColumn":28},{"ruleId":"543","severity":1,"message":"569","line":71,"column":5,"nodeType":"545","messageId":"546","endLine":71,"endColumn":21},{"ruleId":"543","severity":1,"message":"586","line":74,"column":5,"nodeType":"545","messageId":"546","endLine":74,"endColumn":40},{"ruleId":"543","severity":1,"message":"587","line":75,"column":5,"nodeType":"545","messageId":"546","endLine":75,"endColumn":31},{"ruleId":"543","severity":1,"message":"650","line":77,"column":5,"nodeType":"545","messageId":"546","endLine":77,"endColumn":31},{"ruleId":"543","severity":1,"message":"647","line":32,"column":9,"nodeType":"545","messageId":"546","endLine":32,"endColumn":16},{"ruleId":"543","severity":1,"message":"593","line":58,"column":5,"nodeType":"545","messageId":"546","endLine":58,"endColumn":36},{"ruleId":"543","severity":1,"message":"594","line":61,"column":5,"nodeType":"545","messageId":"546","endLine":61,"endColumn":30},{"ruleId":"543","severity":1,"message":"564","line":62,"column":5,"nodeType":"545","messageId":"546","endLine":62,"endColumn":32},{"ruleId":"543","severity":1,"message":"585","line":63,"column":5,"nodeType":"545","messageId":"546","endLine":63,"endColumn":27},{"ruleId":"543","severity":1,"message":"565","line":64,"column":5,"nodeType":"545","messageId":"546","endLine":64,"endColumn":18},{"ruleId":"543","severity":1,"message":"566","line":65,"column":5,"nodeType":"545","messageId":"546","endLine":65,"endColumn":15},{"ruleId":"543","severity":1,"message":"567","line":66,"column":5,"nodeType":"545","messageId":"546","endLine":66,"endColumn":15},{"ruleId":"543","severity":1,"message":"568","line":67,"column":5,"nodeType":"545","messageId":"546","endLine":67,"endColumn":28},{"ruleId":"543","severity":1,"message":"569","line":68,"column":5,"nodeType":"545","messageId":"546","endLine":68,"endColumn":21},{"ruleId":"543","severity":1,"message":"586","line":71,"column":5,"nodeType":"545","messageId":"546","endLine":71,"endColumn":40},{"ruleId":"543","severity":1,"message":"587","line":72,"column":5,"nodeType":"545","messageId":"546","endLine":72,"endColumn":31},{"ruleId":"543","severity":1,"message":"633","line":70,"column":9,"nodeType":"545","messageId":"546","endLine":70,"endColumn":17},{"ruleId":"543","severity":1,"message":"548","line":15,"column":10,"nodeType":"545","messageId":"546","endLine":15,"endColumn":19},{"ruleId":"543","severity":1,"message":"562","line":39,"column":9,"nodeType":"545","messageId":"546","endLine":39,"endColumn":18},{"ruleId":"543","severity":1,"message":"589","line":40,"column":9,"nodeType":"545","messageId":"546","endLine":40,"endColumn":23},{"ruleId":"543","severity":1,"message":"565","line":41,"column":9,"nodeType":"545","messageId":"546","endLine":41,"endColumn":22},{"ruleId":"543","severity":1,"message":"566","line":42,"column":9,"nodeType":"545","messageId":"546","endLine":42,"endColumn":19},{"ruleId":"543","severity":1,"message":"567","line":43,"column":9,"nodeType":"545","messageId":"546","endLine":43,"endColumn":19},{"ruleId":"543","severity":1,"message":"568","line":44,"column":9,"nodeType":"545","messageId":"546","endLine":44,"endColumn":32},{"ruleId":"543","severity":1,"message":"569","line":45,"column":9,"nodeType":"545","messageId":"546","endLine":45,"endColumn":25},{"ruleId":"543","severity":1,"message":"594","line":48,"column":9,"nodeType":"545","messageId":"546","endLine":48,"endColumn":34},{"ruleId":"543","severity":1,"message":"585","line":50,"column":9,"nodeType":"545","messageId":"546","endLine":50,"endColumn":31},{"ruleId":"543","severity":1,"message":"651","line":56,"column":14,"nodeType":"545","messageId":"546","endLine":56,"endColumn":23},{"ruleId":"543","severity":1,"message":"652","line":58,"column":13,"nodeType":"545","messageId":"546","endLine":58,"endColumn":26},{"ruleId":"543","severity":1,"message":"653","line":134,"column":11,"nodeType":"545","messageId":"546","endLine":134,"endColumn":24},{"ruleId":"557","severity":1,"message":"654","line":143,"column":10,"nodeType":"559","endLine":143,"endColumn":12,"suggestions":"655"},{"ruleId":"543","severity":1,"message":"656","line":7,"column":10,"nodeType":"545","messageId":"546","endLine":7,"endColumn":14},{"ruleId":"543","severity":1,"message":"657","line":8,"column":10,"nodeType":"545","messageId":"546","endLine":8,"endColumn":14},{"ruleId":"543","severity":1,"message":"658","line":8,"column":16,"nodeType":"545","messageId":"546","endLine":8,"endColumn":23},{"ruleId":"543","severity":1,"message":"659","line":10,"column":9,"nodeType":"545","messageId":"546","endLine":10,"endColumn":24},{"ruleId":"543","severity":1,"message":"660","line":14,"column":9,"nodeType":"545","messageId":"546","endLine":14,"endColumn":20},{"ruleId":"543","severity":1,"message":"593","line":20,"column":5,"nodeType":"545","messageId":"546","endLine":20,"endColumn":36},{"ruleId":"543","severity":1,"message":"589","line":22,"column":5,"nodeType":"545","messageId":"546","endLine":22,"endColumn":19},{"ruleId":"543","severity":1,"message":"565","line":23,"column":5,"nodeType":"545","messageId":"546","endLine":23,"endColumn":18},{"ruleId":"543","severity":1,"message":"566","line":24,"column":5,"nodeType":"545","messageId":"546","endLine":24,"endColumn":15},{"ruleId":"543","severity":1,"message":"567","line":25,"column":5,"nodeType":"545","messageId":"546","endLine":25,"endColumn":15},{"ruleId":"543","severity":1,"message":"568","line":26,"column":5,"nodeType":"545","messageId":"546","endLine":26,"endColumn":28},{"ruleId":"543","severity":1,"message":"569","line":27,"column":5,"nodeType":"545","messageId":"546","endLine":27,"endColumn":21},{"ruleId":"543","severity":1,"message":"570","line":28,"column":5,"nodeType":"545","messageId":"546","endLine":28,"endColumn":20},{"ruleId":"543","severity":1,"message":"656","line":7,"column":10,"nodeType":"545","messageId":"546","endLine":7,"endColumn":14},{"ruleId":"543","severity":1,"message":"661","line":8,"column":10,"nodeType":"545","messageId":"546","endLine":8,"endColumn":23},{"ruleId":"543","severity":1,"message":"662","line":8,"column":25,"nodeType":"545","messageId":"546","endLine":8,"endColumn":41},{"ruleId":"543","severity":1,"message":"659","line":10,"column":9,"nodeType":"545","messageId":"546","endLine":10,"endColumn":24},{"ruleId":"543","severity":1,"message":"660","line":14,"column":9,"nodeType":"545","messageId":"546","endLine":14,"endColumn":20},{"ruleId":"543","severity":1,"message":"593","line":21,"column":5,"nodeType":"545","messageId":"546","endLine":21,"endColumn":36},{"ruleId":"543","severity":1,"message":"589","line":23,"column":5,"nodeType":"545","messageId":"546","endLine":23,"endColumn":19},{"ruleId":"543","severity":1,"message":"565","line":24,"column":5,"nodeType":"545","messageId":"546","endLine":24,"endColumn":18},{"ruleId":"543","severity":1,"message":"566","line":25,"column":5,"nodeType":"545","messageId":"546","endLine":25,"endColumn":15},{"ruleId":"543","severity":1,"message":"567","line":26,"column":5,"nodeType":"545","messageId":"546","endLine":26,"endColumn":15},{"ruleId":"543","severity":1,"message":"568","line":27,"column":5,"nodeType":"545","messageId":"546","endLine":27,"endColumn":28},{"ruleId":"543","severity":1,"message":"569","line":28,"column":5,"nodeType":"545","messageId":"546","endLine":28,"endColumn":21},{"ruleId":"543","severity":1,"message":"570","line":29,"column":5,"nodeType":"545","messageId":"546","endLine":29,"endColumn":20},{"ruleId":"663","severity":1,"message":"664","line":3,"column":1,"nodeType":"665","endLine":3,"endColumn":38},"no-native-reassign",["666"],"no-negated-in-lhs",["667"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'initializing' is defined but never used.","'useStyles' is defined but never used.","'AppBar' is defined but never used.","'backgroundScrollStopForTimePicker' is assigned a value but never used.","'setBackgroundScrollStopForTimePicker' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'jwtToken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["668"],"'Transition' is assigned a value but never used.","'fontColor' is assigned a value but never used.","'borderRadiusesForInnerElements' is assigned a value but never used.","'borderColorForInnerElements' is assigned a value but never used.","'carsTypeColor' is assigned a value but never used.","'hoverColor' is assigned a value but never used.","'iconsColor' is assigned a value but never used.","'backAndNextButtonsColor' is assigned a value but never used.","'innerTextOnHover' is assigned a value but never used.","'inputsFontColor' is assigned a value but never used.","'inputsBackground' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'fontFamily'.","ObjectExpression","'backgroundColorOnScroll' is assigned a value but never used.","'Draggable' is defined but never used.","Duplicate key 'boxShadow'.","'authApi' is defined but never used.","'smallDevices' is assigned a value but never used.","'resetWidgetInputs' is assigned a value but never used.","'borderColorForOuterApp' is assigned a value but never used.","'bookNowIconFontAndCircleBorderColor' is assigned a value but never used.","'bookNowIconBackgroundColor' is assigned a value but never used.","'mapDispatchToProps' is assigned a value but never used.","'borderRadiuses' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'createReservation' and 'formSummary'. Either include them or remove the dependency array. If 'createReservation' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["669"],"'textColor' is assigned a value but never used.","'ThemeProviderAppBackgroundColor' is assigned a value but never used.","'borderRadiusesForWholeApp' is assigned a value but never used.","'useEffect' is defined but never used.","'Carousel' is defined but never used.","'styles' is defined but never used.","'yup' is defined but never used.","'disableHourly' is assigned a value but never used.","'airlineName' is assigned a value but never used.","'setRedBorderOnSubmitForTime5' is assigned a value but never used.","'setRedBorderOnSubmitForTime6' is assigned a value but never used.","'redBorderOnAirlines' is assigned a value but never used.","'startsWithTwo' is assigned a value but never used.","'timeMask' is assigned a value but never used.","'setTimeMask' is assigned a value but never used.","'errors' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'backAndNextButtonsFontColor' is assigned a value but never used.","'setFontColorState' is assigned a value but never used.","'alignment' is assigned a value but never used.","'inputStyle' is assigned a value but never used.","'resData' is assigned a value but never used.","React Hook useEffect contains a call to 'setBookingType'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [hourly, firstAirline] as a second argument to the useEffect Hook.","MemberExpression",["670"],"'result' is assigned a value but never used.","'FormProvider' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useForm' is defined but never used.","'consts' is defined but never used.","'ListItem' is defined but never used.","'TextField' is defined but never used.","'Controller' is defined but never used.","'MeetAndGreetIconWhite' is defined but never used.","Block is redundant.","redundantBlock","'isMobile' is assigned a value but never used.","'card' is assigned a value but never used.","'setCard' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'fetchAirlines'. Either include it or remove the dependency array. If 'fetchAirlines' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["671"],"'isiPad' is assigned a value but never used.","'carTextColor' is assigned a value but never used.","'car' is assigned a value but never used.","The 'setWidthForSlickSlide' function makes the dependencies of useEffect Hook (at line 69) change on every render. To fix this, wrap the definition of 'setWidthForSlickSlide' in its own useCallback() Hook.","FunctionDeclaration","'SwitchLabel' is assigned a value but never used.","'closeOnBodyClick' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'closeOnEscapeKeyDown'. Either include it or remove the dependency array.",["672"],"'classes' is assigned a value but never used.","'Grid' is defined but never used.","'shouldSafetySeatBeColumnDirection' is assigned a value but never used.","'countersInnerDividerBorder' is assigned a value but never used.","'condition' is assigned a value but never used.","'handleChanger' is assigned a value but never used.","'copiedLoading' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'destinations', 'formData.orderAddressDetails', 'resetInputs', and 'setDestinations'. Either include them or remove the dependency array. If 'setDestinations' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["673"],"'open' is assigned a value but never used.","'term' is assigned a value but never used.","'setTerm' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'privacyPolicy' is assigned a value but never used.","'setPrivacyPolicy' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"674","fix":"675"},{"desc":"676","fix":"677"},{"desc":"678","fix":"679"},{"desc":"680","fix":"681"},{"desc":"682","fix":"683"},{"desc":"684","fix":"685"},"Update the dependencies array to be: [props]",{"range":"686","text":"687"},"Update the dependencies array to be: [createReservation, formSummary]",{"range":"688","text":"689"},"Add dependencies array: [hourly, firstAirline]",{"range":"690","text":"691"},"Update the dependencies array to be: [fetchAirlines]",{"range":"692","text":"693"},"Update the dependencies array to be: [closeOnEscapeKeyDown]",{"range":"694","text":"695"},"Update the dependencies array to be: [destinations, formData.orderAddressDetails, resetInputs, setDestinations]",{"range":"696","text":"697"},[6295,6297],"[props]",[1239,1241],"[createReservation, formSummary]",[14098,14098],", [hourly, firstAirline]",[6240,6242],"[fetchAirlines]",[610,612],"[closeOnEscapeKeyDown]",[4224,4226],"[destinations, formData.orderAddressDetails, resetInputs, setDestinations]"]