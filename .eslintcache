[{"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\index.js":"1","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\context.js":"2","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\App.js":"3","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\reportWebVitals.js":"4","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Redux\\redux-store.js":"5","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Redux\\company-profile-reducer.js":"6","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Redux\\company-token-reducer.js":"7","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\AppStyles.js":"8","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Redux\\form-reducer.js":"9","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Redux\\reset-widget-inputs-reducer.js":"10","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Redux\\gate-meeting-reducer.js":"11","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Redux\\car-reducer.js":"12","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Redux\\hourly-reducer.js":"13","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CompanyProfile\\CompanyProfile.js":"14","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\CheckOut.js":"15","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\Helpers\\Preloader\\Preloader.js":"16","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\api\\api.js":"17","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\assets\\icons.js":"18","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\Preview\\PreviewContainerComponent.js":"19","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\Confirmation\\Confirmation.js":"20","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\Payment\\PaymentContainerComponent.js":"21","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\FleetForm\\FleetFormContainerComponent.js":"22","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\AdressFormContainerComponent.js":"23","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\FleetForm\\FleetFormUIComponent.js":"24","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\Payment\\PaymentUIComponent.js":"25","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\Preview\\PreviewUIComponent.js":"26","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\ReservationFailed\\ReservationFailed.js":"27","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\AdressFormStyles.js":"28","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\AdressFormUIComponent.js":"29","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\Helpers\\Modal\\Modal.js":"30","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\Helpers\\Switch\\Switch.js":"31","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\Luggage\\Luggage.js":"32","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\SafetySeat\\SafetySeat.js":"33","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\PassengerQuantity\\PassengerQuantity.js":"34","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\Hours\\Hours.js":"35","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\GoogleMap\\GoogleMapContainer\\GoogleMap.js":"36","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\GoogleMap\\GoogleMapContainer\\GoogleMapStyles.js":"37","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\GoogleMap\\mapStyles.js":"38","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\GoogleMap\\Directions\\Directions.js":"39","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\FleetForm\\FleetFormStyles.js":"40","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\CustomFormInput\\CustomFormInput.js":"41","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\IncorrectAdressError\\IncorrectAddressError.js":"42","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\TermsOfUse\\PrivacyPolicy\\PrivacyPolicy.js":"43","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\TermsOfUse\\TermOfUse\\TermOfUse.js":"44"},{"size":2368,"mtime":1642651224571,"results":"45","hashOfConfig":"46"},{"size":110,"mtime":1642058614732,"results":"47","hashOfConfig":"46"},{"size":30375,"mtime":1642662063006,"results":"48","hashOfConfig":"46"},{"size":375,"mtime":1625493823979,"results":"49","hashOfConfig":"46"},{"size":1025,"mtime":1635563186265,"results":"50","hashOfConfig":"46"},{"size":3337,"mtime":1638853711008,"results":"51","hashOfConfig":"46"},{"size":1312,"mtime":1642495866011,"results":"52","hashOfConfig":"46"},{"size":8318,"mtime":1642484025211,"results":"53","hashOfConfig":"46"},{"size":7689,"mtime":1638536798446,"results":"54","hashOfConfig":"46"},{"size":1158,"mtime":1636522466937,"results":"55","hashOfConfig":"46"},{"size":1137,"mtime":1635563186263,"results":"56","hashOfConfig":"46"},{"size":2075,"mtime":1635847840593,"results":"57","hashOfConfig":"46"},{"size":2023,"mtime":1635563186264,"results":"58","hashOfConfig":"46"},{"size":6820,"mtime":1642478373001,"results":"59","hashOfConfig":"46"},{"size":2253,"mtime":1642496672189,"results":"60","hashOfConfig":"46"},{"size":1395,"mtime":1642478818159,"results":"61","hashOfConfig":"46"},{"size":3309,"mtime":1642496988384,"results":"62","hashOfConfig":"46"},{"size":62910,"mtime":1642661975530,"results":"63","hashOfConfig":"46"},{"size":3054,"mtime":1641525867283,"results":"64","hashOfConfig":"46"},{"size":3702,"mtime":1642046068561,"results":"65","hashOfConfig":"46"},{"size":7819,"mtime":1642583075320,"results":"66","hashOfConfig":"46"},{"size":3020,"mtime":1642678182564,"results":"67","hashOfConfig":"46"},{"size":21073,"mtime":1642578277934,"results":"68","hashOfConfig":"46"},{"size":44052,"mtime":1642679348246,"results":"69","hashOfConfig":"46"},{"size":46411,"mtime":1642591396149,"results":"70","hashOfConfig":"46"},{"size":80611,"mtime":1642672156418,"results":"71","hashOfConfig":"46"},{"size":1581,"mtime":1642478373046,"results":"72","hashOfConfig":"46"},{"size":8627,"mtime":1642129336436,"results":"73","hashOfConfig":"46"},{"size":50739,"mtime":1642593070060,"results":"74","hashOfConfig":"46"},{"size":1988,"mtime":1641786772232,"results":"75","hashOfConfig":"46"},{"size":534,"mtime":1640336386930,"results":"76","hashOfConfig":"46"},{"size":8985,"mtime":1642567943183,"results":"77","hashOfConfig":"46"},{"size":16340,"mtime":1642567943183,"results":"78","hashOfConfig":"46"},{"size":7152,"mtime":1642566686200,"results":"79","hashOfConfig":"46"},{"size":5709,"mtime":1642567943180,"results":"80","hashOfConfig":"46"},{"size":23418,"mtime":1642497782827,"results":"81","hashOfConfig":"46"},{"size":4095,"mtime":1642046102619,"results":"82","hashOfConfig":"46"},{"size":65,"mtime":1642046501906,"results":"83","hashOfConfig":"46"},{"size":2911,"mtime":1642479015279,"results":"84","hashOfConfig":"46"},{"size":3107,"mtime":1642045909777,"results":"85","hashOfConfig":"46"},{"size":6394,"mtime":1642129990133,"results":"86","hashOfConfig":"46"},{"size":2960,"mtime":1642478373046,"results":"87","hashOfConfig":"46"},{"size":6667,"mtime":1642657099346,"results":"88","hashOfConfig":"46"},{"size":58480,"mtime":1642134560628,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a874b2",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"94"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"94"},"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\index.js",[],"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\context.js",[],["203","204"],"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\App.js",["205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231"],"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\reportWebVitals.js",[],"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Redux\\redux-store.js",[],"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Redux\\company-profile-reducer.js",[],"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Redux\\company-token-reducer.js",[],"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\AppStyles.js",["232"],"// import { makeStyles } from \"@material-ui/core\"\r\n\r\nconst userScreenHeight = window.innerHeight\r\nconst userScreenWidth = window.innerWidth\r\n\r\nconst backgroundColorOnScroll = \"black\"\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   \"@keyframes pulse\": {\r\n//     \"10%\": {\r\n//       \"-moz-box-shadow\": \"0 0 0 0 white\",\r\n//       \"box-shadow\": \"0 0 0 0 white\",\r\n//     },\r\n//     \"38%\": {\r\n//       \"-moz-box-shadow\": \"0 0 0 0 white\",\r\n//       \"box-shadow\": \"0 0 3px 4.5px white\",\r\n//     },\r\n//     \"100%\": {\r\n//       \"-moz-box-shadow\": \"0 0 0 0 white\",\r\n//       \"box-shadow\": \"0 0 0 0 tranparent\",\r\n//     },\r\n//   },\r\n//   MuiAccordionroot: {\r\n//     paddingLeft: \"0px\",\r\n//     \"&.MuiAccordion-root:before\": {\r\n//       backgroundColor: \"white\",\r\n//     },\r\n//     \"& .MuiAccordionDetails-root\": {\r\n//       padding: \"0px\",\r\n//     },\r\n//     \"& .MuiAccordionSummary-expandIcon\": {\r\n//       transition: \"0ms\",\r\n//       animationName: \"$pulse\",\r\n//       animationIterationCount: \"infinite\",\r\n//       animationDuration: \"2s\",\r\n//       backgroundColor: \"rgba(149, 149, 149, 0.8)\",\r\n//       filter: \"opacity(1)\",\r\n//       \"&::-webkit-filter\": \"opacity(1)\",\r\n//       // backdropFilter: \"blur(6px)\",\r\n//       // \"&::-webkit-backdrop-filter\": \"blur(6px)\",\r\n//       // opacity: \"0.8\",\r\n//     },\r\n//     \"& .MuiButtonBase-root\": {\r\n//       disableRipple: true,\r\n//       disableFocusRipple: true,\r\n//       // disableElevation: true,\r\n//     },\r\n//     \"& .MuiButtonBase-root.Mui-disabled\": {\r\n//       backgroundColor: \"none\",\r\n//     },\r\n//   },\r\n\r\n//   // main: {\r\n//   //   position: \"fixed\",\r\n//   //   bottom: \"1px\",\r\n//   //   webkitUserSelect: \"none\",\r\n//   //   mozUserSelect: \"none\",\r\n//   //   msUserSelect: \"none\",\r\n//   //   userSelect: \"none\",\r\n//   //   \"& .MuiDivider-root\": {\r\n//   //     background: \"#c7c7c7\",\r\n//   //   },\r\n//   //   \"& .MuiPaper-root\": {\r\n//   //     background: \"black\",\r\n//   //   },\r\n//   // },\r\n//   mainMobile: {\r\n//     position: \"fixed\",\r\n//     bottom: \"-1px\",\r\n//     webkitUserSelect: \"none\",\r\n//     mozUserSelect: \"none\",\r\n//     msUserSelect: \"none\",\r\n//     userSelect: \"none\",\r\n//     height: \"100%\",\r\n//   },\r\n//   accordion: {\r\n//     width: \"120px\",\r\n//     height: \"120px\",\r\n//     bottom: \"50px\",\r\n//     left: \"0px\",\r\n//     background: \"none\",\r\n//     marginLeft: \"30px\",\r\n//     // padding: theme.spacing(1),\r\n//     position: \"fixed\",\r\n//     \"& .MuiAccordionSummary-expandIcon.Mui-expanded\": {\r\n//       transform: \"initial\",\r\n//     },\r\n//     [theme.breakpoints.down(\"xs\")]: {\r\n//       left: \"10px\",\r\n//     },\r\n//   },\r\n//   accordionIpad: {\r\n//     width: \"120px\",\r\n//     height: \"120px\",\r\n//     bottom: \"50px\",\r\n//     left: 30,\r\n\r\n//     background: \"none\",\r\n//     // padding: theme.spacing(1),\r\n//     position: \"fixed\",\r\n//     // [theme.breakpoints.down(\"xs\")]: {\r\n//     //   left: \"10px\",\r\n//     // },\r\n//   },\r\n//   accordionMobile: {\r\n//     width: \"120px\",\r\n//     height: \"120px\",\r\n//     bottom: \"5px\",\r\n//     left: \"-40px\",\r\n//     bottom: \"10px\",\r\n//     background: \"none\",\r\n//     // padding: theme.spacing(1),\r\n//     position: \"fixed\",\r\n//     // zIndex: \"1\",\r\n//     // [theme.breakpoints.down(\"xs\")]: {\r\n//     //   left: \"10px\",\r\n//     // },\r\n//   },\r\n//   accordionforBostonLimousineToDisplayIconOnTheLeft: {\r\n//     width: \"120px\",\r\n//     height: \"120px\",\r\n//     bottom: \"5px\",\r\n//     marginLeft: userScreenWidth - 137,\r\n//     // marginLeft: -30,\r\n//     marginBottom: -10,\r\n//     background: \"none\",\r\n//     // padding: theme.spacing(1),\r\n//     position: \"fixed\",\r\n//     // zIndex: \"1\",\r\n//     [theme.breakpoints.down(\"xs\")]: {\r\n//       left: \"10px\",\r\n//     },\r\n//   },\r\n//   content: {\r\n//     position: \"sticky\",\r\n//     cursor: \"default\",\r\n//     height: \"80vh\",\r\n//     width: \"356px\",\r\n//     backgroundColor: backgroundColorOnScroll,\r\n//     border: \"1px solid #AC8159\",\r\n//     // borderTopRightRadius: '30px',\r\n//     // borderTopLeftRadius: '30px',\r\n//     // borderBottomRight: '0px',\r\n//     // borderBottomLeft: '0px',\r\n\r\n//     // bottom: \"-1px\",\r\n//     overflowY: \"scroll\",\r\n//     \"&::-webkit-scrollbar\": {\r\n//       width: \"0.15em\",\r\n//       top: \"100px\",\r\n//       borderRadius: \"3px\",\r\n//       backgroundColor: \"transparent\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-track\": {\r\n//       marginTop: \"84px\",\r\n//       // marginBottom: \"300px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-thumb\": {\r\n//       backgroundColor: \"#c7c7c7\",\r\n//       // borderRadius: \"40px\",\r\n//       borderRadius: \"2px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-thumb:hover\": {\r\n//       background: \"#bfaf82\",\r\n//     },\r\n//     // [theme.breakpoints.down(\"xs\")]: {\r\n//     //   width: userScreenWidth,\r\n//     //   height: userScreenHeight,\r\n//     // },\r\n//     // left: '-20px',\r\n//   },\r\n//   contentIpad: {\r\n//     position: \"absolute\",\r\n//     cursor: \"default\",\r\n//     height: \"67vh\",\r\n//     width: \"356px\",\r\n//     border: \"1px solid #AC8159\",\r\n//     backgroundColor: backgroundColorOnScroll,\r\n//     // borderTopRightRadius: '30px',\r\n//     // borderTopLeftRadius: '30px',\r\n//     // borderBottomRight: '0px',\r\n//     // borderBottomLeft: '0px',\r\n//     left: 10,\r\n//     bottom: \"16px\",\r\n//     overflowY: \"scroll\",\r\n//     \"&::-webkit-scrollbar\": {\r\n//       width: \"0.20em\",\r\n//       top: \"100px\",\r\n//       backgroundColor: \"transparent\",\r\n//       borderRadius: \"3px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-track\": {\r\n//       marginTop: \"83px\",\r\n//       // marginBottom: \"300px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-thumb\": {\r\n//       backgroundColor: \"grey\",\r\n//       borderRadius: \"2px\",\r\n//       // borderRadius: \"40px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-thumb:hover\": {\r\n//       background: \"#c5cde3\",\r\n//     },\r\n//     [theme.breakpoints.down(\"xs\")]: {\r\n//       width: userScreenWidth,\r\n//       height: userScreenHeight,\r\n//     },\r\n//   },\r\n//   checkOut: {\r\n//     overflowY: \"scroll\",\r\n//     backgroundColor: backgroundColorOnScroll,\r\n//     \"&::-webkit-scrollbar\": {\r\n//       width: \"0.20em\",\r\n//       top: \"100px\",\r\n//       backgroundColor: \"transparent\",\r\n//       borderRadius: \"3px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-track\": {\r\n//       marginTop: \"84px\",\r\n//       // marginBottom: \"300px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-thumb\": {\r\n//       backgroundColor: \"grey\",\r\n//       borderRadius: \"2px\",\r\n//       // borderRadius: \"20px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-thumb:hover\": {\r\n//       background: \"#c5cde3\",\r\n//     },\r\n//   },\r\n//   contentMobile: {\r\n//     position: \"fixed\",\r\n//     cursor: \"default\",\r\n//     width: \"100vh\",\r\n//     height: \"100vh\",\r\n//     backgroundColor: backgroundColorOnScroll,\r\n//     // borderTopRightRadius: '30px',\r\n//     // borderTopLeftRadius: '30px',\r\n//     // borderBottomRight: '0px',\r\n//     // borderBottomLeft: '0px',\r\n//     bottom: \"1px\",\r\n//     overflowY: \"scroll\",\r\n\r\n//     \"&::-webkit-scrollbar\": {\r\n//       width: \"0.20em\",\r\n//       top: \"100px\",\r\n//       backgroundColor: \"transparent\",\r\n//       borderRadius: \"3px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-track\": {\r\n//       marginTop: \"83px\",\r\n//       // marginBottom: \"300px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-thumb\": {\r\n//       backgroundColor: \"grey\",\r\n//       borderRadius: \"2px\",\r\n//       // borderRadius: \"40px\",\r\n//     },\r\n//     \"&::-webkit-scrollbar-thumb:hover\": {\r\n//       background: \"#c5cde3\",\r\n//     },\r\n//     [theme.breakpoints.down(\"xs\")]: {\r\n//       width: userScreenWidth,\r\n//       height: userScreenHeight,\r\n//     },\r\n//     // left: '-20px',\r\n//   },\r\n//   contentMobileWithoutScroll: {\r\n//     position: \"fixed\",\r\n//     cursor: \"default\",\r\n//     height: \"100%\",\r\n//     width: \"100%\",\r\n//     // borderTopRightRadius: '30px',\r\n//     // borderTopLeftRadius: '30px',\r\n//     // borderBottomRight: '0px',\r\n//     // borderBottomLeft: '0px',\r\n//     bottom: \"1px\",\r\n//     overflowY: \"none\",\r\n//     // left: '-20px',\r\n//   },\r\n//   companyProfile: {\r\n//     cursor: \"move\",\r\n//     // position: 'sticky',\r\n//   },\r\n//   closeIcon: {\r\n//     textAlign: \"center\",\r\n//     verticalAlign: \"sub\",\r\n//     width: \"28px\",\r\n//     height: \"28px\",\r\n//     paddingTop: \"7px\",\r\n//     cursor: \"pointer\",\r\n//   },\r\n// }))\r\n\r\nexport { userScreenWidth, userScreenHeight }\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Redux\\form-reducer.js",[],"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Redux\\reset-widget-inputs-reducer.js",["233"],"import { authApi } from \"../api/api\"\r\n\r\nconst SET_RESET_INPUTS = \"/redux/companyTokenReducer/SET_RESET_INPUTS\"\r\n\r\nlet initialState = {\r\n  resetInputs: false,\r\n}\r\n\r\nconst resetWidgetInputsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_RESET_INPUTS:\r\n      return {\r\n        ...state,\r\n        resetInputs: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setResetWidgetInputsActionCreator = (flag) => ({\r\n  type: SET_RESET_INPUTS,\r\n  payload: flag,\r\n})\r\n\r\nexport const setResetWidgetInputs = (flag) => {\r\n  return (dispatch) => {\r\n    dispatch(setResetWidgetInputsActionCreator(flag))\r\n  }\r\n}\r\n\r\n// export const getCompanyToken = () => {\r\n//   return async (dispatch) => {\r\n//     let response = await authApi.getToken()\r\n//     if (response.status === 200) {\r\n//       dispatch(setToken(response.data))\r\n//       window.localStorage.setItem(\"Authorization\", response.data.jwtToken)\r\n//       return true\r\n//     } else {\r\n//       dispatch(setToken(null))\r\n//       window.localStorage.clear()\r\n//       return false\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport default resetWidgetInputsReducer\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Redux\\gate-meeting-reducer.js",["234"],"import { authApi } from \"../api/api\"\r\n\r\nconst SET_GATE_MEETING = \"/redux/companyTokenReducer/SET_GATE_MEETING\"\r\n\r\nlet initialState = {\r\n  isGateMeeting: false,\r\n}\r\n\r\nconst gateMeetingReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_GATE_MEETING:\r\n      return {\r\n        ...state,\r\n        isGateMeeting: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setGateMeetingActionCreator = (flag) => ({\r\n  type: SET_GATE_MEETING,\r\n  payload: flag,\r\n})\r\n\r\nexport const setGateMeetingRedux = (flag) => {\r\n  return (dispatch) => {\r\n    dispatch(setGateMeetingActionCreator(flag))\r\n  }\r\n}\r\n\r\n// export const getCompanyToken = () => {\r\n//   return async (dispatch) => {\r\n//     let response = await authApi.getToken()\r\n//     if (response.status === 200) {\r\n//       dispatch(setToken(response.data))\r\n//       window.localStorage.setItem(\"Authorization\", response.data.jwtToken)\r\n//       return true\r\n//     } else {\r\n//       dispatch(setToken(null))\r\n//       window.localStorage.clear()\r\n//       return false\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport default gateMeetingReducer\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Redux\\car-reducer.js",["235","236"],"import { fleetApi } from \"../api/api\"\r\nimport { setFormData } from \"./form-reducer\"\r\n\r\nconst SET_CARS_BY_TYPE = \"./car-reducer/SET_CARS_BY_TYPE\"\r\nconst SET_CARS_WITH_PRICE = \"./car-reducer/SET_CARS_WITH_PRICE\"\r\nconst TOGGLE_IS_FETCHING = \"./car-reducer/TOGGLE_IS_FETCHING\"\r\nexport const SET_ERROR = \"./car-reducer/SET_ERROR\"\r\n\r\nlet initialState = {\r\n  cars: [],\r\n  pageSize: 1,\r\n  isFetching: false,\r\n  error: \"\",\r\n}\r\n\r\nconst carsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CARS_WITH_PRICE:\r\n    case SET_CARS_BY_TYPE:\r\n      return {\r\n        ...state,\r\n        cars: [...action.cars],\r\n      }\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      }\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setCarsByType = (cars) => ({ type: SET_CARS_BY_TYPE, cars })\r\n\r\nexport const setCarsWithPrice = (cars) => ({ type: SET_CARS_WITH_PRICE, cars })\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n})\r\nexport const setError = (error) => ({\r\n  type: SET_ERROR,\r\n  payload: error,\r\n})\r\n\r\nexport const getCarsByType = (carType, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n\r\n    let data = await fleetApi.getCarsByType(carType, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setCarsByType(data))\r\n  }\r\n}\r\n\r\nexport const getCompanyCars = (dataForm) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    console.log(dataForm)\r\n    let data = await fleetApi.getCompanyCars(dataForm)\r\n    console.log(data)\r\n    if (data.status == 400) {\r\n      dispatch(setError(data.data[0]))\r\n    }\r\n\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setFormData(dataForm))\r\n    if (data.status == 200) {\r\n      dispatch(setCarsWithPrice(data.data))\r\n    }\r\n  }\r\n}\r\n\r\nexport default carsReducer\r\n\r\n// ByDistance = 1,\r\n// ByHour = 2,\r\n// AirportTransfer = 3\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Redux\\hourly-reducer.js",["237"],"import { authApi } from \"../api/api\"\r\n\r\nconst SET_HOURLY = \"/redux/companyTokenReducer/SET_HOURLY\"\r\nconst SET_SAFETY_SEAT_COUNT = \"/redux/companyTokenReducer/SET_SAFETY_SEAT_COUNT\"\r\nconst SET_BOOSTER_SEAT_COUNT =\r\n  \"/redux/companyTokenReducer/SET_SAFETY_SEAT_COUNT\"\r\n\r\nlet initialState = {\r\n  hourlyRedux: false,\r\n  safetySeat: false,\r\n  boosterSeat: false,\r\n}\r\n\r\nconst setHourlyReducerAndSeats = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_HOURLY:\r\n      return {\r\n        ...state,\r\n        hourlyRedux: action.payload,\r\n      }\r\n    case SET_SAFETY_SEAT_COUNT:\r\n      return {\r\n        ...state,\r\n        safetySeat: action.payload,\r\n      }\r\n    case SET_BOOSTER_SEAT_COUNT:\r\n      return {\r\n        ...state,\r\n        boosterSeat: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setHourlyActionCreator = (flag) => ({\r\n  type: SET_HOURLY,\r\n  payload: flag,\r\n})\r\nexport const setSafetySeatActionCreator = (flag) => ({\r\n  type: SET_SAFETY_SEAT_COUNT,\r\n  payload: flag,\r\n})\r\nexport const setBoosterSeatRActionCreator = (flag) => ({\r\n  type: SET_BOOSTER_SEAT_COUNT,\r\n  payload: flag,\r\n})\r\n\r\nexport const setHourlyRedux = (flag) => {\r\n  return (dispatch) => {\r\n    dispatch(setHourlyActionCreator(flag))\r\n  }\r\n}\r\nexport const setSafetySeatRedux = (flag) => {\r\n  return (dispatch) => {\r\n    dispatch(setHourlyActionCreator(flag))\r\n  }\r\n}\r\nexport const setBoosterSeatRedux = (flag) => {\r\n  return (dispatch) => {\r\n    dispatch(setHourlyActionCreator(flag))\r\n  }\r\n}\r\n\r\n// export const getCompanyToken = () => {\r\n//   return async (dispatch) => {\r\n//     let response = await authApi.getToken()\r\n//     if (response.status === 200) {\r\n//       dispatch(setToken(response.data))\r\n//       window.localStorage.setItem(\"Authorization\", response.data.jwtToken)\r\n//       return true\r\n//     } else {\r\n//       dispatch(setToken(null))\r\n//       window.localStorage.clear()\r\n//       return false\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport default setHourlyReducerAndSeats\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CompanyProfile\\CompanyProfile.js",["238","239","240","241","242","243","244","245","246","247"],"import React, { useContext, useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  getCompanyProfile,\r\n  setGotAddressError,\r\n} from \"../../Redux/company-profile-reducer\"\r\n// import Grid from \"@material-ui/core/Grid\"\r\n// import Typography from \"@material-ui/core/Typography\"\r\n// import { makeStyles } from '@material-ui/core/styles'\r\n// import { CloseWidgetIcon } from \"../../assets/icons\"\r\n// import Divider from \"@material-ui/core/Divider\"\r\n// import { isMobile } from \"react-device-detect\"\r\n// import { Preloader } from \"../Helpers/Preloader/Preloader\"\r\n// import AppBar from \"@material-ui/core/AppBar\"\r\nimport { useMediaQuery } from \"@material-ui/core\"\r\nimport {\r\n  setResetWidgetInputs,\r\n  setResetWidgetInputsActionCreator,\r\n} from \"../../Redux/reset-widget-inputs-reducer\"\r\nimport { setIsAirportPickupIncluded } from \"../../Redux/form-reducer\"\r\nimport { setGateMeetingRedux } from \"../../Redux/gate-meeting-reducer\"\r\nimport styles from \"./CompanyProfile.module.scss\"\r\nimport ThemeContext from \"../../context\"\r\nimport { CloseWidgetIcon } from \"../../assets/icons\"\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   companyContainer: {\r\n//     padding: theme.spacing(1.5),\r\n//     // position: 'fixed',\r\n//     background: \"black\",\r\n//   },\r\n//   companyLogo: {\r\n//     borderRadius: \"100px\",\r\n//     border: \"1px solid white\",\r\n//     width: \"55px\",\r\n//     height: \"55px\",\r\n//     marginLeft: \"5px\",\r\n//     userDrag: \"none\",\r\n//     userSelect: \"none\",\r\n//     mozUserSelect: \"none\",\r\n//     webkitUserDrag: \"none\",\r\n//     webkitUserSelect: \"none\",\r\n//     msUserSelect: \"none\",\r\n//   },\r\n//   companyName: {\r\n//     fontFamily: \"Roboto\",\r\n//     fontWeight: \"700\",\r\n//     color: \"white\",\r\n//     fontSize: \"17px\",\r\n//     [theme.breakpoints.up(768)]: {\r\n//       fontSize: \"20.5px\",\r\n//     },\r\n//     textTransform: \"none\",\r\n//   },\r\n//   closeIcon: {\r\n//     textAlign: \"center\",\r\n//     verticalAlign: \"sub\",\r\n//     width: \"28px\",\r\n//     height: \"22px\",\r\n//     paddingTop: \"7px\",\r\n//     \"&:hover\": {\r\n//       textAlign: \"center\",\r\n//       width: \"28px\",\r\n//       height: \"22px\",\r\n//       paddingTop: \"7px\",\r\n//       borderRadius: \"20px\",\r\n//       background: \"#4F4F4F\",\r\n//       marginRight: \"10px\",\r\n//       transition: \"0.2s\",\r\n//       \"& $path\": {\r\n//         fill: \"white\",\r\n//       },\r\n//     },\r\n//   },\r\n// }))\r\n\r\nconst CompanyProfile = ({\r\n  initializing,\r\n  profile,\r\n  getCompanyProfile,\r\n  handleCloseDialog,\r\n  setExpanded,\r\n  setActiveStep,\r\n  setBackgroundScrollStop,\r\n  resetInputs,\r\n  setResetWidgetInputs,\r\n  setGotAddressError,\r\n  setIsAirportPickupIncluded,\r\n  setGateMeetingRedux,\r\n}) => {\r\n  // const classes = useStyles()\r\n\r\n  const jwtToken = localStorage.getItem(\"Authorization\")\r\n  const smallDevices = useMediaQuery(\"(max-width:768px)\")\r\n\r\n  const resetWidgetInputs = (dispatch) => {\r\n    dispatch(setResetWidgetInputsActionCreator(true))\r\n  }\r\n  useEffect(() => {\r\n    if (jwtToken) {\r\n      getCompanyProfile()\r\n    }\r\n  }, [getCompanyProfile, jwtToken])\r\n  // useEffect(() => {\r\n  //   setResetWidgetInputs()\r\n  // }, [])\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiuses,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <>\r\n      {/* {isMobile ? <> <Grid container direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"center\"\r\n                className={classes.companyContainer}>\r\n                <Grid item>\r\n                    <img src={profile.companyLogoPath} className={classes.companyLogo} alt='companyLogo' />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                    <Typography className={classes.companyName}>{profile.companyName}</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <span style={{ cursor: 'pointer' }} onClick={() => { handleCloseDialog(false); setActiveStep(0) }}>\r\n                        <CloseWidgetIcon />\r\n                    </span>\r\n                </Grid>\r\n            </Grid>\r\n                <Divider orientation='horizontal' variant='fullWidth' />\r\n            </> : */}\r\n      {initializing ? (\r\n        <>\r\n          <div\r\n            // container\r\n            // direction=\"row\"\r\n            // justify=\"space-between\"\r\n            // alignItems=\"center\"\r\n            // wrap=\"nowrap\"\r\n            // className={classes.companyContainer}\r\n            className={styles.companyProfileWrapper}\r\n            style={{ background: ThemeProviderAppBackgroundColor }}\r\n          >\r\n            <div className={styles.companyProfileImageContainer}>\r\n              <img\r\n                src={profile.companyLogoPath}\r\n                // className={classes.companyLogo}\r\n                alt=\"companyLogo\"\r\n                className={styles.companyProfileImageSelf}\r\n              />\r\n            </div>\r\n            <div\r\n              // item\r\n              // xs={7}\r\n              // md={7}\r\n              // lg={8}\r\n              // xl={8}\r\n              className={styles.companyProfileNameContainer}\r\n            >\r\n              <span\r\n                className={styles.companyProfileNameSelf}\r\n                style={{ color: fontColor }}\r\n              >\r\n                {profile.companyName}\r\n              </span>\r\n            </div>\r\n            {/* {smallDevices && ( */}\r\n            <div className={styles.companyProfileCloseIconContainer}>\r\n              <div\r\n                // style={{ cursor: \"pointer\", marginRight: \"6px\" }}\r\n                className={styles.companyProfileCloseIconSelf}\r\n                onClick={() => {\r\n                  setExpanded()\r\n                  setActiveStep(0)\r\n                  setBackgroundScrollStop(false)\r\n                  setResetWidgetInputs(true)\r\n                  setGotAddressError(false)\r\n                  setIsAirportPickupIncluded(false)\r\n                  setGateMeetingRedux(false)\r\n                }}\r\n              >\r\n                {/* <span\r\n                  className={styles.companyProfileCloseIconSelfCustomCreation}\r\n                ></span> */}\r\n                <CloseWidgetIcon color={fontColor} />\r\n                {/* <CloseWidgetIcon /> */}\r\n              </div>\r\n            </div>\r\n            {/* )} */}\r\n          </div>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.companyProfile.profile,\r\n    resetInputs: state.resetWidgetInputs.resetInputs,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {}\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCompanyProfile,\r\n  setResetWidgetInputs,\r\n  setGotAddressError,\r\n  setIsAirportPickupIncluded,\r\n  setGateMeetingRedux,\r\n})(CompanyProfile)\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\CheckOut.js",[],"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\Helpers\\Preloader\\Preloader.js",["248","249","250","251","252","253","254","255"],"// import { CircularProgress } from \"@material-ui/core\"\r\nimport React, { useContext } from \"react\"\r\n// import { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\"\r\nimport styles from \"./Preloader.module.scss\"\r\nimport ThemeContext from \"../../../context\"\r\n\r\n// const theme = createMuiTheme({\r\n//   palette: {\r\n//     secondary: {\r\n//       main: \"#4F4F4F\",\r\n//     },\r\n//   },\r\n// })\r\n\r\nexport const Preloader = () => {\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiuses,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div\r\n      // style={{\r\n      //   margin: \"0 auto\",\r\n      //   width: \"100%\",\r\n      //   height: \"90%\",\r\n      //   display: \"flex\",\r\n      //   flexDirection: \"row \",\r\n      //   justifyContent: \"center\",\r\n      //   alignItems: \"center\",\r\n      //   backgroundColor: \"black\",\r\n      //   // marginTop: \"40px\",\r\n      // }}\r\n      class={styles.loaderContainer}\r\n      style={{ background: ThemeProviderAppBackgroundColor }}\r\n    >\r\n      <div class={styles.loader}></div>\r\n    </div>\r\n  )\r\n}\r\n\r\n//#region styled-components\r\n\r\n// const Container = styled.div`\r\n//     margin: 0 auto;\r\n//     width: 100%;\r\n//     /* @media (max-width: 500px) {\r\n//         width: 94%;\r\n//     } */\r\n// `;\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\api\\api.js",["256"],"import * as axios from \"axios\"\r\n\r\nconst jwtToken = localStorage.getItem(\"Authorization\")\r\n\r\nconsole.log(window)\r\n\r\nconst accessKeyFromWinow = window.accessKeyForBookinglane\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: `https://api.bookinglane.com/api/`,\r\n  headers: {\r\n    Authorization: \"Bearer \" + jwtToken,\r\n    \"App-Version\": \"1.2.18\",\r\n  },\r\n})\r\n\r\nexport const authApi = {\r\n  getToken() {\r\n    const company0Key = \"14862f6b-0e7a-47d0-810a-06a348fd9ec1\"\r\n    return axios\r\n      .post(\r\n        \"https://api.bookinglane.com/api/companywidget/company-widget-auth\",\r\n        {\r\n          accessKey: accessKeyFromWinow,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        return response\r\n      })\r\n  },\r\n\r\n  getCompanyProfile() {\r\n    const jwtToken = localStorage.getItem(\"Authorization\")\r\n\r\n    const headers = {\r\n      Authorization: \"Bearer \" + jwtToken,\r\n      \"App-Version\": \"1.2.18\",\r\n    }\r\n\r\n    return axiosInstance\r\n      .get(\"companywidget/company-widget-info\", { headers: headers })\r\n      .then((response) => {\r\n        return response\r\n      })\r\n      .catch(function (error) {\r\n        if (error.response) {\r\n          return error.response.status\r\n        }\r\n      })\r\n  },\r\n}\r\n\r\nexport const fleetApi = {\r\n  getCarsByType(carType, pageSize) {\r\n    return axiosInstance\r\n      .get(`car/company-cars?typeId=${carType}&page=${pageSize}`)\r\n      .then((response) => {\r\n        return response.data\r\n      })\r\n  },\r\n\r\n  getCompanyCars(dataForm) {\r\n    const jwtToken = localStorage.getItem(\"Authorization\")\r\n    return axiosInstance\r\n      .post(\r\n        \"car/companycars-withprice\",\r\n        { ...dataForm },\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + jwtToken,\r\n            \"App-Version\": \"1.2.18\",\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data)\r\n        return response\r\n      })\r\n      .catch(function (error) {\r\n        if (error.response) {\r\n          return error.response\r\n        }\r\n      })\r\n  },\r\n}\r\n\r\nexport const placesApi = {\r\n  getStates() {\r\n    return axiosInstance.get(`place/states`).then((response) => {\r\n      return response.data\r\n    })\r\n  },\r\n\r\n  getCities(id) {\r\n    return axiosInstance.get(`place/cities/${id}`).then((response) => {\r\n      return response.data\r\n    })\r\n  },\r\n\r\n  getAirlines() {\r\n    return axiosInstance.get(`place/airlines`).then((response) => {\r\n      return response.data\r\n    })\r\n  },\r\n}\r\n\r\nexport const formApi = {\r\n  createReservation(form) {\r\n    const jwtToken = localStorage.getItem(\"Authorization\")\r\n    return axiosInstance\r\n      .post(\r\n        `reservation/web`,\r\n        { ...form },\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + jwtToken,\r\n            \"App-Version\": \"1.2.18\",\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        return response\r\n      })\r\n      .catch(function (error) {\r\n        if (error.response) {\r\n          return error.response\r\n        }\r\n      })\r\n  },\r\n}\r\n\r\nexport const termsApi = {\r\n  getTermOfUse() {\r\n    return axiosInstance.get(`home/term-of-use`).then((response) => {\r\n      return response.data\r\n    })\r\n  },\r\n  getPrivacyPolicy() {\r\n    return axiosInstance.get(`home/privacy-policy`).then((response) => {\r\n      return response.data\r\n    })\r\n  },\r\n}\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\assets\\icons.js",["257","258","259"],"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\Preview\\PreviewContainerComponent.js",["260"],"import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { setNoteRedux, setOrderSum } from \"../../../../Redux/form-reducer\"\r\nimport PreviewUIComponent from \"./PreviewUIComponent\"\r\n\r\nconst PreviewContainerComponent = ({\r\n  carId,\r\n  cars,\r\n  formData,\r\n  next,\r\n  back,\r\n  setNoteRedux,\r\n  setOrderSum,\r\n  hourlyAndSeatsRedux,\r\n  gateMeeting,\r\n}) => {\r\n  const selectedCar = cars.find((car) => car.id === carId)\r\n\r\n  const [note, setNote] = React.useState(\"\")\r\n  const [distance, setDistance] = React.useState(0)\r\n\r\n  const sendNote = (note) => {\r\n    setNoteRedux(note)\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setNote(event.target.value)\r\n  }\r\n  const [carCard, setCarCard] = React.useState(0)\r\n  const [carModal, setCarModal] = React.useState(null)\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const [show, setShow] = React.useState(false)\r\n\r\n  const handleClickOpen = (id) => {\r\n    setCarModal(true)\r\n    setShow(true)\r\n  }\r\n\r\n  const handleClickClose = () => {\r\n    setCarModal(null)\r\n    setShow(false)\r\n  }\r\n\r\n  const handleClick = (id) => {\r\n    setCarCard(id)\r\n  }\r\n\r\n  let result = null\r\n  if (carModal) {\r\n    result = cars.find((cars) => carModal === cars.id)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setNote(formData.orderNotes)\r\n  }, [formData.orderNotes])\r\n\r\n  const round = (n, dp) => {\r\n    const h = +\"1\".padEnd(dp + 1, \"0\") // 10 or 100 or 1000 or etc\r\n    return Math.round(n * h) / h\r\n  }\r\n\r\n  const showCarAmount = () => {\r\n    if (selectedCar.boosterSeatPrice || selectedCar.safetySeatPrice) {\r\n      return `$${round(\r\n        selectedCar.price -\r\n          selectedCar.boosterSeatPrice -\r\n          selectedCar.safetySeatPrice,\r\n        2\r\n      )}`\r\n    } else {\r\n      return `$${round(selectedCar.price, 2)} `\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PreviewUIComponent\r\n      carId={carId}\r\n      cars={cars}\r\n      formData={formData}\r\n      next={next}\r\n      back={back}\r\n      setNoteRedux={setNoteRedux}\r\n      setOrderSum={setOrderSum}\r\n      hourlyAndSeatsRedux={hourlyAndSeatsRedux}\r\n      gateMeeting={gateMeeting}\r\n      selectedCar={selectedCar}\r\n      note={note}\r\n      setNote={setNote}\r\n      distance={distance}\r\n      setDistance={setDistance}\r\n      sendNote={sendNote}\r\n      handleChange={handleChange}\r\n      carCard={carCard}\r\n      setCarCard={setCarCard}\r\n      carModal={carModal}\r\n      setCarModal={setCarModal}\r\n      open={open}\r\n      setOpen={setOpen}\r\n      handleClickOpen={handleClickOpen}\r\n      handleClickClose={handleClickClose}\r\n      handleClick={handleClick}\r\n      round={round}\r\n      showCarAmount={showCarAmount}\r\n      show={show}\r\n      setShow={setShow}\r\n    />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cars: state.cars.cars,\r\n    formData: state.formData,\r\n    carId: state.formData.carInfo.id,\r\n    hourlyAndSeatsRedux: state.hourlyAndSeatsRedux.hourlyRedux,\r\n    gateMeeting: state.gateMeeting.isGateMeeting,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  setNoteRedux,\r\n  setOrderSum,\r\n})(PreviewContainerComponent)\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\Confirmation\\Confirmation.js",["261","262"],"import React, { useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Preloader } from \"../../Helpers/Preloader/Preloader\"\r\n// import Grid from \"@material-ui/core/Grid\"\r\nimport { Success } from \"../../../assets/icons\"\r\n// import Typography from \"@material-ui/core/Typography\"\r\n// import Button from \"@material-ui/core/Button\"\r\nimport ReservationFailed from \"../ReservationFailed/ReservationFailed\"\r\nimport {\r\n  createReservation,\r\n  logOut,\r\n  setIsAirportPickupIncluded,\r\n} from \"../../../Redux/form-reducer\"\r\nimport { setResetWidgetInputs } from \"../../../Redux/reset-widget-inputs-reducer\"\r\nimport { setGotAddressError } from \"../../../Redux/company-profile-reducer\"\r\nimport styles from \"./Confirmation.module.scss\"\r\n\r\n// setResetWidgetInputs,\r\n// setGotAddressError,\r\n// setIsAirportPickupIncluded\r\n\r\nconst Confirmation = ({\r\n  createReservation,\r\n  companyName,\r\n  email,\r\n  setExpanded,\r\n  isSuccess,\r\n  isFetching,\r\n  setActiveStep,\r\n  formSummary,\r\n  logOut,\r\n  failMessage,\r\n  setBackgroundScrollStop,\r\n  setResetWidgetInputs,\r\n  setGotAddressError,\r\n  setIsAirportPickupIncluded,\r\n}) => {\r\n  useEffect(() => {\r\n    createReservation(formSummary)\r\n  }, [])\r\n  const textColor = \"white\"\r\n\r\n  return (\r\n    <>\r\n      {isFetching ? (\r\n        <Preloader />\r\n      ) : isSuccess ? (\r\n        <div\r\n          // container\r\n          // direction=\"column\"\r\n          // spacing={2}\r\n          // justify=\"center\"\r\n          // alignItems=\"center\"\r\n          // style={{ height: \"80vh\", backgroundColor: \"black\" }}\r\n          className={styles.confirmationWrapper}\r\n        >\r\n          {/* <div></div> */}\r\n          {/* <Grid item>\r\n                            <Typography variant='body2'>Success</Typography>\r\n                        </Grid> */}\r\n          <div className={styles.confirmationTextContainer}>\r\n            <Success />\r\n            <p\r\n              // variant=\"body2\"\r\n              // style={{ color: textColor }}\r\n              // align=\"center\"\r\n              className={styles.confirmationTextSelf1}\r\n            >\r\n              Your reservation was successfully submitted. A confirmation email\r\n              was sent to {email && email}.\r\n            </p>\r\n            <p\r\n              // variant=\"body2\"\r\n              // style={{ color: textColor }}\r\n              className={styles.confirmationTextSelf2}\r\n            >\r\n              Thanks, {companyName && companyName}\r\n            </p>\r\n          </div>\r\n          <div className={styles.confirmationButtonContainer}>\r\n            <button\r\n              onClick={() => {\r\n                setExpanded(false)\r\n                setActiveStep(0)\r\n\r\n                setBackgroundScrollStop(false)\r\n                setResetWidgetInputs(true)\r\n                setGotAddressError(false)\r\n                setIsAirportPickupIncluded(false)\r\n                // logOut()\r\n              }}\r\n              className={styles.confirmationButtonSelf}\r\n            >\r\n              Done\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <ReservationFailed\r\n          setActiveStep={setActiveStep}\r\n          // failMessage={failMessage}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isSuccess: state.companyProfile.isSuccess,\r\n    failMessage: state.companyProfile.failMessage,\r\n    isFetching: state.cars.isFetching,\r\n    formSummary: state.formData,\r\n    email: state.formData.client.email,\r\n    companyName: state.companyProfile.profile.companyName,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  createReservation,\r\n  logOut,\r\n  setResetWidgetInputs,\r\n  setGotAddressError,\r\n  setIsAirportPickupIncluded,\r\n})(Confirmation)\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\Payment\\PaymentContainerComponent.js",["263","264","265","266","267"],"import React, { useState, useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { FormProvider, useForm } from \"react-hook-form\"\r\n// import {\r\n//   CustomFormInput,\r\n//   CustomFormInputForPayment,\r\n//   CustomMaskInput,\r\n// } from \"../CustomFormInput/CustomFormInput\"\r\n// import { makeStyles } from \"@material-ui/core/styles\"\r\n// import { BackArrowIcon } from \"../../../../assets/icons\"\r\nimport { yupResolver } from \"@hookform/resolvers/yup\"\r\nimport * as yup from \"yup\"\r\n// import Grid from \"@material-ui/core/Grid\"\r\n// import Typography from \"@material-ui/core/Typography\"\r\n// import Autocomplete from \"@material-ui/lab/Autocomplete\"\r\n// import Button from \"@material-ui/core/Button\"\r\n// import Checkbox from \"@material-ui/core/Checkbox\"\r\n// import Switch from \"@material-ui/core/Switch\"\r\n// import { Link } from \"@material-ui/core\"\r\nimport { placesApi } from \"../../../../api/api\"\r\n// import TextField from \"@material-ui/core/TextField\"\r\nimport {\r\n  // createReservation,\r\n  setPaymentForm,\r\n} from \"../../../../Redux/form-reducer\"\r\n// import PrivacyPolicy from \"../../../TermsOfUse/PrivacyPolicy/PrivacyPolicy\"\r\n// // import TermsOfUse from \"../../../TermsOfUse/TermOfUse/TermOfUse\"\r\n// import { withStyles } from \"@material-ui/styles\"\r\n// import { Number, Cvc, Expiration } from \"react-credit-card-primitives\"\r\n\r\n// import Cleave from \"cleave.js/react\"\r\nimport \"./PaymentStyles.css\"\r\n// import { AntSwitch } from \"../AdressForm/AdressFormStyles\"\r\nimport PaymentUIComponent from \"./PaymentUIComponent\"\r\n\r\nconst PaymentContainerComponent = ({\r\n  next,\r\n  back,\r\n  total,\r\n  formSummary,\r\n  setPaymentForm,\r\n}) => {\r\n  const SignupSchema = yup.object().shape({\r\n    // greetClientInfo: yup.object().shape({\r\n    //     firstName: yup.string().required('Required'),\r\n    //     phoneNumber: yup.number('Not a number').required('Required'),\r\n    //     lastName: yup.string().required('Required'),\r\n    //     email: yup.string().email('invalid email').required('Required'),\r\n    // }),\r\n    client: yup.object().shape({\r\n      firstName: yup.string().required(\"Required\"),\r\n      lastName: yup.string().required(\"Required\"),\r\n      address: yup.string().required(\"Required\"),\r\n      zip: yup.number().required(\"Required\").typeError(\"Not a number\"),\r\n      email: yup.string().email(\"invalid email\").required(\"Required\"),\r\n      phoneNumber: yup.number().required(\"Required\").typeError(\"Not a number\"),\r\n    }),\r\n    paymentInfo: yup.object().shape({\r\n      // cardNumber: yup.string().required(\"Required\"),\r\n      month: yup.string().required(\"Required\"),\r\n      cvc: yup.number().required(\"Required\").typeError(\"Not a number\"),\r\n    }),\r\n  })\r\n  const [states, setStates] = useState([])\r\n  const [cities, setCities] = useState([])\r\n  const [statesId, setStatesId] = useState(0)\r\n  const [citiesId, setCitiesId] = useState(0)\r\n  const [checked, setChecked] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true\r\n    const fetchStates = async () => {\r\n      const data = await placesApi.getStates()\r\n      if (componentMounted) {\r\n        setStates(data)\r\n      }\r\n    }\r\n    fetchStates()\r\n    return () => {\r\n      componentMounted = false\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true\r\n    const fetchCities = async (id) => {\r\n      const data = await placesApi.getCities(id)\r\n      if (componentMounted) {\r\n        setCities(data)\r\n      }\r\n    }\r\n    statesId ? fetchCities(statesId) : setCities([])\r\n    return () => {\r\n      componentMounted = false\r\n    }\r\n  }, [statesId])\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    ...methods\r\n  } = useForm({\r\n    resolver: yupResolver(SignupSchema),\r\n  })\r\n\r\n  const [riderDetails, setRiderDetails] = React.useState(true)\r\n\r\n  const inputStyle = {\r\n    WebkitBoxShadow: \"0 0 0 1000px transparent inset\",\r\n    height: \"0px\",\r\n    // width: \"100%\",\r\n  }\r\n\r\n  const [statesIdError, setStatesIdError] = React.useState(null)\r\n  const [citiesIdError, setCitiesIdError] = React.useState(null)\r\n  const [cardForPaymentSubmit, setCardForPaymentSubmit] = useState(null)\r\n  const [cardForPaymentSubmitError, setCardForPaymentSubmitError] =\r\n    useState(null)\r\n  const [restrictAmex, setRestrictAmex] = React.useState(false)\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data)\r\n    // event.preventDefault()\r\n\r\n    const date = data.paymentInfo.month.split(\"/\")\r\n    if ((statesId, citiesId, cardForPaymentSubmit)) {\r\n      setPaymentForm(\r\n        { ...data },\r\n        citiesId,\r\n        statesId,\r\n        date,\r\n        cardForPaymentSubmit\r\n      )\r\n      next()\r\n    } else {\r\n      if (!statesId) {\r\n        setStatesIdError(true)\r\n      } else {\r\n        setStatesIdError(false)\r\n      }\r\n      if (!citiesId) {\r\n        setCitiesIdError(true)\r\n      } else {\r\n        setCitiesIdError(false)\r\n      }\r\n      if (!cardForPaymentSubmitError) {\r\n        setCardForPaymentSubmitError(true)\r\n      } else {\r\n        setCardForPaymentSubmitError(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  // const toggleAmex = () => setRestrictAmex(!restrictAmex)\r\n\r\n  const [cardType, setCardType] = useState(\"\")\r\n\r\n  const [creditCardNum, setCreditCardNum] = useState(\"#### #### #### ####\")\r\n\r\n  const handleNum = (e) => {\r\n    setCreditCardNum(e.target.rawValue)\r\n    setCardForPaymentSubmit(e.target.value)\r\n    console.log(e.target.value)\r\n    // console.log(e.target.value);\r\n  }\r\n\r\n  const handleType = (type) => {\r\n    setCardType(type)\r\n    console.log(type)\r\n  }\r\n\r\n  const [stateName, setStateName] = useState(\"\")\r\n  const [cityName, setCityName] = useState(\"\")\r\n\r\n  const extractStateId = (name) => {\r\n    setStateName(name)\r\n    const res = states.find((element, index, array) => {\r\n      return element.name == name\r\n    })\r\n    res ? setStatesId(res.id) : setStatesId(null)\r\n    console.log(res)\r\n  }\r\n  const extractCityId = (name) => {\r\n    setCityName(name)\r\n    const res = cities.find((element, index, array) => {\r\n      return element.name == name\r\n    })\r\n    res ? setCitiesId(res.id) : setCitiesId(null)\r\n    console.log(res)\r\n  }\r\n\r\n  return (\r\n    <PaymentUIComponent\r\n      next={next}\r\n      back={back}\r\n      total={total}\r\n      formSummary={formSummary}\r\n      setPaymentForm={setPaymentForm}\r\n      SignupSchema={SignupSchema}\r\n      states={states}\r\n      setStates={setStates}\r\n      cities={cities}\r\n      setCities={setCities}\r\n      statesId={statesId}\r\n      setStatesId={setStatesId}\r\n      citiesId={citiesId}\r\n      setCitiesId={setCitiesId}\r\n      checked={checked}\r\n      setChecked={setChecked}\r\n      register={register}\r\n      handleSubmit={handleSubmit}\r\n      errors={errors}\r\n      methods={methods}\r\n      riderDetails={riderDetails}\r\n      setRiderDetails={setRiderDetails}\r\n      statesIdError={statesIdError}\r\n      setStatesIdError={setStatesIdError}\r\n      citiesIdError={citiesIdError}\r\n      setCitiesIdError={setCitiesIdError}\r\n      cardForPaymentSubmit={cardForPaymentSubmit}\r\n      setCardForPaymentSubmit={setCardForPaymentSubmit}\r\n      cardForPaymentSubmitError={cardForPaymentSubmitError}\r\n      setCardForPaymentSubmitError={setCardForPaymentSubmitError}\r\n      restrictAmex={restrictAmex}\r\n      setRestrictAmex={setRestrictAmex}\r\n      onSubmit={onSubmit}\r\n      cardType={cardType}\r\n      setCardType={setCardType}\r\n      creditCardNum={creditCardNum}\r\n      setCreditCardNum={setCreditCardNum}\r\n      handleNum={handleNum}\r\n      handleType={handleType}\r\n      extractStateId={extractStateId}\r\n      extractCityId={extractCityId}\r\n      stateName={stateName}\r\n      cityName={cityName}\r\n    />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    total: state.formData.orderSum,\r\n    formSummary: state.formData,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setPaymentForm })(\r\n  PaymentContainerComponent\r\n)\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\FleetForm\\FleetFormContainerComponent.js",[],"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\AdressFormContainerComponent.js",["268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { placesApi } from \"../../../../api/api\"\r\nimport { getCarsByType, getCompanyCars } from \"../../../../Redux/car-reducer\"\r\nimport Carousel, { consts } from \"react-elastic-carousel\"\r\n// import {\r\n//   LeftArrowForAdressForm,\r\n//   RightArrowForAdressForm,\r\n// } from \"../../../../assets/icons\"\r\n// import Button from \"@material-ui/core/Button\"\r\nimport { useStyles } from \"./AdressFormStyles\"\r\n// import { useMediaQuery } from \"@material-ui/core\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  setBoosterSeatCount,\r\n  setDateForDefaultValue,\r\n  setFormData,\r\n  setPassengersQuantityForBackStep,\r\n  setSafetySeatCount,\r\n  setTimeForDefaultValue,\r\n  setTimeForDefaultValueAlignment,\r\n  setTimeForDefaultValueAMPM,\r\n} from \"../../../../Redux/form-reducer\"\r\n\r\nimport { setHourlyRedux } from \"../../../../Redux/hourly-reducer\"\r\nimport { setGateMeetingRedux } from \"../../../../Redux/gate-meeting-reducer\"\r\n// import { AdressFormHelpers } from \"./adressFormHelpers\"\r\nimport AdressFormUIComponent from \"./AdressFormUIComponent\"\r\nimport styles from \"./AdressFormStyles/AdressForm.module.scss\"\r\nimport * as yup from \"yup\"\r\nimport ThemeContext from \"../../../../context\"\r\nimport styled from \"styled-components\"\r\n\r\nconst AdressFormContainerComponent = ({\r\n  next,\r\n  carTypes,\r\n  pageSize,\r\n  getCompanyCars,\r\n  setFormData,\r\n  formData,\r\n  setHourlyRedux,\r\n  setGateMeetingRedux,\r\n  gateMeeting,\r\n  hourlyAndSeatsRedux,\r\n  setSafetySeatCount,\r\n  setBoosterSeatCount,\r\n  backgroundScrollStopForTimePicker,\r\n  setBackgroundScrollStopForTimePicker,\r\n  resetInputs,\r\n  setDateForDefaultValue,\r\n  setTimeForDefaultValue,\r\n  setTimeForDefaultValueAMPM,\r\n  setTimeForDefaultValueAlignment,\r\n  setPassengersQuantityForBackStep,\r\n  isBoosterSeatExistOnBackend,\r\n  isSafetySeatExistOnBackend,\r\n}) => {\r\n  // const classes = useStyles()\r\n\r\n  const [destinations, setDestinations] = useState([\r\n    {\r\n      rideCheckPoint: \"\",\r\n      latitude: 0,\r\n      longitude: 0,\r\n      placeType: 0,\r\n      placeId: \"\",\r\n    },\r\n    {\r\n      rideCheckPoint: \"\",\r\n      latitude: 0,\r\n      longitude: 0,\r\n      placeType: 0,\r\n      placeId: \"\",\r\n    },\r\n  ])\r\n\r\n  const [carSelectionID, setCarSelectionID] = useState(0)\r\n  const [bookingType, setBookingType] = useState(1)\r\n  const [passengers, setPassengers] = useState(0)\r\n  const [hoursAddressForm, setHoursAddressForm] = useState(1)\r\n  const [disableHourly, setDisableHourly] = useState(false)\r\n  const [hourly, setHourly] = useState(false)\r\n\r\n  const [isGateMeeting, setIsGateMeeting] = useState(false)\r\n  const [isAirline, setIsAirline] = useState(false)\r\n  const [airlineId, setAirlineId] = useState(0)\r\n  const [airlines, setAirlines] = useState([])\r\n  const [airlineName, setAirlineNAme] = useState([])\r\n  const [timePickerOpened, setTimePickerOpened] = useState(false)\r\n\r\n  const [selectedDate, handleDateChange] = useState(null)\r\n  const [selectedTime, handleTimeChange] = useState(null)\r\n\r\n  const [redBorderOnSubmit, setRedBorderOnSubmit] = useState(false)\r\n  const [redBorderOnSubmit2, setRedBorderOnSubmit2] = useState(false)\r\n  const [redBorderOnSubmitForDate, setRedBorderOnSubmitForDate] =\r\n    useState(false)\r\n  const [redBorderOnSubmitForTime, setRedBorderOnSubmitForTime] =\r\n    useState(false)\r\n  const [redBorderOnSubmitForTime2, setRedBorderOnSubmitForTime2] =\r\n    useState(false)\r\n  const [redBorderOnSubmitForTime3, setRedBorderOnSubmitForTime3] =\r\n    useState(false)\r\n  const [redBorderOnSubmitForTime4, setRedBorderOnSubmitForTime4] =\r\n    useState(false)\r\n  const [redBorderOnSubmitForTime5, setRedBorderOnSubmitForTime5] =\r\n    useState(false)\r\n  const [redBorderOnSubmitForTime6, setRedBorderOnSubmitForTime6] =\r\n    useState(false)\r\n  const [redBorderOnSubmitForCarType, setRedBorderOnSubmitForCarType] =\r\n    useState(false)\r\n  const [redBorderOnSubmitForPassengers, setRedBorderOnSubmitForPassengers] =\r\n    useState(false)\r\n  const [redBorderOnAirlines, setRedBorderOnAirlines] = useState(false)\r\n  const [\r\n    isAirportPickupIncludedLocalState,\r\n    setIsAirportPickupIncludedLocalState,\r\n  ] = useState(false)\r\n\r\n  const [time, setTime] = useState(\"\")\r\n  const startsWithTwo = time[0] === \"2\"\r\n\r\n  const [timeMask, setTimeMask] = useState(false)\r\n\r\n  const [date, setDate] = React.useState(null)\r\n\r\n  const [show, setShow] = useState(false)\r\n\r\n  // const { errors, register, handleSubmit, setValue, ...methods } = useForm({\r\n  //   // mode: \"onBlur\",\r\n  //   // resolver: yupResolver(schema),\r\n  // })\r\n\r\n  const extractAirlineId = (name) => {\r\n    const res = airlines.find((element, index, array) => {\r\n      return element.name == name\r\n    })\r\n    res ? setAirlineId(res.id) : setAirlineId(null)\r\n    setAirlineNAme(name)\r\n    console.log(res)\r\n  }\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n    ...methods\r\n  } = useForm({})\r\n\r\n  const schema = yup.object().shape({\r\n    destinations: yup.object().shape({\r\n      rideCheckPoint: yup.object().required(),\r\n    }),\r\n    // carsValidation: yup.number().required(),\r\n  })\r\n\r\n  const handleClick = (id) => {\r\n    setCarSelectionID(id)\r\n  }\r\n\r\n  const handleDateChangeFunc = (time) => {\r\n    handleDateChange(time)\r\n  }\r\n\r\n  var firstTimeHalf = time\r\n    .substr(0, time.indexOf(\":\"))\r\n    .match(/\\d+/)\r\n    ?.join()\r\n    ?.split(\"\")\r\n  var secondTimeHalf = time\r\n    .substr(time.indexOf(\":\"))\r\n    .match(/\\d+/)\r\n    ?.join()\r\n    ?.split(\"\")\r\n  var secondTimeHalf2 = time.substr(time.indexOf(\":\")).match(/\\d+/)\r\n\r\n  var firstTimeHalfRedux = formData?.timeForDefaultValue\r\n    ?.substr(0, formData?.timeForDefaultValue?.indexOf(\":\"))\r\n    ?.match(/\\d+/)\r\n    ?.join()\r\n    ?.split(\"\")\r\n  var secondTimeHalfRedux = formData?.timeForDefaultValue\r\n    ?.substr(formData?.timeForDefaultValue?.indexOf(\":\"))\r\n    ?.match(/\\d+/)\r\n    ?.join()\r\n    ?.split(\"\")\r\n  var secondTimeHalfRedux2 = formData?.timeForDefaultValue\r\n    ?.substr(formData?.timeForDefaultValue?.indexOf(\":\"))\r\n    ?.match(/\\d+/)\r\n\r\n  const onSubmit2 = (data) => {\r\n    console.log(data)\r\n\r\n    if (\r\n      destinations[0].rideCheckPoint &&\r\n      destinations[1].rideCheckPoint &&\r\n      (date || formData.dateForDefaultValue) &&\r\n      (time || formData.timeForDefaultValue) &&\r\n      (firstTimeHalf?.[0] >= \"0\" || formData.timeForDefaultValue) &&\r\n      (firstTimeHalf?.[1] >= \"0\" || formData.timeForDefaultValue) &&\r\n      (secondTimeHalf?.[0] >= \"0\" || formData.timeForDefaultValue) &&\r\n      (secondTimeHalf?.[1] >= \"0\" || formData.timeForDefaultValue) &&\r\n      // false &&\r\n      carSelectionID &&\r\n      (passengers || formData.passengersQuantityForBackStep) &&\r\n      (AMPM || formData?.timeForDefaultValueAMPM?.ampm)\r\n    ) {\r\n      if (isAirline) {\r\n        if (!airlineId) {\r\n          setRedBorderOnAirlines(true)\r\n        } else {\r\n          setRedBorderOnAirlines(false)\r\n          return true\r\n        }\r\n      } else {\r\n        return true\r\n      }\r\n    } else {\r\n      if (!destinations[0].rideCheckPoint) {\r\n        setRedBorderOnSubmit(true)\r\n      } else {\r\n        setRedBorderOnSubmit(false)\r\n      }\r\n      if (!destinations[1].rideCheckPoint) {\r\n        setRedBorderOnSubmit2(true)\r\n      } else {\r\n        setRedBorderOnSubmit2(false)\r\n      }\r\n      if (\r\n        !new Date(data.orderStartDate).toLocaleDateString(\"en-GB\") ||\r\n        !formData.dateForDefaultValue\r\n      ) {\r\n        setRedBorderOnSubmitForDate(true)\r\n      } else {\r\n        setRedBorderOnSubmitForDate(false)\r\n      }\r\n      // if (!time) {\r\n      //   setRedBorderOnSubmitForTime(true)\r\n      // } else {\r\n      //   setRedBorderOnSubmitForTime(false)\r\n      // }\r\n      // if (\r\n      //   (firstTimeHalf?.[0] <= \"0\" && firstTimeHalfRedux?.[0] <= \"0\") ||\r\n      //   (firstTimeHalf?.[0] <= \"\" && firstTimeHalfRedux?.[0] <= \"0\") ||\r\n      //   (firstTimeHalf?.[0] == undefined &&\r\n      //     firstTimeHalfRedux?.[0] <= undefined)\r\n      // ) {\r\n      //   setRedBorderOnSubmitForTime2(true)\r\n      // } else {\r\n      //   setRedBorderOnSubmitForTime2(false)\r\n      // }\r\n      if (\r\n        (firstTimeHalf?.[1] <= \"0\" && firstTimeHalfRedux?.[1] <= \"0\") ||\r\n        (firstTimeHalf?.[1] <= \"\" && firstTimeHalfRedux?.[1] <= \"\") ||\r\n        (firstTimeHalf?.[1] == undefined &&\r\n          firstTimeHalfRedux?.[1] <= undefined)\r\n      ) {\r\n        setRedBorderOnSubmitForTime6(true)\r\n      } else {\r\n        setRedBorderOnSubmitForTime6(false)\r\n      }\r\n      if (\r\n        (secondTimeHalf2 <= \"0\" && secondTimeHalfRedux2 <= \"0\") ||\r\n        (secondTimeHalf2 <= \"\" && secondTimeHalfRedux2 <= \"\")\r\n      ) {\r\n        setRedBorderOnSubmitForTime3(true)\r\n      } else {\r\n        setRedBorderOnSubmitForTime3(false)\r\n      }\r\n\r\n      if (\r\n        (secondTimeHalf?.[0] <= \"0\" && secondTimeHalfRedux?.[0] <= \"0\") ||\r\n        (secondTimeHalf?.[0] <= \"\" && secondTimeHalfRedux?.[0] <= \"\")\r\n      ) {\r\n        setRedBorderOnSubmitForTime4(true)\r\n      } else {\r\n        setRedBorderOnSubmitForTime4(false)\r\n      }\r\n      if (\r\n        (secondTimeHalf?.[1] <= \"0\" && secondTimeHalfRedux?.[1] <= \"0\") ||\r\n        (secondTimeHalf?.[1] <= \"\" && secondTimeHalfRedux?.[1] <= \"\") ||\r\n        (secondTimeHalf?.[1] == undefined &&\r\n          secondTimeHalfRedux?.[1] <= undefined)\r\n      ) {\r\n        setRedBorderOnSubmitForTime5(true)\r\n      } else {\r\n        setRedBorderOnSubmitForTime5(false)\r\n      }\r\n      if (!AMPM && !formData?.timeForDefaultValueAMPM?.ampm) {\r\n        setRedBorderOnSubmitForTime(true)\r\n      } else {\r\n        setRedBorderOnSubmitForTime(false)\r\n      }\r\n      if (carSelectionID) {\r\n        setRedBorderOnSubmitForCarType(false)\r\n      } else {\r\n        setRedBorderOnSubmitForCarType(true)\r\n      }\r\n      if (formData.passengersQuantityForBackStep) {\r\n        setRedBorderOnSubmitForPassengers(false)\r\n      } else {\r\n        setRedBorderOnSubmitForPassengers(true)\r\n      }\r\n    }\r\n  }\r\n\r\n  // onSubmit2 = onSubmit2\r\n\r\n  const [openTimePicker, setOpenTimePicker] = useState(false)\r\n  let firstAirline =\r\n    destinations[0]?.rideCheckPoint.match(/(^|\\W)Airport($|\\W)/)\r\n  // if (destinations[0]?.rideCheckPoint.match(/(^|\\W)Airport($|\\W)/)) {\r\n  //   console.log(\"true\")\r\n  // } else {\r\n  //   console.log(\"false\")\r\n  // }\r\n\r\n  const fetchAirlines = async () => {\r\n    const data = await placesApi.getAirlines()\r\n    const res = data.map((airline) => {\r\n      return {\r\n        id: `${airline.id}`,\r\n        name: `${airline.code} ` + `${airline.name}`,\r\n      }\r\n    })\r\n    setAirlines(res)\r\n  }\r\n\r\n  const [flightNumber, setFlightNumber] = useState(null)\r\n\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiuses,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    innerTextOnHover,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n  } = useContext(ThemeContext)\r\n  const [fontColorState, setFontColorState] = useState(fontColor)\r\n  const myArrow = ({ type, onClick, isEdge }) => {\r\n    const pointer = type === consts.PREV ? \"<\" : \">\"\r\n    // console.log(isEdge)\r\n\r\n    return (\r\n      <Button\r\n        onClick={() => {\r\n          onClick()\r\n          console.log(type)\r\n        }}\r\n        disabled={isEdge}\r\n        // className={\r\n        //   isEdge ? styles.carouselButtonsDisabled : styles.carouselButtonsActive\r\n        // }\r\n        isEdge={isEdge}\r\n        // onMouseEnter={() => {\r\n        //   if (isEdge == false && type === consts.PREV) {\r\n        //     setFontColorState(innerTextOnHover)\r\n        //   }\r\n        // }}\r\n        // onMouseLeave={() => {\r\n        //   setFontColorState(fontColor)\r\n        // }}\r\n        backAndNextButtonsColor={backAndNextButtonsColor}\r\n        borderColorForInnerElements={borderColorForInnerElements}\r\n        style={{\r\n          color: fontColorState,\r\n        }}\r\n        //  styles.carouselButtonsActive\r\n      >\r\n        {pointer}\r\n      </Button>\r\n    )\r\n  }\r\n  const [safetySeat, setSafetySeat] = useState(false)\r\n\r\n  const [boosterSeat, setBoosterSeat] = useState(0)\r\n  const [childSafetySeat, setChildSafetySeat] = useState(0)\r\n\r\n  const [alignment, setAlignment] = React.useState(\"web\")\r\n  const [AMPM, setAMPM] = React.useState(\"\")\r\n\r\n  const handleChangeAMPM = (event, newAlignment) => {\r\n    if (newAlignment !== null) {\r\n      setAlignment(newAlignment)\r\n      setTimeForDefaultValueAMPM(event.target.textContent)\r\n    }\r\n    setAMPM(event.target.textContent)\r\n\r\n    setTimeForDefaultValueAMPM(event.target.textContent)\r\n    console.log(event.target.textContent)\r\n  }\r\n\r\n  const [triggerToTimePicker, setTriggerToTimePicker] = useState(false)\r\n  var eventCount = 0\r\n  const inputStyle = {\r\n    WebkitBoxShadow: \"0 0 0 1000px #282828 inset\",\r\n    height: \"0px\",\r\n  }\r\n  // console.log(hourlyRedux)\r\n\r\n  const mask = [\r\n    /[0-2]/,\r\n    startsWithTwo ? /[0-3]/ : /[0-9]/,\r\n    \":\",\r\n    /[0-5]/,\r\n    /[0-9]/,\r\n  ]\r\n\r\n  let formatChars = {\r\n    7: \"[0-1]\",\r\n    8: \"[0-9]\",\r\n    9: \"[0-5]\",\r\n    1: !timeMask ? \"[0-9]\" : \"[0-2]\",\r\n    a: \"[A-Za-z]\",\r\n    \"*\": \"[A-Za-z0-9]\",\r\n  }\r\n  let formatChars2 = {\r\n    7: \"[0-1]\",\r\n    8: \"[0-2]\",\r\n    9: \"[0-5]\",\r\n    1: \"[0-2]\",\r\n    a: \"[A-Za-z]\",\r\n    \"*\": \"[A-Za-z0-9]\",\r\n  }\r\n\r\n  const handleInput = (event) => {\r\n    if (event.target.value == \"0_:__\") {\r\n      setTimeMask(false)\r\n    }\r\n    if (event.target.value == \"1_:__\") {\r\n      setTimeMask(true)\r\n    }\r\n    console.log(\"This is: \" + setTimeForDefaultValue)\r\n    setTimeForDefaultValue(event.target.value)\r\n    setTime(event.target.value)\r\n    // const emir = \"00:10\"\r\n    // console.log(event.target.value)\r\n    // console.log(time)\r\n    // console.log(regexp.test(emir))\r\n    console.log(\r\n      event.target.value.match(/\\d+/),\r\n      event.target.value.substr(event.target.value.indexOf(\":\")).match(/\\d+/)\r\n    )\r\n  }\r\n\r\n  const [luggage, setLuggage] = useState(0)\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data)\r\n    // console.log(data.orderStartDate, data.orderStartTime)\r\n\r\n    // if (\r\n    //   destinations[0].rideCheckPoint &&\r\n    //   destinations[1].rideCheckPoint &&\r\n    //   data.orderStartDate &&\r\n    //   data.orderStartTime &&\r\n    //   carSelectionID &&\r\n    //   passengers\r\n    // ) {\r\n    if (onSubmit2(data)) {\r\n      getCompanyCars({\r\n        hours: hourly ? hoursAddressForm : 0,\r\n        isGateMeeting: isGateMeeting,\r\n        airlines: { id: airlineId },\r\n        orderAddressDetails: [...destinations],\r\n        flightNumber: data.flightNumber,\r\n        page: pageSize,\r\n        typeId: carSelectionID,\r\n        bookingType: bookingType,\r\n        passengersQuantity: formData.passengersQuantityForBackStep,\r\n        isAirportPickupIncluded: isAirportPickupIncludedLocalState,\r\n        boosterSeatCount: boosterSeat,\r\n        safetySeatCount: childSafetySeat,\r\n        luggageCount: luggage,\r\n      })\r\n      setSafetySeatCount(childSafetySeat)\r\n      setBoosterSeatCount(boosterSeat)\r\n      setDateForDefaultValue(date?.toLocaleDateString(\"en-US\"))\r\n\r\n      const forRes = date?.toLocaleDateString(\"en-US\")\r\n      const forRes2 = time + ` ${AMPM}`\r\n\r\n      // ._d.toLocaleTimeString(\"en-US\", {\r\n      //   hour: \"numeric\",\r\n      //   minute: \"numeric\",\r\n      // })\r\n\r\n      // + ` ${AMPM}`\r\n      const resData = {\r\n        orderStartDate: `${forRes}`,\r\n        orderStartTime: `${forRes2}`,\r\n      }\r\n      const resData2 = {\r\n        orderStartDateTime: `${forRes} ` + `${forRes2}`,\r\n      }\r\n\r\n      if (date) {\r\n        setFormData(resData2)\r\n      }\r\n\r\n      console.log(\r\n        destinations[0].rideCheckPoint,\r\n        destinations[1].rideCheckPoint,\r\n        data?.orderStartDate,\r\n        data?.orderStartTime + ` ${AMPM}`,\r\n        {\r\n          hours: hourly ? hoursAddressForm : 0,\r\n          isGateMeeting: isGateMeeting,\r\n          airlines: { id: airlineId },\r\n          orderAddressDetails: [...destinations],\r\n          flightNumber: data.flightNumber,\r\n          page: pageSize,\r\n          typeId: carSelectionID,\r\n          bookingType: bookingType,\r\n          passengersQuantity: passengers,\r\n          boosterSeatCount: boosterSeat,\r\n        }\r\n      )\r\n      next()\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (firstAirline) {\r\n      setIsAirline(true)\r\n      setBookingType(3)\r\n      // fetchAirlines()\r\n      // setDisableHourly(true)\r\n    } else {\r\n      setIsAirline(false)\r\n      setDisableHourly(false)\r\n    }\r\n  }, [firstAirline])\r\n  React.useEffect(() => {\r\n    if (hourly) {\r\n      if (firstAirline) {\r\n        setBookingType(3)\r\n      } else {\r\n        setBookingType(2)\r\n      }\r\n\r\n      // setDisableHourly(true)\r\n    } else {\r\n      if (firstAirline) {\r\n        setBookingType(3)\r\n      } else {\r\n        setBookingType(1)\r\n      }\r\n    }\r\n  })\r\n\r\n  return (\r\n    <AdressFormUIComponent\r\n      carTypes={carTypes}\r\n      formData={formData}\r\n      setHourlyRedux={setHourlyRedux}\r\n      setGateMeetingRedux={setGateMeetingRedux}\r\n      gateMeeting={gateMeeting}\r\n      hourlyAndSeatsRedux={hourlyAndSeatsRedux}\r\n      resetInputs={resetInputs}\r\n      setPassengersQuantityForBackStep={setPassengersQuantityForBackStep}\r\n      isBoosterSeatExistOnBackend={isBoosterSeatExistOnBackend}\r\n      isSafetySeatExistOnBackend={isSafetySeatExistOnBackend}\r\n      airlines={airlines}\r\n      alignment={alignment}\r\n      bookingType={bookingType}\r\n      boosterSeat={boosterSeat}\r\n      carSelectionID={carSelectionID}\r\n      childSafetySeat={childSafetySeat}\r\n      destinations={destinations}\r\n      flightNumber={flightNumber}\r\n      formatChars={formatChars}\r\n      handleChangeAMPM={handleChangeAMPM}\r\n      handleClick={handleClick}\r\n      handleInput={handleInput}\r\n      handleSubmit={handleSubmit}\r\n      hourly={hourly}\r\n      hoursAddressForm={hoursAddressForm}\r\n      isAirline={isAirline}\r\n      luggage={luggage}\r\n      methods={methods}\r\n      register={register}\r\n      myArrow={myArrow}\r\n      onSubmit={onSubmit}\r\n      passengers={passengers}\r\n      redBorderOnAirlines={redBorderOnAirlines}\r\n      redBorderOnSubmit={redBorderOnSubmit}\r\n      redBorderOnSubmit2={redBorderOnSubmit2}\r\n      redBorderOnSubmitForCarType={redBorderOnSubmitForCarType}\r\n      redBorderOnSubmitForDate={redBorderOnSubmitForDate}\r\n      redBorderOnSubmitForPassengers={redBorderOnSubmitForPassengers}\r\n      redBorderOnSubmitForTime={redBorderOnSubmitForTime}\r\n      redBorderOnSubmitForTime2={redBorderOnSubmitForTime2}\r\n      redBorderOnSubmitForTime3={redBorderOnSubmitForTime3}\r\n      redBorderOnSubmitForTime4={redBorderOnSubmitForTime4}\r\n      redBorderOnSubmitForTime5={redBorderOnSubmitForTime5}\r\n      redBorderOnSubmitForTime6={redBorderOnSubmitForTime6}\r\n      safetySeat={safetySeat}\r\n      setAirlineId={setAirlineId}\r\n      setBoosterSeat={setBoosterSeat}\r\n      setChildSafetySeat={setChildSafetySeat}\r\n      setDestinations={setDestinations}\r\n      setFlightNumber={setFlightNumber}\r\n      setHourly={setHourly}\r\n      setHoursAddressForm={setHoursAddressForm}\r\n      setIsAirportPickupIncludedLocalState={\r\n        setIsAirportPickupIncludedLocalState\r\n      }\r\n      setIsGateMeeting={setIsGateMeeting}\r\n      setLuggage={setLuggage}\r\n      setPassengers={setPassengers}\r\n      setSafetySeat={setSafetySeat}\r\n      // setValue={setValue}\r\n      date={date}\r\n      setDate={setDate}\r\n      show={show}\r\n      setShow={setShow}\r\n      AMPM={AMPM}\r\n      setDateForDefaultValue={setDateForDefaultValue}\r\n      control={control}\r\n      fetchAirlines={fetchAirlines}\r\n      extractAirlineId={extractAirlineId}\r\n      airlineName={airlineName}\r\n      time={time}\r\n      setTime={setTime}\r\n      setTimeForDefaultValue={setTimeForDefaultValue}\r\n    />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    carTypes: state.companyProfile.profile.carTypes,\r\n    pageSize: state.cars.pageSize,\r\n    formData: state.formData,\r\n    resetInputs: state.resetWidgetInputs.resetInputs,\r\n    gateMeeting: state.gateMeeting.isGateMeeting,\r\n    hourlyAndSeatsRedux: state.hourlyAndSeatsRedux.hourlyRedux,\r\n    isBoosterSeatExistOnBackend:\r\n      state.companyProfile.isBoosterSeatExistOnBackend,\r\n    isSafetySeatExistOnBackend: state.companyProfile.isSafetySeatExistOnBackend,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCarsByType,\r\n  getCompanyCars,\r\n  setFormData,\r\n  setHourlyRedux,\r\n  setGateMeetingRedux,\r\n  setSafetySeatCount,\r\n  setBoosterSeatCount,\r\n  setDateForDefaultValue,\r\n  setTimeForDefaultValue,\r\n  setTimeForDefaultValueAMPM,\r\n  setTimeForDefaultValueAlignment,\r\n  setPassengersQuantityForBackStep,\r\n})(AdressFormContainerComponent)\r\n\r\nconst Button = styled.button`\r\n  width: 30px;\r\n  height: 100%;\r\n  background: ${(props) => props.backAndNextButtonsColor};\r\n  /* color: $font-color; */\r\n  border: 1px solid ${(props) => props.borderColorForInnerElements};\r\n  border-radius: $inputs-border-radius;\r\n  border-radius: $inputs-border-radius;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n  &:hover {\r\n    background: $hover-color;\r\n    color: $inner-text-on-hover;\r\n    transition: 0.2s;\r\n  }\r\n`\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\FleetForm\\FleetFormUIComponent.js",["309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325"],"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\Payment\\PaymentUIComponent.js",["326","327","328","329","330","331","332","333","334","335","336","337","338","339"],"import React, { useState, useEffect, useContext } from \"react\"\r\n// import { connect } from \"react-redux\"\r\nimport { FormProvider, useForm } from \"react-hook-form\"\r\nimport {\r\n  // CustomFormInput,\r\n  // CustomFormInputForPayment,\r\n  CustomMaskInput,\r\n} from \"../CustomFormInput/CustomFormInput\"\r\nimport styled from \"styled-components\"\r\n// import { makeStyles } from \"@material-ui/core/styles\"\r\n// import { BackArrowIcon } from \"../../../../assets/icons\"\r\n// import { yupResolver } from \"@hookform/resolvers/yup\"\r\n// import * as yup from \"yup\"\r\n// import Grid from \"@material-ui/core/Grid\"\r\n// import Typography from \"@material-ui/core/Typography\"\r\n// import Autocomplete from \"@material-ui/lab/Autocomplete\"\r\n// import Button from \"@material-ui/core/Button\"\r\n// import Checkbox from \"@material-ui/core/Checkbox\"\r\n// // import Switch from \"@material-ui/core/Switch\"\r\n// import { Link } from \"@material-ui/core\"\r\n// import { placesApi } from \"../../../../api/api\"\r\n// import TextField from \"@material-ui/core/TextField\"\r\n// import {\r\n//   createReservation,\r\n//   setPaymentForm,\r\n// } from \"../../../../Redux/form-reducer\"\r\nimport PrivacyPolicy from \"../../../TermsOfUse/PrivacyPolicy/PrivacyPolicy\"\r\nimport TermsOfUse from \"../../../TermsOfUse/TermOfUse/TermOfUse\"\r\n// import { withStyles } from \"@material-ui/styles\"\r\n// import { Number, Cvc, Expiration } from \"react-credit-card-primitives\"\r\n\r\nimport Cleave from \"cleave.js/react\"\r\nimport \"./PaymentStyles.css\"\r\n// import { AntSwitch } from \"../AdressForm/AdressFormStyles\"\r\n// import { useStyles } from \"./PaymentStyles\"\r\n// import { styles } from \"@material-ui/pickers/views/Calendar/Calendar\"\r\nimport styles from \"./Payment.module.scss\"\r\nimport { Switch } from \"../../../Helpers/Switch/Switch\"\r\nimport ThemeContext from \"../../../../context\"\r\n// import ReactInputMask from \"react-input-mask\"\r\n\r\n// const SignupSchema = yup.object().shape({\r\n//   // greetClientInfo: yup.object().shape({\r\n//   //     firstName: yup.string().required('Required'),\r\n//   //     phoneNumber: yup.number('Not a number').required('Required'),\r\n//   //     lastName: yup.string().required('Required'),\r\n//   //     email: yup.string().email('invalid email').required('Required'),\r\n//   // }),\r\n//   client: yup.object().shape({\r\n//     firstName: yup.string().required(\"Required\"),\r\n//     lastName: yup.string().required(\"Required\"),\r\n//     address: yup.string().required(\"Required\"),\r\n//     zip: yup.number().required(\"Required\").typeError(\"Not a number\"),\r\n//     email: yup.string().email(\"invalid email\").required(\"Required\"),\r\n//     phoneNumber: yup.number().typeError(\"Not a number\").required(\"Required\"),\r\n//   }),\r\n//   paymentInfo: yup.object().shape({\r\n//     // cardNumber: yup.string().required(\"Required\"),\r\n//     month: yup.string().required(\"Required\"),\r\n//     cvc: yup.number().required(\"Required\").typeError(\"Not a number\"),\r\n//   }),\r\n// })\r\n\r\nconst PaymentUIComponent = ({\r\n  next,\r\n  back,\r\n  total,\r\n  formSummary,\r\n  setPaymentForm,\r\n  SignupSchema,\r\n  states,\r\n  setStates,\r\n  cities,\r\n  setCities,\r\n  statesId,\r\n  setStatesId,\r\n  citiesId,\r\n  setCitiesId,\r\n  checked,\r\n  setChecked,\r\n  register,\r\n  handleSubmit,\r\n  formState,\r\n  errors,\r\n  methods,\r\n  riderDetails,\r\n  setRiderDetails,\r\n  statesIdError,\r\n  setStatesIdError,\r\n  citiesIdError,\r\n  setCitiesIdError,\r\n  cardForPaymentSubmit,\r\n  setCardForPaymentSubmit,\r\n  cardForPaymentSubmitError,\r\n  setCardForPaymentSubmitError,\r\n  restrictAmex,\r\n  setRestrictAmex,\r\n  onSubmit,\r\n  cardType,\r\n  setCardType,\r\n  creditCardNum,\r\n  setCreditCardNum,\r\n  handleNum,\r\n  handleType,\r\n  extractStateId,\r\n  extractCityId,\r\n  stateName,\r\n  cityName,\r\n}) => {\r\n  // const classes = useStyles()\r\n\r\n  const inputStyle = {\r\n    WebkitBoxShadow: \"0 0 0 1000px transparent inset\",\r\n    height: \"0px\",\r\n    // width: \"100%\",\r\n  }\r\n\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault()\r\n  // }\r\n\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiuses,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n    inputsBackground,\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <form\r\n        // onBlur={(e) => {\r\n        //   handleSubmit(e)\r\n        // }}\r\n        onSubmit={handleSubmit(onSubmit)}\r\n        className={styles.formWrapper}\r\n        style={{ background: ThemeProviderAppBackgroundColor }}\r\n      >\r\n        <div\r\n          // container\r\n          // justify=\"center\"\r\n          // className={classes.contentContainer}\r\n          className={styles.paymentWrapper}\r\n        >\r\n          <div\r\n            // container\r\n            // direction=\"column\"\r\n            // spacing={2}\r\n            className={styles.paymentContainer}\r\n          >\r\n            <div\r\n              // item\r\n              className={styles.paymentTitleContainer}\r\n            >\r\n              <span\r\n                // variant=\"body2\"\r\n                // style={{\r\n                //   fontFamily: \"Roboto\",\r\n                //   fontWeight: 500,\r\n                //   // color: \"white\",\r\n                //   fontSize: \"22px\",\r\n                //   lineHeight: \"36px\",\r\n                // }}\r\n                // className={classes.paymentTexts}\r\n                className={styles.paymentTitleSelf}\r\n                style={{ color: fontColor }}\r\n              >\r\n                Payment\r\n              </span>\r\n            </div>\r\n            <div\r\n              // item\r\n              className={styles.isPassengerCardholderContainer}\r\n            >\r\n              {/* <div\r\n                // container\r\n                // direction=\"row\"\r\n                // justify=\"space-between\"\r\n                // alignItems=\"center\"\r\n                className={styles.isPassengerCardholderContainer}\r\n              > */}\r\n              <div\r\n                // item\r\n                className={styles.isPassengerCardholderTitleContainer}\r\n              >\r\n                <span\r\n                  // variant=\"body1\"\r\n                  // style={{\r\n                  //   //   marginTop: \"7px\",\r\n                  //   color: riderDetails ? \"white\" : \"#757575\",\r\n                  //   fontSize: \"15px\",\r\n                  // }}\r\n                  // className={classes.paymentTexts}\r\n                  className={\r\n                    riderDetails\r\n                      ? styles.isPassengerCardholderTitleWhiteSelf\r\n                      : styles.isPassengerCardholderTitleGreySelf\r\n                  }\r\n                  style={{\r\n                    color: fontColor,\r\n                    opacity: riderDetails ? \"1\" : \"0.3\",\r\n                  }}\r\n                >\r\n                  Is passenger a cardholder?\r\n                </span>\r\n              </div>\r\n              <div\r\n                // item\r\n                className={styles.isPassengerCardholderSwitchContainer}\r\n              >\r\n                {/* <AntSwitch\r\n                  // checked={riderDetails}\r\n                  // onClick={() => setRiderDetails(!riderDetails)}\r\n                  color=\"primary\"\r\n                /> */}\r\n\r\n                {/* <div className={styles.switchContainer}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"switch\"\r\n                    className={styles.switchSelf}\r\n                    id=\"switch\"\r\n                    checked={riderDetails}\r\n                    onClick={() => setRiderDetails(!riderDetails)}\r\n                  />\r\n                  <label for=\"switch\"></label>\r\n                </div> */}\r\n\r\n                <Switch\r\n                  checked={riderDetails}\r\n                  onClick={() => setRiderDetails(!riderDetails)}\r\n                  numberToIdentify={4}\r\n                />\r\n              </div>\r\n              {/* </div> */}\r\n            </div>\r\n            {!riderDetails && (\r\n              <div\r\n                // item\r\n                // style={{ paddingBottom: \"20px\" }}\r\n                className={styles.passengerDetailWrapper}\r\n              >\r\n                <div\r\n                  // item\r\n                  // style={{ paddingBottom: \"13px\" }}\r\n                  className={styles.passengerDetailTitleContainer}\r\n                >\r\n                  <span\r\n                    // style={{ fontSize: \"15px\" }}\r\n                    // className={classes.paymentTexts}\r\n                    className={styles.passengerDetailTitleSelf}\r\n                    style={{ color: fontColor }}\r\n                  >\r\n                    Passenger Detail\r\n                  </span>\r\n                </div>\r\n                <div\r\n                  // item\r\n                  className={styles.cardholderInformationInputsWrapper}\r\n                >\r\n                  {/* <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"space-between\"\r\n                    spacing={2}\r\n                    style={{ marginBottom: \"8px\" }}\r\n                  > */}\r\n                  <div\r\n                    // item\r\n                    // xs={6}\r\n                    className={\r\n                      styles.cardholderInformationInputSelfContainerJustForFirstAndLastName\r\n                    }\r\n                  >\r\n                    <input\r\n                      // variant=\"standard\"\r\n                      name=\"greetClientInfo.firstName\"\r\n                      autoComplete=\"off\"\r\n                      placeholder=\"First Name\"\r\n                      // className={classes.inputPlaceholderFontSize}\r\n                      defaultValue={formSummary.greetClientInfo.firstName}\r\n                      // style={{\r\n                      //   width: \"100%\",\r\n                      //   background: \"transparent\",\r\n                      // }}\r\n                      className={styles.cardholderInformationInputSelfFirstName}\r\n                      style={{\r\n                        color: inputsFontColor,\r\n                        border: `1px solid ${borderColorForInnerElements}`,\r\n                        background: inputsBackground,\r\n                      }}\r\n                      ref={register}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    // item\r\n                    // xs={6}\r\n                    className={styles.cardholderInformationInputSelfContainer2}\r\n                  >\r\n                    <input\r\n                      // variant=\"standard\"\r\n                      name=\"greetClientInfo.lastName\"\r\n                      autoComplete=\"off\"\r\n                      // className={classes.inputPlaceholderFontSize}\r\n                      defaultValue={formSummary.greetClientInfo.lastName}\r\n                      placeholder=\"Last Name\"\r\n                      // style={{ width: \"100%\", background: \"transparent\" }}\r\n                      className={styles.cardholderInformationInputSelfLastName}\r\n                      style={{\r\n                        color: inputsFontColor,\r\n                        border: `1px solid ${borderColorForInnerElements}`,\r\n                        background: inputsBackground,\r\n                      }}\r\n                      ref={register}\r\n                    />\r\n                  </div>\r\n                  {/* </Grid> */}\r\n                </div>\r\n                <div\r\n                  // item\r\n                  className={styles.cardholderInformationInputsWrapper}\r\n                >\r\n                  {/* <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"space-between\"\r\n                    spacing={2}\r\n                  > */}\r\n                  <div\r\n                    // item\r\n                    // xs={6}\r\n                    className={styles.cardholderInformationInputSelfContainer1}\r\n                  >\r\n                    <input\r\n                      name=\"greetClientInfo.email\"\r\n                      // variant=\"standard\"\r\n                      autoComplete=\"off\"\r\n                      placeholder=\"Email\"\r\n                      // className={classes.inputPlaceholderFontSize}\r\n                      defaultValue={formSummary.greetClientInfo.email}\r\n                      // style={{ width: \"100%\", background: \"transparent\" }}\r\n                      className={styles.cardholderInformationInputSelf}\r\n                      style={{\r\n                        color: inputsFontColor,\r\n                        border: `1px solid ${borderColorForInnerElements}`,\r\n                        background: inputsBackground,\r\n                      }}\r\n                      ref={register}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    // item\r\n                    // xs={6}\r\n                    className={styles.cardholderInformationInputSelfContainer2}\r\n                  >\r\n                    <input\r\n                      // variant=\"standard\"\r\n                      name=\"greetClientInfo.phoneNumber\"\r\n                      autoComplete=\"off\"\r\n                      defaultValue={formSummary.greetClientInfo.phoneNumber}\r\n                      placeholder=\"Phone Number\"\r\n                      // className={classes.inputPlaceholderFontSize}\r\n                      // style={{ width: \"100%\", background: \"transparent\" }}\r\n                      className={styles.cardholderInformationInputSelf}\r\n                      style={{\r\n                        color: inputsFontColor,\r\n                        border: `1px solid ${borderColorForInnerElements}`,\r\n                        background: inputsBackground,\r\n                      }}\r\n                      ref={register}\r\n                    />\r\n                  </div>\r\n                  {/* </Grid> */}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div\r\n              // item\r\n              className={styles.cardholderInformationWrapper}\r\n            >\r\n              <div\r\n                // item\r\n                // style={{ paddingBottom: \"13px\" }}\r\n                className={styles.cardholderInformationTitleContainer}\r\n              >\r\n                <span\r\n                  // style={{ fontSize: \"15px\" }}\r\n                  // className={classes.paymentTexts}\r\n                  className={styles.cardholderInformationTitleSelf}\r\n                  style={{ color: fontColor }}\r\n                >\r\n                  Cardholder Information\r\n                </span>\r\n              </div>\r\n              <div\r\n                // container\r\n                // direction=\"row\"\r\n                // justify=\"space-between\"\r\n                // spacing={2}\r\n                className={styles.cardholderInformationInputsWrapper}\r\n              >\r\n                <div\r\n                  className={styles.cardholderInformationInputSelfContainer}\r\n                  style={{ width: \"50%\" }}\r\n                >\r\n                  <div\r\n                    // item\r\n                    // xs={6}\r\n\r\n                    className={\r\n                      styles.cardholderInformationInputSelfContainerJustForFirstAndLastName\r\n                    }\r\n                    style={{ width: \"100%\" }}\r\n                  >\r\n                    <input\r\n                      // variant=\"standard\"\r\n                      name=\"client.firstName\"\r\n                      autoComplete=\"off\"\r\n                      // className={classes.inputPlaceholderFontSize}\r\n                      defaultValue={formSummary.client.firstName}\r\n                      // style={{\r\n                      //   fontSize: \"14px\",\r\n                      //   width: \"100%\",\r\n                      //   background: \"transparent\",\r\n                      // }}\r\n                      placeholder=\"First Name\"\r\n                      error={errors.client?.firstName ? true : false}\r\n                      className={styles.cardholderInformationInputSelfFirstName}\r\n                      ref={register}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        color: inputsFontColor,\r\n                        border: `1px solid ${borderColorForInnerElements}`,\r\n                        background: inputsBackground,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  {errors.client?.firstName && (\r\n                    <p className={styles.errorInputs}>\r\n                      {errors.client?.firstName.message}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                <div\r\n                  // item\r\n                  // xs={6}\r\n                  className={styles.cardholderInformationInputSelfContainer}\r\n                  style={{ width: \"50%\" }}\r\n                >\r\n                  <input\r\n                    // variant=\"standard\"\r\n                    name=\"client.lastName\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Last Name\"\r\n                    // className={classes.inputPlaceholderFontSize}\r\n                    defaultValue={formSummary.client.lastName}\r\n                    // style={{ width: \"100%\", background: \"transparent\" }}\r\n                    error={errors.client?.lastName ? true : false}\r\n                    className={styles.cardholderInformationInputSelfLastName}\r\n                    ref={register}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      color: inputsFontColor,\r\n                      border: `1px solid ${borderColorForInnerElements}`,\r\n                      background: inputsBackground,\r\n                    }}\r\n                  />\r\n                  {errors.client?.lastName && (\r\n                    <p className={styles.errorInputs}>\r\n                      {errors.client?.lastName.message}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div\r\n                // item\r\n                className={styles.cardholderInformationInputsWrapper}\r\n              >\r\n                {/* <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  spacing={2}\r\n                > */}\r\n                <div\r\n                  // item\r\n                  // xs={6}\r\n                  className={styles.cardholderInformationInputSelfContainer1}\r\n                >\r\n                  <input\r\n                    name=\"client.email\"\r\n                    // variant=\"standard\"\r\n                    autoComplete=\"off\"\r\n                    // className={classes.inputPlaceholderFontSize}\r\n                    placeholder=\"Email\"\r\n                    // style={{ width: \"100%\", background: \"transparent\" }}\r\n                    defaultValue={formSummary.client.email}\r\n                    error={errors.client?.email ? true : false}\r\n                    className={styles.cardholderInformationInputSelf}\r\n                    style={{\r\n                      color: inputsFontColor,\r\n                      border: `1px solid ${borderColorForInnerElements}`,\r\n                      background: inputsBackground,\r\n                    }}\r\n                    ref={register}\r\n                  />\r\n                  {errors.client?.email && (\r\n                    <p className={styles.errorInputs}>\r\n                      {errors.client?.email.message}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                <div\r\n                  // item\r\n                  // xs={6}\r\n                  className={styles.cardholderInformationInputSelfContainer2}\r\n                >\r\n                  <input\r\n                    // variant=\"standard\"\r\n                    name=\"client.phoneNumber\"\r\n                    autoComplete=\"off\"\r\n                    // className={classes.inputPlaceholderFontSize}\r\n                    defaultValue={formSummary.client.phoneNumber}\r\n                    placeholder=\"Phone Number\"\r\n                    // style={{ width: \"100%\", background: \"transparent\" }}\r\n                    error={errors.client?.phoneNumber ? true : false}\r\n                    className={styles.cardholderInformationInputSelf}\r\n                    style={{\r\n                      color: inputsFontColor,\r\n                      border: `1px solid ${borderColorForInnerElements}`,\r\n                      background: inputsBackground,\r\n                    }}\r\n                    ref={register}\r\n                  />\r\n                  {errors.client?.phoneNumber && (\r\n                    <p className={styles.errorInputs}>\r\n                      {errors.client?.phoneNumber.message}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                {/* </Grid> */}\r\n              </div>\r\n              <div\r\n                // item\r\n                className={styles.cardholderInformationInputsWrapper}\r\n              >\r\n                <div\r\n                  // item\r\n                  className={\r\n                    styles.cardholderInformationInputsContainerForPositionErrorMessage\r\n                  }\r\n                >\r\n                  <input\r\n                    name=\"client.address\"\r\n                    // variant=\"standard\"\r\n                    autoComplete=\"off\"\r\n                    // className={classes.inputPlaceholderFontSize}\r\n                    // style={{ height: \"100%\", background: \"transparent\" }}\r\n                    placeholder=\"Address\"\r\n                    defaultValue={formSummary.client.address}\r\n                    // fullWidth\r\n                    ref={register}\r\n                    error={errors.client?.address ? true : false}\r\n                    className={\r\n                      styles.cardholderInformationInputWithFullWidthSelf\r\n                    }\r\n                    style={{\r\n                      color: inputsFontColor,\r\n                      border: `1px solid ${borderColorForInnerElements}`,\r\n                      background: inputsBackground,\r\n                    }}\r\n                  />\r\n                  {errors.client?.address && (\r\n                    <p className={styles.errorInputs}>\r\n                      {errors.client?.address.message}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div\r\n                // item\r\n                className={styles.cardholderInformationInputsWrapper}\r\n              >\r\n                <div\r\n                  // item\r\n                  className={\r\n                    styles.cardholderInformationInputsContainerForPositionErrorMessageState\r\n                  }\r\n                >\r\n                  <select\r\n                    // {...params}\r\n                    // fullWidth\r\n                    // className={classes.inputPlaceholderFontSize}\r\n                    // placeholder=\"State\"\r\n                    // variant=\"standard\"\r\n                    // style={{ background: \"transparent\" }}\r\n                    autoComplete=\"off\"\r\n                    // InputProps={{\r\n                    //   ...params.InputProps,\r\n                    //   style: { inputStyle },\r\n                    //   classes: {\r\n                    //     root: classes.inputRootAutocomplete,\r\n                    //     underline: classes.noBorder,\r\n                    //     input: classes.input,\r\n                    //   },\r\n                    //   // disableUnderline: true,\r\n                    // }}\r\n                    ref={register}\r\n                    onChange={(event, newValue) => {\r\n                      // console.log(event)\r\n                      event.target.value\r\n                        ? extractStateId(event.target.value)\r\n                        : setStatesId(null)\r\n                      // newValue ? setStatesId(newValue.id) : setStatesId(null)\r\n                    }}\r\n                    // list=\"states-list\"\r\n                    className={\r\n                      styles.cardholderInformationInputWithFullWidthSelfState\r\n                    }\r\n                    style={{\r\n                      color: inputsFontColor,\r\n                      border: `1px solid ${borderColorForInnerElements}`,\r\n                      background: inputsBackground,\r\n                      // textIndent: \"17px\",\r\n                      // color: \"grey\",\r\n                      // \"& option\": {\r\n                      //   color: \"red\",\r\n                      // },\r\n                      // \"&::-webkit-calendar-picker-indicator\": {\r\n                      //   opacity: 1,\r\n                      //   color: \"blue\",\r\n                      // },\r\n                    }}\r\n                    value={stateName}\r\n                  >\r\n                    <option\r\n                      value=\"\"\r\n                      disabled\r\n                      selected\r\n                      hidden\r\n                      style={{ color: \"grey\" }}\r\n                      className={styles.placeholderForPicker}\r\n                    >\r\n                      State\r\n                    </option>\r\n                    {states.map((state) => (\r\n                      <option\r\n                        value={state.name}\r\n                        id={state.id}\r\n                        className={styles.optionsSelf}\r\n                        // style={{ color: fontColor, margin: \" auto 10px\" }}\r\n                      >\r\n                        {state.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n\r\n                  {statesIdError && (\r\n                    <p className={styles.errorInputs}>Required</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div\r\n                // item\r\n                className={styles.cardholderInformationInputsWrapper}\r\n                // style={{ width: '100%' }}\r\n              >\r\n                {/* <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  spacing={2}\r\n                > */}\r\n                <div\r\n                  // item\r\n                  // xs={6}\r\n                  className={styles.cardholderInformationInputSelfContainer1}\r\n                  // style={{ width: '50%' }}\r\n                >\r\n                  {/* <div style={{ width: '100%' }}> */}\r\n                  {/* <Autocomplete\r\n                    id=\"combo-box-demo\"\r\n                    options={cities}\r\n                    key={statesId}\r\n                    autoComplete=\"off\"\r\n                    defaultValue={null}\r\n                    autoHighlight\r\n                    disablePortal\r\n                    getOptionLabel={(option) => option.name}\r\n                    className={classes.mainAutocompleteClass}\r\n                    classes={{\r\n                      popupIndicator: classes.popupIndicator,\r\n                      option: classes.option,\r\n                      paper: classes.selectedOption,\r\n                    }}\r\n                    renderOption={(option) => (\r\n                      <div style={{ fontSize: \"13px\" }}>\r\n                        <span style={{ fontSize: \"14px\" }}>{option.code}</span>\r\n                        {option.name} ({option.code})\r\n                      </div>\r\n                    )}\r\n                    renderInput={(params) => (\r\n                      <input\r\n                        {...params}\r\n                        // fullWidth\r\n                        className={classes.inputPlaceholderFontSize}\r\n                        placeholder=\"Cities\"\r\n                        // variant=\"standard\"\r\n                        // style={{ background: \"transparent\" }}\r\n                        // InputProps={{\r\n                        //   ...params.InputProps,\r\n                        //   style: { inputStyle },\r\n                        //   classes: {\r\n                        //     root: classes.inputRootAutocomplete,\r\n                        //     underline: classes.noBorder,\r\n                        //     input: classes.input,\r\n                        //   },\r\n                        //   // disableUnderline: true,\r\n                        // }}\r\n                        className={styles.cardholderInformationInputSelf}\r\n                      />\r\n                    )}\r\n                    onChange={(event, newValue) => {\r\n                      newValue ? setCitiesId(newValue.id) : setCitiesId(null)\r\n                    }}\r\n                    name=\"cityId\"\r\n                  /> */}\r\n\r\n                  <select\r\n                    // {...params}\r\n                    // fullWidth\r\n                    // className={classes.inputPlaceholderFontSize}\r\n                    // placeholder=\"Cities\"\r\n                    // variant=\"standard\"\r\n                    // style={{ background: \"transparent\" }}\r\n                    autoComplete=\"off\"\r\n                    // InputProps={{\r\n                    //   ...params.InputProps,\r\n                    //   style: { inputStyle },\r\n                    //   classes: {\r\n                    //     root: classes.inputRootAutocomplete,\r\n                    //     underline: classes.noBorder,\r\n                    //     input: classes.input,\r\n                    //   },\r\n                    //   // disableUnderline: true,\r\n                    // }}\r\n                    // list=\"cities-list\"\r\n                    // className={\r\n                    //   styles.cardholderInformationInputWithFullWidthSelf\r\n                    // }\r\n                    ref={register}\r\n                    onChange={(event, newValue) => {\r\n                      console.log(cities)\r\n                      event.target.value\r\n                        ? extractCityId(event.target.value)\r\n                        : setCitiesId(null)\r\n                    }}\r\n                    className={styles.cardholderInformationInputSelf}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      paddingRight: \"25px\",\r\n                      boxSizing: \"border-box\",\r\n                      color: inputsFontColor,\r\n\r\n                      border: `1px solid ${borderColorForInnerElements}`,\r\n                      background: inputsBackground,\r\n                      // textIndent: \"17px\",\r\n                    }}\r\n                    value={cityName}\r\n                  >\r\n                    <option\r\n                      value=\"\"\r\n                      disabled\r\n                      selected\r\n                      hidden\r\n                      // style={{ color: \"grey\" }}\r\n                      // className={styles.placeholderForPicker}\r\n                    >\r\n                      Cities\r\n                    </option>\r\n                    {cities.map((city) => (\r\n                      <option\r\n                        // onChange={(event, newValue) => {\r\n                        //   newValue\r\n                        //     ? setCitiesId(newValue.id)\r\n                        //     : setCitiesId(null)\r\n                        // }}\r\n                        value={city.name}\r\n                      >\r\n                        {city.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n\r\n                  <datalist id=\"cities-list\">\r\n                    {/* id=\"combo-box-demo\"\r\n                  options={states}\r\n                  defaultValue={null}\r\n                  autoComplete=\"off\"\r\n                  autoHighlight\r\n                  disablePortal\r\n                  className={classes.mainAutocompleteClass}\r\n                  InputProps={{\r\n                    classes: {\r\n                      root: classes.inputRootAutocomplete2,\r\n                    },\r\n                  }}\r\n                  classes={{\r\n                    popupIndicator: classes.popupIndicator,\r\n                    option: classes.option,\r\n                    paper: classes.selectedOption,\r\n                  }}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderOption={(option) => (\r\n                    <div style={{ fontSize: \"14px\" }}>\r\n                      <span style={{ fontSize: \"14px\" }}>{option.code}</span>\r\n                      {option.name} ({option.code})\r\n                    </div>\r\n                  )}\r\n                  renderInput={(params) => (\r\n                    \r\n                  )}\r\n                  \r\n                  name=\"stateId\" */}\r\n                    {cities.map((city) => (\r\n                      <option\r\n                        // onChange={(event, newValue) => {\r\n                        //   newValue\r\n                        //     ? setCitiesId(newValue.id)\r\n                        //     : setCitiesId(null)\r\n                        // }}\r\n                        value={city.name}\r\n                      />\r\n                    ))}\r\n                  </datalist>\r\n\r\n                  {citiesIdError && (\r\n                    <p className={styles.errorInputs}>Required</p>\r\n                  )}\r\n                  {/* </div> */}\r\n                </div>\r\n                <div\r\n                  // item\r\n                  // xs={6}\r\n                  className={styles.cardholderInformationInputSelfContainer2}\r\n                >\r\n                  <input\r\n                    // variant=\"standard\"\r\n                    name=\"client.zip\"\r\n                    autoComplete=\"off\"\r\n                    // className={classes.inputPlaceholderFontSize}\r\n                    placeholder=\"ZIP\"\r\n                    // style={{ width: \"100%\", background: \"transparent\" }}\r\n                    ref={register}\r\n                    defaultValue={formSummary.client.zip}\r\n                    error={errors.client?.address ? true : false}\r\n                    className={styles.cardholderInformationInputSelf}\r\n                    style={{\r\n                      color: inputsFontColor,\r\n                      border: `1px solid ${borderColorForInnerElements}`,\r\n                      background: inputsBackground,\r\n                    }}\r\n                  />\r\n                  {errors.client?.zip && (\r\n                    <p className={styles.errorInputs}>\r\n                      {errors.client?.zip.message}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                {/* </Grid> */}\r\n              </div>\r\n            </div>\r\n            <div className={styles.cardInformationWrapper}>\r\n              <div className={styles.cardInformationTitleContainer}>\r\n                <span\r\n                  // style={{ fontSize: \"15px\" }}\r\n                  // className={classes.paymentTexts}\r\n                  className={styles.cardInformationTitleSelf}\r\n                  style={{ color: fontColor }}\r\n                >\r\n                  Card information\r\n                </span>\r\n              </div>\r\n              <div\r\n                // item\r\n                className={styles.cardholderInformationInputsWrapper}\r\n              >\r\n                {/* <CustomMaskInput\r\n                name=\"paymentInfo.cardNumber\"\r\n                mask=\"9999-9999-9999-9999\"\r\n                autoComplete=\"off\"\r\n                defaultValue={formSummary.paymentInfo.cardNumber}\r\n              >\r\n                {() => (\r\n                  <TextField\r\n                    variant=\"standard\"\r\n                    className={classes.inputPlaceholderFontSize}\r\n                    placeholder=\"Card number/0000 0000 0000 0000\"\r\n                    autoComplete=\"off\"\r\n                    style={{ background: \"transparent\" }}\r\n                    fullWidth\r\n                    error={errors.paymentInfo?.cardNumber ? true : false}\r\n                    // inputProps={{ style: inputStyle }}\r\n                    InputProps={{\r\n                      // ...params.InputProps,\r\n                      // style: { inputStyle },\r\n                      classes: {\r\n                        root: classes.inputRootAutocompleteCardNumber,\r\n                        underline: classes.noBorder,\r\n                        input: classes.input,\r\n                      },\r\n                      // disableUnderline: true,\r\n                    }}\r\n                  />\r\n                )}\r\n              </CustomMaskInput> */}\r\n                <div\r\n                  // item\r\n                  className={\r\n                    styles.cardholderInformationInputsContainerForPositionErrorMessage\r\n                  }\r\n                >\r\n                  <Cleave\r\n                    delimiter=\"-\"\r\n                    options={{\r\n                      creditCard: true,\r\n                      onCreditCardTypeChanged: handleType,\r\n                    }}\r\n                    name=\"paymentInfo.cardNumber\"\r\n                    error={errors.paymentInfo?.cardNumber ? true : false}\r\n                    onChange={handleNum}\r\n                    placeholder=\"Card number\"\r\n                    className=\"credit-card-input-by-bookinglane\"\r\n                    className={\r\n                      styles.cardholderInformationInputWithFullWidthSelf\r\n                    }\r\n                    style={{\r\n                      color: inputsFontColor,\r\n                      border: `1px solid ${borderColorForInnerElements}`,\r\n                      background: inputsBackground,\r\n                    }}\r\n                  />\r\n\r\n                  {cardForPaymentSubmitError && (\r\n                    <p className={styles.errorInputs}>Required</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div\r\n                // item\r\n                className={styles.cardholderInformationInputsWrapper}\r\n              >\r\n                {/* <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  spacing={2}\r\n                > */}\r\n                <div\r\n                  // item\r\n                  // xs={6}\r\n                  className={styles.cardholderInformationInputSelfContainer1}\r\n                >\r\n                  <CustomMaskInput\r\n                    name=\"paymentInfo.month\"\r\n                    ref={register}\r\n                    mask=\"99/99\"\r\n                    autoComplete=\"off\"\r\n                    defaultValue={`${formSummary.paymentInfo.month}/${formSummary.paymentInfo.year}`}\r\n                  >\r\n                    {() => (\r\n                      <input\r\n                        // variant=\"standard\"\r\n                        // className={classes.inputPlaceholderFontSize}\r\n                        placeholder=\"mm/yy\"\r\n                        autoComplete=\"off\"\r\n                        // fullWidth\r\n                        error={errors.paymentInfo?.month ? true : false}\r\n                        // ref={register}\r\n                        // style={{ background: \"transparent\" }}\r\n                        // inputProps={{ style: inputStyle }}\r\n                        // InputProps={{\r\n                        //   // ...params.InputProps,\r\n                        //   classes: {\r\n                        //     root: classes.inputRootAutocompleteCardNumber,\r\n                        //     underline: classes.noBorder,\r\n                        //     input: classes.input,\r\n                        //   },\r\n                        //   // disableUnderline: true,\r\n                        // }}\r\n                        className={styles.cardholderInformationInputSelf}\r\n                        style={{\r\n                          color: inputsFontColor,\r\n                          border: `1px solid ${borderColorForInnerElements}`,\r\n                          background: inputsBackground,\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </CustomMaskInput>\r\n                  {errors.paymentInfo?.month && (\r\n                    <p className={styles.errorInputs}>\r\n                      {errors.paymentInfo?.month.message}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                <div\r\n                  // item\r\n                  // xs={6}\r\n                  className={styles.cardholderInformationInputSelfContainer2}\r\n                >\r\n                  <CustomMaskInput\r\n                    name=\"paymentInfo.cvc\"\r\n                    ref={register}\r\n                    // type=\"date\"\r\n                    mask={cardType == \"amex\" ? \"9999\" : \"999\"}\r\n                    autoComplete=\"off\"\r\n                    defaultValue={formSummary.paymentInfo.cvc}\r\n                  >\r\n                    {() => (\r\n                      <input\r\n                        // variant=\"standard\"\r\n                        // className={classes.inputPlaceholderFontSize}\r\n                        placeholder=\"CVV/CVC\"\r\n                        autoComplete=\"off\"\r\n                        // fullWidth\r\n                        error={errors.paymentInfo?.cvc ? true : false}\r\n                        // ref={register}\r\n                        // style={{ background: \"transparent\" }}\r\n                        // // inputProps={{ style: inputStyle }}\r\n                        // InputProps={{\r\n                        //   // ...params.InputProps,\r\n                        //   classes: {\r\n                        //     root: classes.inputRootAutocompleteCardNumber,\r\n                        //     underline: classes.noBorder,\r\n                        //     input: classes.input,\r\n                        //   },\r\n                        //   // disableUnderline: true,\r\n                        // }}\r\n                        className={styles.cardholderInformationInputSelf}\r\n                        style={{\r\n                          color: inputsFontColor,\r\n                          border: `1px solid ${borderColorForInnerElements}`,\r\n                          background: inputsBackground,\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </CustomMaskInput>\r\n                  {errors.paymentInfo?.cvc && (\r\n                    <p className={styles.errorInputs}>\r\n                      {errors.paymentInfo?.cvc.message}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                {/* </Grid> */}\r\n              </div>\r\n            </div>\r\n            <div\r\n              // item\r\n              className={styles.checkboxWrapper}\r\n            >\r\n              <CheckboxLabel id=\"input\">\r\n                <CheckboxInput\r\n                  type=\"checkbox\"\r\n                  onClick={() => setChecked(!checked)}\r\n                  htmlFor=\"input\"\r\n                  // className=\"checkboxInput\"\r\n                />\r\n                <Checkbox\r\n                  fontColor={fontColor}\r\n                  // className=\"checkboxSpan\"\r\n                  // style={{ border: `1px solid ${fontColor}` }}\r\n                ></Checkbox>\r\n              </CheckboxLabel>\r\n              {/* <a underline=\"always\" style={{ color: \"#BABABA\" }}> */}\r\n              <TermsOfUse />\r\n              {/* </a> */}\r\n              {/* <a underline=\"always\" style={{ color: \"#BABABA\" }}> */}\r\n              <PrivacyPolicy />\r\n              {/* </a> */}\r\n            </div>\r\n            <div\r\n              // item\r\n              className={styles.buttonGroupBlock}\r\n            >\r\n              <div\r\n                // container\r\n                // direction=\"row\"\r\n                // alignItems=\"center\"\r\n                // justify=\"center\"\r\n                // spacing={1}\r\n                // className={classes.buttonGroup}\r\n                className={styles.buttonGroupBlockContainer}\r\n              >\r\n                {/* <Grid item xs={6}> */}\r\n                <button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  // fullWidth\r\n                  onClick={back}\r\n                  // startIcon={<BackArrowIcon />}\r\n                  // className={classes.backButtonSelf}\r\n                  className={styles.buttonBackSelf}\r\n                  style={{\r\n                    background: backAndNextButtonsColor,\r\n                    color: fontColor,\r\n                  }}\r\n                >\r\n                  Back\r\n                </button>\r\n                {/* </Grid> */}\r\n                {/* <Grid item xs={6}> */}\r\n                <button\r\n                  // variant=\"contained\"\r\n                  // fullWidth\r\n                  type=\"submit\"\r\n                  // color=\"primary\"\r\n                  // className={classes.payButtonSelf}\r\n                  disabled={!checked}\r\n                  className={styles.buttonNextSelf}\r\n                  style={{\r\n                    opacity: !checked ? \"0.5\" : \"1\",\r\n                    background: backAndNextButtonsColor,\r\n                    color: fontColor,\r\n                  }}\r\n                >\r\n                  Pay ${total}\r\n                </button>\r\n                {/* </Grid> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </FormProvider>\r\n  )\r\n}\r\n\r\nexport default PaymentUIComponent\r\n\r\nconst CheckboxLabel = styled.label`\r\n  position: relative;\r\n  // padding-left: 35px;\r\n  margin-bottom: 12px;\r\n  cursor: pointer;\r\n  font-size: 22px;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  margin-right: 40px;\r\n  &:hover {\r\n    span {\r\n      -webkit-box-shadow: 0px 0px 5px -1px #ffffff;\r\n      box-shadow: 0px 0px 5px -1px #ffffff;\r\n    }\r\n  }\r\n  input:checked ~ span {\r\n    background-color: transparent;\r\n  }\r\n\r\n  input:checked ~ span:after {\r\n    display: block;\r\n  }\r\n`\r\nconst Checkbox = styled.span`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 25px;\r\n  width: 25px;\r\n  background-color: transparent;\r\n  border: 1px solid ${(props) => props.fontColor};\r\n  border-radius: 5px;\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    display: none;\r\n  }\r\n  &:after {\r\n    left: 9px;\r\n    top: 5px;\r\n    width: 5px;\r\n    height: 10px;\r\n    border: solid ${(props) => props.fontColor};\r\n    border-width: 0 3px 3px 0;\r\n    -webkit-transform: rotate(45deg);\r\n    -ms-transform: rotate(45deg);\r\n    transform: rotate(45deg);\r\n  }\r\n`\r\n\r\nconst CheckboxInput = styled.input`\r\n  position: absolute;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  height: 0;\r\n  width: 0;\r\n\r\n  &:checked + ${Checkbox} {\r\n    &:after {\r\n      display: block;\r\n    }\r\n  }\r\n  &:checked + ${Checkbox} {\r\n    background-color: transparent;\r\n  }\r\n`\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\Preview\\PreviewUIComponent.js",["340","341","342","343","344","345","346","347","348","349","350","351"],"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\ReservationFailed\\ReservationFailed.js",[],"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\AdressFormStyles.js",[],"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\AdressFormUIComponent.js",["352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381"],"// import DateFnsUtils from \"@date-io/date-fns\"\r\nimport { ListItem, TextField, useMediaQuery } from \"@material-ui/core\"\r\n// import Button from \"@material-ui/core/Button\"\r\n// import Grid from \"@material-ui/core/Grid\"\r\n// import InputAdornment from \"@material-ui/core/InputAdornment\"\r\n\r\n// import Switch from \"@material-ui/core/Switch\"\r\n// import Typography from \"@material-ui/core/Typography\"\r\n\r\n// import * as yup from \"yup\"\r\n// import Autocomplete from \"@material-ui/lab/Autocomplete\"\r\n// import { MuiPickersUtilsProvider } from \"@material-ui/pickers\"\r\nimport React, { useContext, useRef, useState } from \"react\"\r\nimport { Controller, FormProvider, useForm } from \"react-hook-form\"\r\n// import { connect } from \"react-redux\"\r\n// import { placesApi } from \"../../../../api/api\"\r\n// import {\r\n//   ClockIcon,\r\n//   DateIcon,\r\n//   HourlyIcon,\r\n//   LeftArrowForAdressForm,\r\n//   MeetAndGreetIconBlack,\r\n//   PlaneIcon,\r\n//   RightArrowForAdressForm,\r\n//   SafetySeatIcon,\r\n//   Ticket,\r\n// } from \"../../../../assets/icons\"\r\n// import { getCarsByType } from \"../../../../Redux/car-reducer\"\r\nimport GoogleMap from \"../../../GoogleMap/GoogleMapContainer/GoogleMap\"\r\n// import { getCompanyCars } from \"../../../../Redux/car-reducer\"\r\n// import {\r\n//   CustomFormInput,\r\n//   DateInputControl,\r\n// } from \"../CustomFormInput/CustomFormInput\"\r\nimport Hours from \"./Hours/Hours\"\r\nimport PassengerQuantity from \"./PassengerQuantity/PassengerQuantity\"\r\n// import { withStyles } from \"@material-ui/styles\"\r\n\r\nimport Carousel, { consts } from \"react-elastic-carousel\"\r\n\r\n// import \"../index.css\"\r\n// import { setHourlyRedux } from \"../../../../Redux/hourly-reducer\"\r\n// import { setGateMeetingRedux } from \"../../../../Redux/gate-meeting-reducer\"\r\n// import { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\"\r\nimport SafetySeat from \"./SafetySeat/SafetySeat\"\r\nimport ReactInputMask from \"react-input-mask\"\r\nimport Luggage from \"./Luggage/Luggage\"\r\nimport { AntSwitch, useStyles } from \"./AdressFormStyles\"\r\nimport styles from \"./AdressFormStyles/AdressForm.module.scss\"\r\n// import { StylesProvider } from \"@material-ui/core/styles\"\r\nimport \"./AdressFormStyles/AdressFormDatePickerSeparatedStyles.scss\"\r\nimport { Switch } from \"../../../Helpers/Switch/Switch\"\r\nimport \"./AdressFormStyles/AdressFormCarousel.scss\"\r\nimport CalendarPicker from \"@mui/lab/CalendarPicker\"\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\"\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\"\r\nimport { Modal } from \"../../../Helpers/Modal/Modal\"\r\nimport ThemeContext from \"../../../../context\"\r\nimport {\r\n  ClockIcon,\r\n  DateIcon,\r\n  HourlyIcon,\r\n  MeetAndGreetIcon,\r\n  MeetAndGreetIconWhite,\r\n  PlaneIcon,\r\n  SafetySeatIcon,\r\n  Ticket,\r\n} from \"../../../../assets/icons\"\r\n\r\nimport styled from \"styled-components\"\r\n\r\n{\r\n  /*компонента перед экспортом обернута в react.memo*/\r\n}\r\n\r\nconst AdressFormwithoutReactMemo = ({\r\n  next,\r\n  carTypes,\r\n  pageSize,\r\n  getCompanyCars,\r\n  setFormData,\r\n  formData,\r\n  setHourlyRedux,\r\n  setGateMeetingRedux,\r\n  gateMeeting,\r\n  hourlyAndSeatsRedux,\r\n  setSafetySeatCount,\r\n  setBoosterSeatCount,\r\n  backgroundScrollStopForTimePicker,\r\n  setBackgroundScrollStopForTimePicker,\r\n  resetInputs,\r\n  setDateForDefaultValue,\r\n  setTimeForDefaultValue,\r\n  setTimeForDefaultValueAMPM,\r\n  setTimeForDefaultValueAlignment,\r\n  setPassengersQuantityForBackStep,\r\n  isBoosterSeatExistOnBackend,\r\n  isSafetySeatExistOnBackend,\r\n  airlines,\r\n  alignment,\r\n  bookingType,\r\n  boosterSeat,\r\n  carSelectionID,\r\n  childSafetySeat,\r\n  destinations,\r\n  flightNumber,\r\n  formatChars,\r\n  handleChangeAMPM,\r\n  handleClick,\r\n  // handleInput,\r\n  handleSubmit,\r\n  hourly,\r\n  hoursAddressForm,\r\n  isAirline,\r\n  luggage,\r\n  methods,\r\n  myArrow,\r\n  onSubmit,\r\n  passengers,\r\n  redBorderOnAirlines,\r\n  redBorderOnSubmit,\r\n  redBorderOnSubmit2,\r\n  redBorderOnSubmitForCarType,\r\n  redBorderOnSubmitForDate,\r\n  redBorderOnSubmitForPassengers,\r\n  redBorderOnSubmitForTime,\r\n  redBorderOnSubmitForTime2,\r\n  redBorderOnSubmitForTime3,\r\n  redBorderOnSubmitForTime4,\r\n  redBorderOnSubmitForTime5,\r\n  redBorderOnSubmitForTime6,\r\n  safetySeat,\r\n  setAirlineId,\r\n  setBoosterSeat,\r\n  setChildSafetySeat,\r\n  setDestinations,\r\n  setFlightNumber,\r\n  setHourly,\r\n  setHoursAddressForm,\r\n  setIsAirportPickupIncludedLocalState,\r\n  setIsGateMeeting,\r\n  setLuggage,\r\n  setPassengers,\r\n  setSafetySeat,\r\n  // setValue,\r\n  date,\r\n  setDate,\r\n  show,\r\n  setShow,\r\n  AMPM,\r\n  register,\r\n  control,\r\n  fetchAirlines,\r\n  extractAirlineId,\r\n  airlineName,\r\n  time,\r\n  setTime,\r\n}) => {\r\n  // const classes = useStyles()\r\n  const isMobile = useMediaQuery(\"(max-width:530px)\")\r\n\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiuses,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n    inputsBackground,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n  } = useContext(ThemeContext)\r\n\r\n  const [card, setCard] = useState()\r\n  const inputCard = useRef()\r\n  const startsWithTwo = time[0] === \"2\"\r\n\r\n  const handleChange = () => {\r\n    const comma = \":\"\r\n\r\n    const setZeroOrNot = (timeValue1) => {\r\n      if (timeValue1 > 1) {\r\n        return 0\r\n      }\r\n      return timeValue1\r\n    }\r\n    const timeValue = inputCard.current.value\r\n      .replace(/\\D/g, \"\")\r\n      .match(/(\\d{0,1})(\\d{0,1})(\\d{0,1})(\\d{0,1})/)\r\n    inputCard.current.value = timeValue[4]\r\n      ? `${setZeroOrNot(timeValue[1])}${timeValue[2]}${\r\n          (timeValue[3] || timeValue[2]) && comma\r\n        }${timeValue[3]}${timeValue[4]}`\r\n      : `${timeValue[1]}${(timeValue[3] || timeValue[2]) && comma}${\r\n          timeValue[2]\r\n        }${timeValue[3]}`\r\n    // const numbers = inputCard.current.value.replace(/(\\D)/g, \"\")\r\n    // setCard(numbers)\r\n\r\n    // if (inputCard.current.value == \"0_:__\") {\r\n    //   setTimeMask(true)\r\n    // }\r\n    // if (inputCard.current.value == \"1_:__\") {\r\n    //   setTimeMask(false)\r\n    // }\r\n    setTime(inputCard.current.value)\r\n    setTimeForDefaultValue(inputCard.current.value)\r\n    console.log(timeValue)\r\n  }\r\n\r\n  // const [time, setTime] = useState(\"\")\r\n\r\n  // const [timeMask, setTimeMask] = useState(false)\r\n\r\n  // const handleInput = (event) => {\r\n  //   if (event.target.value == \"0_:__\") {\r\n  //     setTimeMask(true)\r\n  //   }\r\n  //   if (event.target.value == \"1_:__\") {\r\n  //     setTimeMask(false)\r\n  //   }\r\n  //   setTime(event.target.value)\r\n  //   // const emir = \"00:10\"\r\n  //   // console.log(event.target.value)\r\n  //   // console.log(time)\r\n  //   // console.log(regexp.test(emir))\r\n  //   console.log(\r\n  //     event.target.value.match(/\\d+/),\r\n  //     event.target.value.substr(event.target.value.indexOf(\":\")).match(/\\d+/)\r\n  //   )\r\n  // }\r\n  const MeetAndGreetSwitchBlock = (\r\n    <>\r\n      <div className={styles.meetAndGreetWrapper}>\r\n        <div\r\n          // container\r\n          // direction=\"row\"\r\n          // alignItems=\"center\"\r\n          // justify=\"space-between\"\r\n          className={styles.meetAndGreetContainer}\r\n        >\r\n          <div\r\n            // container\r\n            // direction=\"row\"\r\n            // alignItems=\"center\"\r\n            // style={{ paddingLeft: \"8px\" }}\r\n            className={styles.meetAndGreetIconAndNameContainer}\r\n          >\r\n            {/* <span className={styles.meetAndGreetIconSelf}></span> */}\r\n            <MeetAndGreetIcon color={fontColor} />\r\n            <span\r\n              // className={classes.swichesTextColor}\r\n              // style={{\r\n              //   fontSize: \"15px\",\r\n              //   marginLeft: \"7px\",\r\n              // }}\r\n              className={styles.meetAndGreetIconAndNameTitle}\r\n            >\r\n              {\"Meet & Greet/Luggage Assist\"}\r\n            </span>\r\n          </div>\r\n\r\n          <div className={styles.meetAndGreetSwitch}>\r\n            {/* <AntSwitch\r\n                            onClick={() => {\r\n                              if (gateMeeting == false) {\r\n                                // setIsGateMeeting(true)\r\n                                setGateMeetingRedux(true)\r\n                                setIsGateMeeting(true)\r\n                                setIsAirportPickupIncludedLocalState(true)\r\n                                console.log(\"true\")\r\n                              } else {\r\n                                // setIsGateMeeting(false)\r\n                                setGateMeetingRedux(false)\r\n                                setIsGateMeeting(false)\r\n                                setIsAirportPickupIncludedLocalState(false)\r\n                                console.log(\"false\")\r\n                              }\r\n                              // setIsGateMeeting(!isGateMeeting)\r\n                              // setTimeout(() => {\r\n                              //   console.log(isGateMeeting)\r\n                              //   if (isGateMeeting == true) {\r\n                              //     setGateMeetingRedux(true)\r\n                              //   } else {\r\n                              //     setGateMeetingRedux(false)\r\n                              //   }\r\n                              // }, 1500)\r\n                            }}\r\n                            color=\"primary\"\r\n                          /> */}\r\n            <Switch\r\n              checked={gateMeeting}\r\n              onClick={() => {\r\n                if (gateMeeting == false) {\r\n                  // setIsGateMeeting(true)\r\n                  setGateMeetingRedux(true)\r\n                  setIsGateMeeting(true)\r\n                  setIsAirportPickupIncludedLocalState(true)\r\n                  console.log(\"true\")\r\n                } else {\r\n                  // setIsGateMeeting(false)\r\n                  setGateMeetingRedux(false)\r\n                  setIsGateMeeting(false)\r\n                  setIsAirportPickupIncludedLocalState(false)\r\n                  console.log(\"false\")\r\n                }\r\n                // setIsGateMeeting(!isGateMeeting)\r\n                // setTimeout(() => {\r\n                //   console.log(isGateMeeting)\r\n                //   if (isGateMeeting == true) {\r\n                //     setGateMeetingRedux(true)\r\n                //   } else {\r\n                //     setGateMeetingRedux(false)\r\n                //   }\r\n                // }, 1500)\r\n              }}\r\n              numberToIdentify={1}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Luggage luggage={luggage} setLuggage={setLuggage} />\r\n    </>\r\n  )\r\n\r\n  React.useEffect(() => {\r\n    fetchAirlines()\r\n  }, [])\r\n  // console.log(backgroundColor)\r\n\r\n  return (\r\n    <div\r\n      className={styles.mainWrapper}\r\n      style={{ backgroundColor: ThemeProviderAppBackgroundColor }}\r\n    >\r\n      <FormProvider {...methods} style={{ width: \"100%\" }}>\r\n        <form onSubmit={handleSubmit(onSubmit)} style={{ width: \"100%\" }}>\r\n          <div className={styles.mapAndDirectionsWrapper}>\r\n            <GoogleMap\r\n              setDestinations={setDestinations}\r\n              destinations={destinations}\r\n              orderAddressDetails={formData.orderAddressDetails}\r\n              // setValue={setValue}\r\n              redBorderOnSubmit={redBorderOnSubmit}\r\n              redBorderOnSubmit2={redBorderOnSubmit2}\r\n            />\r\n          </div>\r\n          <div className={styles.underMapOptionsWrapper}>\r\n            <div className={styles.underMapOptionsContainer}>\r\n              {(isAirline || formData.isAirportPickupIncluded) &&\r\n                (formData.bookingType === 3 || bookingType === 3) && (\r\n                  <div\r\n                    // className={\r\n                    //   redBorderOnAirlines\r\n                    //     ? classes.redBorderForAirlines\r\n                    //     : classes.redBorderForAirlinesDefault\r\n                    // }\r\n                    className={styles.underMapOptionsContainerForAirlines}\r\n                  >\r\n                    <div className={styles.airlinesItem}>\r\n                      {/* <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={airlines}\r\n                        defaultValue={null}\r\n                        autoHighlight\r\n                        disablePortal\r\n                        getOptionLabel={(option) => option.name}\r\n                        classes={{\r\n                          popupIndicator: classes.popupIndicator,\r\n                          option: classes.option,\r\n                          paper: classes.selectedOption,\r\n                        }}\r\n                        renderOption={(option) => (\r\n                          <>\r\n                            <span>{option.code}</span>\r\n                            {option.name} ({option.code})\r\n                          </>\r\n                        )}\r\n                        renderInput={(params) => {\r\n                          params.InputProps.startAdornment = (\r\n                            <InputAdornment\r\n                              position=\"end\"\r\n                              style={{ marginLeft: \"11px\", marginRight: \"8px\" }}\r\n                            >\r\n                              <PlaneIcon />\r\n                            </InputAdornment>\r\n                          )\r\n                          return (\r\n                            <input\r\n                              {...params}\r\n                              // fullWidth\r\n                              placeholder=\"Airlines\"\r\n                              className={styles.airLinesInput}\r\n                              // className={classes.airLinesInput}\r\n                              // variant=\"standard\"\r\n                              // style={{\r\n                              //   height: \"40px\",\r\n                              //   width: \"99.5%\",\r\n                              //   backgroundColor: \"white\",\r\n                              //   boxShadow: \"0px 5px 30px rgba(0, 0, 0, 0.1)\",\r\n                              //   // paddingLeft: \"10px\",\r\n                              //   // paddingRight: \"10px\",\r\n                              //   borderRadius: \"0px\",\r\n                              // }}\r\n                              // InputProps={{\r\n                              //   ...params.InputProps,\r\n                              //   classes: {\r\n                              //     root: classes.inputDateTime,\r\n                              //     input: classes.input, // class name, e.g. `classes-nesting-root-x`\r\n                              //     notchedOutline: classes.noBorder,\r\n                              //   },\r\n                              //   disableUnderline: true,\r\n                              // }}\r\n                            />\r\n                          )\r\n                        }}\r\n                        onChange={(event, newValue) => {\r\n                          newValue\r\n                            ? setAirlineId(newValue.id)\r\n                            : setAirlineId(null)\r\n                        }}\r\n                        name=\"airlines\"\r\n                      /> */}\r\n                      <PlaneIcon color={fontColor} />\r\n\r\n                      <select\r\n                        // {...params}\r\n                        // fullWidth\r\n                        // className={classes.inputPlaceholderFontSize}\r\n                        // placeholder=\"Airlines\"\r\n                        // variant=\"standard\"\r\n                        // style={{ background: \"transparent\" }}\r\n                        autoComplete=\"off\"\r\n                        // InputProps={{\r\n                        //   ...params.InputProps,\r\n                        //   style: { inputStyle },\r\n                        //   classes: {\r\n                        //     root: classes.inputRootAutocomplete,\r\n                        //     underline: classes.noBorder,\r\n                        //     input: classes.input,\r\n                        //   },\r\n                        //   // disableUnderline: true,\r\n                        // }}\r\n                        // list=\"airlines-list\"\r\n                        // className={\r\n                        //   styles.cardholderInformationInputWithFullWidthSelf\r\n                        // }\r\n                        // onChange={(event, newValue) => {\r\n                        //   console.log(cities)\r\n                        //   newValue\r\n                        //     ? setCitiesId(newValue.id)\r\n                        //     : setCitiesId(null)\r\n                        // }}\r\n                        onChange={(event, newValue) => {\r\n                          event.target.value\r\n                            ? extractAirlineId(event.target.value)\r\n                            : setAirlineId(null)\r\n                        }}\r\n                        value={airlineName}\r\n                        className={styles.airLinesInput}\r\n                        style={{\r\n                          color: inputsFontColor,\r\n                          border: `1px solid ${borderColorForInnerElements}`,\r\n                          background: inputsBackground,\r\n                        }}\r\n                      >\r\n                        <option\r\n                          // onChange={(event, newValue) => {\r\n                          //   newValue\r\n                          //     ? setCitiesId(newValue.id)\r\n                          //     : setCitiesId(null)\r\n                          // }}\r\n                          value=\"\"\r\n                          disabled\r\n                          selected\r\n                          hidden\r\n                        >\r\n                          Airlines\r\n                        </option>\r\n                        {airlines.map((airline) => (\r\n                          <option\r\n                            // onChange={(event, newValue) => {\r\n                            //   newValue\r\n                            //     ? setCitiesId(newValue.id)\r\n                            //     : setCitiesId(null)\r\n                            // }}\r\n                            value={airline.name}\r\n                          >\r\n                            {airline.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                    <div className={styles.flightNumberContainer}>\r\n                      <div className={styles.flightNumberItem}>\r\n                        <Ticket color={fontColor} />\r\n                        <input\r\n                          name=\"flightNumber\"\r\n                          // variant=\"standard\"\r\n                          placeholder=\"Flight number\"\r\n                          // className={classes.flightNumberInput}\r\n                          className={styles.flightNumberInput}\r\n                          autoComplete=\"off\"\r\n                          // style={{\r\n                          //   height: \"100%\",\r\n                          //   // border: \"none\",\r\n\r\n                          //   backgroundColor: \"black\",\r\n                          //   // boxShadow: \"0px 5px 30px rgba(0, 0, 0, 0.1)\",\r\n                          //   // paddingLeft: \"10px\",\r\n                          //   // paddingRight: \"10px\",\r\n                          //   width: \"99.5%\",\r\n                          //   marginBottom: \"0px\",\r\n                          //   marginTop: \"0px\",\r\n                          //   borderRadius: \"0px\",\r\n                          // }}\r\n                          style={{\r\n                            color: inputsFontColor,\r\n                            border: `1px solid ${borderColorForInnerElements}`,\r\n                            background: inputsBackground,\r\n                          }}\r\n                          defaultValue={null}\r\n                          value={flightNumber}\r\n                          onChange={(e) => setFlightNumber(e.target.value)}\r\n                          // inputProps={{ style: inputStyle }}\r\n                          // InputProps={{\r\n                          //   classes: {\r\n                          //     root: classes.inputDateTime,\r\n                          //     input: classes.input, // class name, e.g. `classes-nesting-root-x`\r\n                          //     underline: classes.noBorder,\r\n                          //   },\r\n                          //   startAdornment: (\r\n                          //     <InputAdornment\r\n                          //       position=\"start\"\r\n                          //       style={{\r\n                          //         marginRight: \"10px\",\r\n                          //         marginLeft: \"14px\",\r\n                          //       }}\r\n                          //     >\r\n                          //       <Ticket />\r\n                          //     </InputAdornment>\r\n                          //   ),\r\n                          // }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              <div className={styles.dateTimeBlock}>\r\n                {/* <MuiPickersUtilsProvider utils={DateFnsUtils}> */}\r\n                <div className={styles.dateTimeBlockContainer}>\r\n                  <div\r\n                    // className={\r\n                    //   redBorderOnSubmitForDate\r\n                    //     ? classes.noBorderRed\r\n                    //     : classes.noBorderDefault\r\n                    // }\r\n                    className={styles.datePicker}\r\n                  >\r\n                    {/* <ThemeProvider theme={materialTheme}> */}\r\n                    {/* <StylesProvider injectFirst>\r\n                        <DateInputControl\r\n                          name=\"orderStartDate\"\r\n                          // inputVariant=\"primary\"\r\n                          // label=\"Pick up Date\"\r\n                          // inputVariant=\"outlined\"\r\n                          // style={{\r\n                          //   backgroundColor: \"black\",\r\n                          //   paddingLeft: \"15px\",\r\n                          //   boxShadow: \"4px 5px 30px rgba(0, 0, 0, 0.1)\",\r\n                          //   borderRadius: \"0px\",\r\n                          //   height: \"38px\",\r\n\r\n                          //   // width: \"auto\",\r\n                          //   // \"&.MuiDialog-paper .MuiPickersModal-dialogRoot .MuiDialog-paperScrollPaper .MuiDialog-paperWidthSm .MuiPaper-elevation24 .MuiPaper-rounded\":\r\n                          //   //   {\r\n                          //   //     zIndex: \"1000000000000000000\",\r\n                          //   //   },\r\n                          // }}\r\n                          placeholder=\"Pick up Date\"\r\n                          defaultValue={\r\n                            formData.dateForDefaultValue && !resetInputs\r\n                              ? formData.dateForDefaultValue\r\n                              : null\r\n                          }\r\n                          disablePast\r\n                          className={styles.datePickerSelf}\r\n                          // fullWidth\r\n                          // onChange={(event, x) => {\r\n                          //   handleDateChange(event)\r\n                          //   console.log(x)\r\n                          // }}\r\n                          // classes={{\r\n                          //   root: \"datePickerSelfRoot\", // class name, e.g. `classes-nesting-root-x`\r\n                          //   label: \"datePickerSelf\", // class name, e.g. `classes-nesting-label-x`\r\n                          // }}\r\n                          autoOk={true}\r\n                          InputProps={{\r\n                            classes: {\r\n                              root: styles.datePickerSelfRoot,\r\n                              input: styles.datePickerSelfInput, // class name, e.g. `classes-nesting-root-x`\r\n                              // notchedOutline: redBorderOnSubmitForDate\r\n                              //   ? classes.noBorderRed\r\n                              //   : classes.noBorderDefault,\r\n                            },\r\n                            // disableUnderline: true,\r\n                            // startAdornment: (\r\n                            //   <InputAdornment\r\n                            //     position=\"start\"\r\n                            //     style={{\r\n                            //       marginRight: \"10px\",\r\n                            //       marginLeft: \"-3px\",\r\n                            //     }}\r\n                            //   >\r\n                            //     <DateIcon />\r\n                            //   </InputAdornment>\r\n                            // ),\r\n                          }}\r\n                        />\r\n                      </StylesProvider> */}\r\n                    <DateIcon color={fontColor} />\r\n                    <input\r\n                      onClick={() => setShow(true)}\r\n                      className={\r\n                        redBorderOnSubmitForDate\r\n                          ? styles.datePickerOpenButtonWithRedBorder\r\n                          : styles.datePickerOpenButton\r\n                      }\r\n                      // value={\r\n                      //   date\r\n                      //     ? new Date(date).toLocaleDateString(\"en-US\")\r\n                      //     : \"Pick up Date\"\r\n                      // }\r\n                      placeholder=\"Pick up Date\"\r\n                      value={\r\n                        formData.dateForDefaultValue && !resetInputs\r\n                          ? formData.dateForDefaultValue\r\n                          : date?.toLocaleDateString(\"en-US\")\r\n                      }\r\n                      style={{\r\n                        color: inputsFontColor,\r\n                        border: !redBorderOnSubmitForDate\r\n                          ? `1px solid ${borderColorForInnerElements}`\r\n                          : `1px solid red`,\r\n                        background: inputsBackground,\r\n                      }}\r\n                    >\r\n                      {/* <div className={styles.datePickerOpenButtonIcon}></div>\r\n                      <span className={styles.datePickerOpenButtonText}>\r\n                        \r\n                      </span> */}\r\n                    </input>\r\n                    {/* {show && ( */}\r\n                    <Modal onClose={() => setShow(false)} show={show}>\r\n                      <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                        <div\r\n                        // onClick={() => {\r\n                        //   setShow(false)\r\n                        // }}\r\n                        >\r\n                          {/* <Controller\r\n                            name=\"orderStartDate\"\r\n                            control={control}\r\n                            defaultValue={\r\n                              formData.dateForDefaultValue && !resetInputs\r\n                                ? formData.dateForDefaultValue\r\n                                : null\r\n                            }\r\n                            render={() => ( */}\r\n                          {/* <ClockIcon color={fontColor} /> */}\r\n                          <CalendarPicker\r\n                            date={date}\r\n                            onChange={(newDate) => {\r\n                              console.log(newDate)\r\n                              if (newDate instanceof Date) {\r\n                                setShow(false)\r\n                              }\r\n                              setDateForDefaultValue(\r\n                                newDate.toLocaleDateString(\"en-US\")\r\n                              )\r\n                              setDate(newDate)\r\n                            }}\r\n\r\n                            // {...rest}\r\n                          />\r\n                          {/* )}\r\n                          /> */}\r\n                        </div>\r\n                      </LocalizationProvider>\r\n                    </Modal>\r\n                    {/* )} */}\r\n\r\n                    {/* </ThemeProvider> */}\r\n                  </div>\r\n                  <div\r\n                    // InputProps={{\r\n                    //   classes: {\r\n                    //     root: classes.inputTimehover,\r\n                    //     input: classes.inputTimehover2, // class name, e.g. `classes-nesting-root-x`\r\n                    //   },\r\n                    // }}\r\n                    className={styles.timePicker}\r\n                  >\r\n                    {/* <ReactInputMask\r\n                      name=\"orderStartTime\"\r\n                      mask=\"71:98\"\r\n                      autoComplete=\"off\"\r\n                      maskChar=\"_\"\r\n                      // alwaysShowMask={false}\r\n                      formatChars={formatChars}\r\n                      // mask={mask}\r\n                      onChange={(e) => handleInput(e)}\r\n                      // onChange={(e) => console.log(\"EMIR\")}\r\n                      // value={time}\r\n\r\n                      // className={styles.timePickerMask}\r\n                      \r\n                    >\r\n                      {(inputProps) => {\r\n                        return ( */}\r\n                    <div className={styles.timePickerContainer}>\r\n                      <ClockIcon color={fontColor} />\r\n                      <input\r\n                        // {...inputProps}\r\n                        // variant=\"outlined\"\r\n                        name=\"orderStartTime\"\r\n                        placeholder=\"hh:mm\"\r\n                        autoComplete=\"off\"\r\n                        className={\r\n                          // redBorderOnSubmitForTime ||\r\n                          // redBorderOnSubmitForTime2 ||\r\n                          // redBorderOnSubmitForTime3 ||\r\n                          // redBorderOnSubmitForTime4 ||\r\n                          // redBorderOnSubmitForTime5 ||\r\n                          // redBorderOnSubmitForTime6\r\n                          //   ? styles.timePickerInputWithRedBorder\r\n                          // :\r\n                          styles.timePickerInput\r\n                        }\r\n                        // setTimeMask={setTimeMask}\r\n                        setTime={setTime}\r\n                        ref={inputCard}\r\n                        onClick={(event) => {\r\n                          const { value } = event.target\r\n                          const position = value.length\r\n                          event.target.setSelectionRange(position, position)\r\n                        }}\r\n                        onChange={handleChange}\r\n                        // value={\r\n                        //   !resetInputs ? formData.timeForDefaultValue : null\r\n                        // }\r\n                        style={{\r\n                          color: inputsFontColor,\r\n                          border:\r\n                            redBorderOnSubmitForTime ||\r\n                            redBorderOnSubmitForTime2 ||\r\n                            redBorderOnSubmitForTime3 ||\r\n                            redBorderOnSubmitForTime4 ||\r\n                            redBorderOnSubmitForTime5 ||\r\n                            redBorderOnSubmitForTime6\r\n                              ? `1px solid red`\r\n                              : `1px solid ${borderColorForInnerElements}`,\r\n                          background: inputsBackground,\r\n                          textAlign: \"right\",\r\n                          paddingRight: \"78px\",\r\n                        }}\r\n                        value={\r\n                          !resetInputs ? formData.timeForDefaultValue : null\r\n                        }\r\n                      />\r\n                      <div\r\n                        // color=\"primary\"\r\n                        // value={\r\n                        //   formData.timeForDefaultValueAMPM?.alignment ||\r\n                        //   formData.timeForDefaultValueAMPM?.ampm\r\n                        //     ? formData.timeForDefaultValueAMPM?.ampm\r\n                        //     : alignment\r\n                        // }\r\n                        // exclusive\r\n                        // onChange={handleChangeAMPM}\r\n                        // style={{\r\n                        //   display: \"flex\",\r\n                        //   flexDirection: \"row\",\r\n                        //   alignItems: \"center\",\r\n                        //   marginRight: \"-8px\",\r\n                        // }}\r\n                        className={styles.toggleButtonsContainer}\r\n                        // style={{ background: \"transparent\" }}\r\n                      >\r\n                        <div\r\n                          // value=\"AM\"\r\n                          className={\r\n                            AMPM == \"AM\"\r\n                              ? styles.toggleButtonAMSelected\r\n                              : styles.toggleButtonAMNotSelected\r\n                          }\r\n                          // style={{\r\n                          //   width: \"26px\",\r\n                          //   height: \"20px\",\r\n                          //   fontSize: \"13px\",\r\n                          //   paddingTop: \"0px\",\r\n                          //   paddingBottom: \"0px\",\r\n                          // }}\r\n                          // onClick={(e) => {}}\r\n                          onClick={(e) => {\r\n                            e.stopPropagation()\r\n                            handleChangeAMPM(e)\r\n                          }}\r\n                          style={{\r\n                            color: fontColor,\r\n                            background:\r\n                              AMPM == \"AM\" ? `${hoverColor}` : \"transparent\",\r\n                            opacity: AMPM == \"AM\" ? \"1\" : \"0.5\",\r\n                          }}\r\n                        >\r\n                          AM\r\n                        </div>\r\n                        <div\r\n                          // value=\"PM\"\r\n                          className={\r\n                            AMPM == \"PM\"\r\n                              ? styles.toggleButtonPMSelected\r\n                              : styles.toggleButtonPMNotSelected\r\n                          }\r\n                          // style={{\r\n                          //   width: \"26px\",\r\n                          //   height: \"20px\",\r\n                          //   marginLeft: \"0px\",\r\n                          //   fontSize: \"13px\",\r\n                          //   paddingTop: \"0px\",\r\n                          //   paddingBottom: \"0px\",\r\n                          // }}\r\n                          onClick={(e) => {\r\n                            e.stopPropagation()\r\n                            handleChangeAMPM(e)\r\n                          }}\r\n                          style={{\r\n                            color: fontColor,\r\n                            background: \"transparent\",\r\n                            background:\r\n                              AMPM == \"PM\" ? `${hoverColor}` : \"transparent\",\r\n                            opacity: AMPM == \"PM\" ? \"1\" : \"0.5\",\r\n                          }}\r\n                        >\r\n                          PM\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* )\r\n                      }}\r\n                    </ReactInputMask> */}\r\n                  </div>\r\n                </div>\r\n                {/* </MuiPickersUtilsProvider> */}\r\n              </div>\r\n              <div\r\n                style={{ width: \"100%\" }}\r\n                className={styles.passengersQuantityBlock}\r\n              >\r\n                <div\r\n                  // className={\r\n                  //   redBorderOnSubmitForPassengers\r\n                  //     ? classes.redBorderForPassengers\r\n                  //     : classes.redBorderForPassengersNone\r\n                  // }\r\n                  className={styles.passengersQuantityBlockContainer}\r\n                >\r\n                  <PassengerQuantity\r\n                    passengersqState={formData.passengersQuantity}\r\n                    setPassengers={setPassengers}\r\n                    passengers={passengers}\r\n                    setPassengersQuantityForBackStep={\r\n                      setPassengersQuantityForBackStep\r\n                    }\r\n                    passengersQuantityForBackStep={\r\n                      formData.passengersQuantityForBackStep\r\n                    }\r\n                    redBorderOnSubmitForPassengers={\r\n                      redBorderOnSubmitForPassengers\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              {(isAirline || formData.isAirportPickupIncluded) &&\r\n                (formData.bookingType === 3 || bookingType === 3) &&\r\n                MeetAndGreetSwitchBlock}\r\n              {destinations[1]?.rideCheckPoint.match(/(^|\\W)Airport($|\\W)/) &&\r\n                MeetAndGreetSwitchBlock}\r\n              {(isBoosterSeatExistOnBackend || isSafetySeatExistOnBackend) && (\r\n                <div\r\n                  // item\r\n                  // style={{ width: \"100%\", marginTop: \"6px\" }}\r\n                  className={styles.safetySeatWrapper}\r\n                >\r\n                  <div\r\n                    // container\r\n                    // direction=\"row\"\r\n                    // justify=\"space-between\"\r\n                    // alignItems=\"center\"\r\n                    className={styles.safetySeatContainer}\r\n                  >\r\n                    <div\r\n                      // item\r\n                      className={styles.safetySeatIconAndNameContainer}\r\n                    >\r\n                      <SafetySeatIcon color={fontColor} />\r\n                      {/* <span className={styles.safetySeatIconSelf}></span> */}\r\n                      <span\r\n                        // className={classes.swichesTextColor}\r\n                        // style={{\r\n                        //   fontSize: \"14px\",\r\n                        //   marginLeft: \"9px\",\r\n                        // }}\r\n                        className={styles.safetySeatIconAndNameTitle}\r\n                      >\r\n                        Safety Seat\r\n                      </span>\r\n                    </div>\r\n                    {/* <AntSwitch\r\n                      color=\"primary\"\r\n                      // disabled={disableHourly}\r\n                      checked={safetySeat}\r\n                      onClick={() => {\r\n                        setSafetySeat(!safetySeat)\r\n                      }}\r\n                    /> */}\r\n                    <Switch\r\n                      checked={safetySeat}\r\n                      onClick={() => {\r\n                        setSafetySeat(!safetySeat)\r\n                      }}\r\n                      numberToIdentify={2}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <div\r\n                // item\r\n                // style={{ width: \"100%\" }}\r\n\r\n                className={styles.SafetySeatCounterWrapper}\r\n              >\r\n                {safetySeat === true && (\r\n                  <div className={styles.SafetySeatCounterContainer}>\r\n                    <SafetySeat\r\n                      setBoosterSeat={setBoosterSeat}\r\n                      setChildSafetySeat={setChildSafetySeat}\r\n                      boosterSeat={boosterSeat}\r\n                      childSafetySeat={childSafetySeat}\r\n                      isBoosterSeatExistOnBackend={isBoosterSeatExistOnBackend}\r\n                      isSafetySeatExistOnBackend={isSafetySeatExistOnBackend}\r\n                      // hoursState={formData.hours}\r\n                      // hourly={hourly}\r\n                      // hoursAddressForm={hoursAddressForm}\r\n                      // setHoursAddressForm={setHoursAddressForm}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div\r\n                // item\r\n                // style={{ width: \"100%\" }}\r\n\r\n                className={styles.hourlyWrapper}\r\n              >\r\n                <div\r\n                  // container\r\n                  // direction=\"row\"\r\n                  // justify=\"space-between\"\r\n                  // alignItems=\"center\"\r\n                  className={styles.hourlyRowContainer}\r\n                >\r\n                  <div\r\n                    // container\r\n                    // direction=\"row\"\r\n                    // alignItems=\"center\"\r\n                    // style={{ paddingLeft: \"-12px\" }}\r\n                    className={styles.hourlyIconAndNameContainer}\r\n                  >\r\n                    {/* <span className={styles.hourlyIconSelf}></span> */}\r\n                    <HourlyIcon color={fontColor} />\r\n                    <span\r\n                      // className={classes.swichesTextColor}\r\n                      // style={{ fontSize: \"14px\" }}\r\n                      className={styles.hourlyIconAndNameTitle}\r\n                    >\r\n                      Hourly\r\n                    </span>\r\n                  </div>\r\n                  {/* <AntSwitch\r\n                    color=\"primary\"\r\n                    // disabled={disableHourly}\r\n                    checked={hourly}\r\n                    onClick={() => {\r\n                      // if (hourly == false) {\r\n                      //   // // setIsGateMeeting(true)\r\n                      //   // setGateMeetingRedux(true)\r\n                      //   setHourly(true)\r\n                      //   // hourly = true\r\n                      //   console.log(\"true\")\r\n                      //   console.log(hourly)\r\n                      // } else {\r\n                      //   // setIsGateMeeting(false)\r\n                      //   // setGateMeetingRedux(false)\r\n                      //   setHourly(true)\r\n                      //   // hourly = false\r\n                      //   console.log(\"false\")\r\n                      //   console.log(hourly)\r\n                      // }\r\n                      if (!hourlyAndSeatsRedux) {\r\n                        // setIsGateMeeting(true)\r\n                        setHourlyRedux(true)\r\n                        // console.log(\"true\")\r\n                      } else {\r\n                        // setIsGateMeeting(false)\r\n                        setHourlyRedux(false)\r\n                        // console.log(\"false\")\r\n                      }\r\n                      setHourly(!hourly)\r\n\r\n                      // setHourlyRedux()\r\n                      // hourly ? setBookingType(2) : setBookingType(1)\r\n                    }}\r\n                  /> */}\r\n                  <Switch\r\n                    checked={hourly}\r\n                    onClick={() => {\r\n                      // if (hourly == false) {\r\n                      //   // // setIsGateMeeting(true)\r\n                      //   // setGateMeetingRedux(true)\r\n                      //   setHourly(true)\r\n                      //   // hourly = true\r\n                      //   console.log(\"true\")\r\n                      //   console.log(hourly)\r\n                      // } else {\r\n                      //   // setIsGateMeeting(false)\r\n                      //   // setGateMeetingRedux(false)\r\n                      //   setHourly(true)\r\n                      //   // hourly = false\r\n                      //   console.log(\"false\")\r\n                      //   console.log(hourly)\r\n                      // }\r\n                      if (!hourlyAndSeatsRedux) {\r\n                        // setIsGateMeeting(true)\r\n                        setHourlyRedux(true)\r\n                        // console.log(\"true\")\r\n                      } else {\r\n                        // setIsGateMeeting(false)\r\n                        setHourlyRedux(false)\r\n                        // console.log(\"false\")\r\n                      }\r\n                      setHourly(!hourly)\r\n\r\n                      // setHourlyRedux()\r\n                      // hourly ? setBookingType(2) : setBookingType(1)\r\n                    }}\r\n                    numberToIdentify={3}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div\r\n                // item\r\n                // style={{ width: \"100%\" }}\r\n                className={styles.hourlyCounter}\r\n              >\r\n                {hourly === true && (\r\n                  <Hours\r\n                    hoursState={formData.hours}\r\n                    hourly={hourly}\r\n                    hoursAddressForm={hoursAddressForm}\r\n                    setHoursAddressForm={setHoursAddressForm}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div\r\n                // item\r\n                className={styles.preferencesWrapper}\r\n              >\r\n                <div\r\n                  // item\r\n                  className={styles.preferencesTitleContainer}\r\n                >\r\n                  <span className={styles.preferencesTitle}>Preferences</span>\r\n                </div>\r\n                <div\r\n                  // item\r\n                  className={styles.preferencesCarsContainer}\r\n                  style={{\r\n                    borderRadius: `${borderRadiusesForInnerElements}`,\r\n                    border: redBorderOnSubmitForCarType\r\n                      ? \"1px solid red\"\r\n                      : \"1px solid transprent\",\r\n                  }}\r\n                >\r\n                  <Carousel\r\n                    renderArrow={myArrow}\r\n                    itemsToShow={3}\r\n                    pagination={false}\r\n                    transitionMs={300}\r\n                    // className={styles.carouselContainer}\r\n                    // style={{ height: \"78px\" }}\r\n                  >\r\n                    {carTypes.map((car, indexOfEachCar) => (\r\n                      <CarItemContainer\r\n                        // container\r\n                        // direction=\"column\"\r\n                        // // justify=\"center\"\r\n                        // alignItems=\"center\"\r\n                        // className={\r\n                        //   car.id === carSelectionID\r\n                        //     ? styles.carItemContainerSelected\r\n                        //     : styles.carItemContainer\r\n                        // }\r\n                        hoverColor={hoverColor}\r\n                        carsTypeColor={carsTypeColor}\r\n                        carSelected={car.id === carSelectionID}\r\n                        fontColor={fontColor}\r\n                        innerTextOnHover={innerTextOnHover}\r\n                        onClick={() => handleClick(car.id)}\r\n                        // selected={car.id === carSelectionID}\r\n                        name=\"carsValidation\"\r\n                        // style={{\r\n                        //   background:\r\n                        //     car.id === carSelectionID\r\n                        //       ? hoverColor\r\n                        //       : carsTypeColor,\r\n                        // }}\r\n                      >\r\n                        <div\r\n                          // item\r\n                          className={styles.carItemTitleContainer}\r\n                        >\r\n                          <span\r\n                            // className={classes.carFont}\r\n                            // noWrap\r\n                            // variant=\"body2\"\r\n                            className={styles.carItemTitle}\r\n                          >\r\n                            {car.name}\r\n                          </span>\r\n                        </div>\r\n                        <div item className={styles.carImageContainer}>\r\n                          <img\r\n                            alt=\"carImage\"\r\n                            src={car.imageUrl}\r\n                            className={\r\n                              indexOfEachCar == 2\r\n                                ? styles.carImageStylesForBiggerTypeOfImage\r\n                                : styles.carImage\r\n                            }\r\n                            item\r\n                            className={styles.carImage}\r\n                          />\r\n                          {console.log(indexOfEachCar == 2)}\r\n                        </div>\r\n                      </CarItemContainer>\r\n                    ))}\r\n                  </Carousel>\r\n                </div>\r\n                {/* <div\r\n                // item\r\n                // className={classes.submitButton}\r\n                > */}\r\n                <div\r\n                  // container\r\n                  // direction=\"row\"\r\n                  // alignItems=\"center\"\r\n                  // justify=\"center\"\r\n                  // spacing={1}\r\n                  className={styles.buttonGroupBlockContainer}\r\n                  // style={{\r\n                  //   paddingBottom: \"14px\",\r\n                  //   paddingLeft: \"16px\",\r\n                  //   paddingRight: \"0px\",\r\n                  // }}\r\n                >\r\n                  <button\r\n                    // variant=\"contained\"\r\n                    // fullWidth\r\n                    // onClick={() => {\r\n                    //   next()\r\n                    //   setCarId(carCard)\r\n                    // }}\r\n                    // color=\"primary\"\r\n                    // endIcon={<ForwardArrowIcon />}\r\n                    // className={classes.nextButtonSelf}\r\n                    // disabled={carCard ? false : true}\r\n                    // // style={{\r\n                    // //   height: \"50px\",\r\n                    // //   // paddingTop: \"7px\",\r\n                    // //   textTransform: \"none\",\r\n                    // // }}\r\n                    type=\"submit\"\r\n                    className={styles.buttonNextSelf}\r\n                    style={{\r\n                      background: backAndNextButtonsColor,\r\n                      color: fontColor,\r\n                    }}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n                {/* </div> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst AdressFormUIComponent = React.memo(AdressFormwithoutReactMemo)\r\n\r\nexport default AdressFormUIComponent\r\n\r\nconst CarItemContainer = styled.div`\r\n  width: 60px;\r\n height: 66px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: ${(props) => {\r\n    if (!props.carSelected) {\r\n      return props.carsTypeColor\r\n    } else {\r\n      return props.hoverColor\r\n    }\r\n  }}} ;\r\n  span{\r\n    color:\r\n    \r\n    ${(props) => {\r\n      if (props.carSelected) {\r\n        return props.innerTextOnHover\r\n      } else {\r\n        return props.fontColor\r\n      }\r\n    }}};\r\n  }\r\n\r\n  transition: 0.1s;\r\n  &:hover {\r\n    background: ${(props) => props.hoverColor};\r\n    cursor: pointer;\r\n    transition: 0.1s;\r\n\r\n    span{\r\n    color:${(props) => props.innerTextOnHover} ;\r\n  }\r\n  }\r\n`\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\Helpers\\Modal\\Modal.js",["382","383","384","385"],"import React, { useEffect } from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n// import { CSSTransition } from \"react-transition-group\"\r\nimport styles from \"./Modal.module.scss\"\r\n\r\nexport const Modal = (props) => {\r\n  const closeOnEscapeKeyDown = (e) => {\r\n    if ((e.charCode || e.keyCode) === 27) {\r\n      props.onClose()\r\n    }\r\n  }\r\n  const closeOnBodyClick = () => {\r\n    props.onClose()\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener(\"keydown\", closeOnEscapeKeyDown)\r\n\r\n    return function cleanup() {\r\n      document.body.removeEventListener(\"keydown\", closeOnEscapeKeyDown)\r\n    }\r\n  }, [])\r\n\r\n  return ReactDOM.createPortal(\r\n    // <CSSTransition\r\n    //   in={props.show}\r\n    //   unmountOnExit\r\n    //   timeout={{ enter: 0, exit: 300 }}\r\n    // >\r\n    <div\r\n      className={props.show ? styles.showModal : styles.hideModal}\r\n      onClick={props.onClose}\r\n    >\r\n      <div className={styles.modal}>\r\n        <div\r\n          className={styles.modalContent}\r\n          onClick={(e) => {\r\n            e.stopPropagation()\r\n          }}\r\n        >\r\n          {/* <div className={styles.modalHeader}>\r\n            <h4 className={styles.modalTitle}>{props.title}</h4>\r\n          </div> */}\r\n          <div className={styles.modalBody}>{props.children}</div>\r\n          {console.log(props.children)}\r\n          {props?.children?.props?.children?.type == \"div\" && (\r\n            <div className={styles.modalFooter}>\r\n              <button onClick={props.onClose} className={styles.modalOkButton}>\r\n                OK\r\n              </button>\r\n            </div>\r\n          )}\r\n          {props?.children?.type == \"div\" && (\r\n            <div className={styles.modalFooter}>\r\n              <button onClick={props.onClose} className={styles.modalOkButton}>\r\n                OK\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    // </CSSTransition>,\r\n    document.getElementById(\"widget-by-bookinglane\")\r\n  )\r\n}\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\Helpers\\Switch\\Switch.js",["386"],"import { useState } from \"react\"\r\nimport styles from \"./Switch.module.scss\"\r\n\r\nexport const Switch = (props) => {\r\n  return (\r\n    <div className={styles.switchContainer}>\r\n      <input\r\n        type=\"checkbox\"\r\n        name={`switch${props.numberToIdentify}`}\r\n        className={styles.switchSelf}\r\n        id={`switch${props.numberToIdentify}`}\r\n        // checked={props.checked}\r\n        // onClick={props.onClick}\r\n        {...props}\r\n      />\r\n      <label for={`switch${props.numberToIdentify}`}></label>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\Luggage\\Luggage.js",["387","388","389","390","391","392","393","394","395","396"],"import { makeStyles } from \"@material-ui/core\"\r\n// import Grid from \"@material-ui/core/Grid\"\r\n// import Typography from \"@material-ui/core/Typography\"\r\nimport React, { useContext } from \"react\"\r\nimport { useFormContext } from \"react-hook-form\"\r\nimport { LuggageIcon } from \"../../../../../assets/icons\"\r\nimport ThemeContext from \"../../../../../context\"\r\nimport {\r\n  // HourlyIcon,\r\n  // LuggageIcon,\r\n  MinusIcon,\r\n  PlusIcon,\r\n} from \"../../../../../assets/icons\"\r\nimport \"../../index.css\"\r\nimport styles from \"./Luggage.module.scss\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPlusMinusContainer: {\r\n    height: \"34px\",\r\n\r\n    borderBottom: \"2px solid #AC8159\",\r\n    transition: \"200ms\",\r\n    \"&:hover\": { borderBottom: \"2px solid white\", transition: \"200ms\" },\r\n  },\r\n}))\r\n\r\nconst Luggage = ({ luggage, setLuggage }) => {\r\n  const classes = useStyles()\r\n\r\n  const { register } = useFormContext()\r\n\r\n  //   const [hoursAddressForm, setHoursAddressForm] = useState(0)\r\n\r\n  const onDecrease = () => {\r\n    if (luggage === 0) {\r\n      return\r\n    }\r\n    setLuggage((luggage) => luggage - 1)\r\n  }\r\n  const onIncrease = () => {\r\n    setLuggage((luggage) => luggage + 1)\r\n  }\r\n\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiuses,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    innerTextOnHover,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n  } = useContext(ThemeContext)\r\n\r\n  //   React.useEffect(() => {\r\n  //     if (hoursState !== 0) {\r\n  //       setHourly(true)\r\n  //       setHoursAddressForm(parseInt(hoursState))\r\n  //     }\r\n  //   }, [hoursState])\r\n\r\n  return (\r\n    // <Grid\r\n    //   container\r\n    //   direction=\"row\"\r\n    //   justify=\"space-between\"\r\n    //   alignItems=\"center\"\r\n    //   style={{ marginBottom: \"4px\", marginTop: \"4px\" }}\r\n    // >\r\n    //   <Grid item>\r\n    //     <Grid container direction=\"row\" alignItems=\"center\">\r\n    //       <LuggageIcon />\r\n\r\n    //       <Typography\r\n    //         style={{ color: \"white\", fontSize: \"14px\", marginTop: \"4px\" }}\r\n    //       >\r\n    //         Luggage Count\r\n    //       </Typography>\r\n    //     </Grid>\r\n    //   </Grid>\r\n    //   <Grid item style={{ marginRight: \"8px\" }}>\r\n    //     <Grid\r\n    //       container\r\n    //       direction=\"row\"\r\n    //       justify=\"space-around\"\r\n    //       alignItems=\"center\"\r\n    //       className={classes.mainPlusMinusContainer}\r\n    //       // style={{\r\n    //       //   // background: \"#282828\",\r\n    //       //   // height: \"35px\",\r\n    //       //   // borderRadius: \"5px\",\r\n    //       //   height: \"34px\",\r\n    //       //   // paddingTop: \"-4px\",\r\n    //       // }}\r\n    //     >\r\n    //       <Grid item>\r\n    //         <span\r\n    //           onClick={onDecrease}\r\n    //           // style={{ marginRight: \"5px\" }}\r\n    //         >\r\n    //           <MinusIcon />\r\n    //         </span>\r\n    //       </Grid>\r\n    //       <Grid\r\n    //         item\r\n    //         style={{\r\n    //           textAlign: \"center\",\r\n    //           // borderBottom: \"2px solid #AC8159\",\r\n    //           // height: \"105%\",\r\n    //         }}\r\n    //       >\r\n    //         <input\r\n    //           ref={register}\r\n    //           name=\"hours\"\r\n    //           className=\"luggage\"\r\n    //           onChange={(e) => {\r\n    //             setLuggage(e.target.value)\r\n    //           }}\r\n    //           value={luggage}\r\n    //           size=\"1\"\r\n    //           style={{\r\n    //             // pointerEvents: \"none\",\r\n    //             minWidth: \"34px\",\r\n    //             maxWidth: \"34px\",\r\n    //             // marginLeft: \"2px\",\r\n    //             // marginRight: \"2.5px\",\r\n    //             // marginBottom: \"4px\",\r\n    //             backgroundColor: \"transparent\",\r\n    //             border: \"none\",\r\n    //             color: \"white\",\r\n    //             textAlign: \"center\",\r\n    //             fontFamily: \"Roboto\",\r\n    //             textTransform: \"none\",\r\n    //             fontWeight: \"400\",\r\n    //             fontSize: \"14px\",\r\n    //             height: \"100%\",\r\n    //           }}\r\n    //           type=\"number\"\r\n    //         />\r\n    //       </Grid>\r\n    //       <Grid item>\r\n    //         <span\r\n    //           onClick={onIncrease}\r\n    //           style={\r\n    //             {\r\n    //               // marginLeft: \"4px\",\r\n    //               // marginRight: \"7px\",\r\n    //             }\r\n    //           }\r\n    //         >\r\n    //           <PlusIcon />\r\n    //         </span>\r\n    //       </Grid>\r\n    //     </Grid>\r\n    //   </Grid>\r\n    // </Grid>\r\n\r\n    <div\r\n      // container\r\n      // direction=\"row\"\r\n      // justify=\"space-between\"\r\n      // alignItems=\"center\"\r\n      // style={{ marginTop: \"13px\" }}\r\n      className={styles.luggageQuantityWrapper}\r\n    >\r\n      <div\r\n        // item\r\n        className={styles.luggageQuantityIconAndTitleContainer}\r\n      >\r\n        {/* <div container direction=\"row\"> */}\r\n        {/* <NumberOfluggagesIcon\r\n          style={{ paddingLeft: \"30px\" }}\r\n        ></NumberOfluggagesIcon> */}\r\n        {/* <span className={styles.luggageQuantityIcon}></span> */}\r\n        <LuggageIcon color={fontColor} />\r\n        <span\r\n          // style={{\r\n          //   color: \"white\",\r\n          //   fontSize: \"14px\",\r\n          //   wordWrap: \"break-word\",\r\n\r\n          //   width: isMobile ? \"130px\" : \"none\",\r\n          // }}\r\n          className={styles.luggageCounterTitle}\r\n          style={{ color: fontColor }}\r\n        >\r\n          Luggage Count\r\n        </span>\r\n        {/* </div> */}\r\n      </div>\r\n      <div\r\n        // item\r\n        className={styles.luggageQuantityCounterContainer}\r\n      >\r\n        {/* <div\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-around\"\r\n          alignItems=\"center\"\r\n          className={classes.mainPlusMinusContainer}\r\n          // style={{\r\n          //   // background: \"#282828\",\r\n          //   // height: \"35px\",\r\n          //   // borderRadius: \"5px\",\r\n\r\n          //   // paddingTop: \"-4px\",\r\n          // }}\r\n        > */}\r\n        <div\r\n          // item\r\n          className={styles.luggageQuantityMinusContainer}\r\n          // style={{\r\n          //   borderBottom: \"2px solid #AC8159\",\r\n          //   \"&:hover\": { borderBottom: \"2px solid white\" },\r\n          // }}\r\n        >\r\n          <button\r\n            onClick={onDecrease}\r\n            // style={\r\n            //   {\r\n            //     // marginRight: \"5px\",\r\n            //   }\r\n            // }\r\n            style={{\r\n              background: backAndNextButtonsColor,\r\n              border: `1px solid ${borderColorForInnerElements}`,\r\n            }}\r\n            className={styles.luggageQuantityMinusSelf}\r\n            type=\"button\"\r\n          >\r\n            <MinusIcon color={fontColor} />\r\n          </button>\r\n        </div>\r\n        <div\r\n          // style={{\r\n          //   textAlign: \"center\",\r\n          //   // borderBottom: \"2px solid #AC8159\",\r\n          //   // height: \"100%\",\r\n          // }}\r\n          className={styles.luggageQuantityInputContainer}\r\n        >\r\n          <input\r\n            ref={register}\r\n            name=\"hours\"\r\n            // className=\"luggage\"\r\n            onChange={(e) => {\r\n              setLuggage(e.target.value)\r\n            }}\r\n            value={luggage}\r\n            size=\"1\"\r\n            // style={{\r\n            //   // pointerEvents: \"none\",\r\n            //   minWidth: \"34px\",\r\n            //   maxWidth: \"34px\",\r\n            //   // marginLeft: \"2px\",\r\n            //   // marginRight: \"2.5px\",\r\n            //   // marginBottom: \"4px\",\r\n            //   backgroundColor: \"transparent\",\r\n            //   border: \"none\",\r\n            //   color: \"white\",\r\n            //   textAlign: \"center\",\r\n            //   fontFamily: \"Roboto\",\r\n            //   textTransform: \"none\",\r\n            //   fontWeight: \"400\",\r\n            //   fontSize: \"14px\",\r\n            //   height: \"100%\",\r\n            // }}\r\n            style={{\r\n              background: backAndNextButtonsColor,\r\n              border: `1px solid ${borderColorForInnerElements}`,\r\n            }}\r\n            type=\"number\"\r\n            className={styles.luggageQuantityInputSelf}\r\n          />\r\n        </div>\r\n        <div\r\n          // item\r\n          className={styles.luggageQuantityPlusContainer}\r\n        >\r\n          <button\r\n            onClick={onIncrease}\r\n            // style={{ marginLeft: \"4px\" }}\r\n            style={{\r\n              background: backAndNextButtonsColor,\r\n              border: `1px solid ${borderColorForInnerElements}`,\r\n            }}\r\n            className={styles.luggageQuantityPlusSelf}\r\n            type=\"button\"\r\n          >\r\n            <PlusIcon color={fontColor} />\r\n          </button>\r\n        </div>\r\n        {/* </div> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Luggage\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\SafetySeat\\SafetySeat.js",["397","398","399","400","401","402","403","404","405","406","407"],"import { makeStyles, useMediaQuery } from \"@material-ui/core\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\n// import Typography from \"@material-ui/core/Typography\"\r\nimport React, { useContext } from \"react\"\r\nimport { useFormContext } from \"react-hook-form\"\r\nimport ThemeContext from \"../../../../../context\"\r\nimport {\r\n  MinusIcon,\r\n  // NumberOfPassengers,\r\n  // NumberOfPassengersIcon,\r\n  PlusIcon,\r\n} from \"../../../../../assets/icons\"\r\nimport \"../../index.css\"\r\nimport styles from \"./SafetySeat.module.scss\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPlusMinusContainer: {\r\n    height: \"34px\",\r\n    borderBottom: \"2px solid #AC8159\",\r\n    transition: \"200ms\",\r\n    \"&:hover\": { borderBottom: \"2px solid white\", transition: \"200ms\" },\r\n  },\r\n}))\r\n\r\nexport default React.memo(function SafetySeat({\r\n  setBoosterSeat,\r\n  setChildSafetySeat,\r\n  boosterSeat,\r\n  childSafetySeat,\r\n  isBoosterSeatExistOnBackend,\r\n  isSafetySeatExistOnBackend,\r\n}) {\r\n  const classes = useStyles()\r\n  const { register } = useFormContext()\r\n\r\n  const onDecreaseBoosterSeat = () => {\r\n    if (boosterSeat === 0) {\r\n      return\r\n    }\r\n    setBoosterSeat((boosterSeat) => boosterSeat - 1)\r\n  }\r\n  const onIncreaseBoosterSeat = () => {\r\n    if (boosterSeat === 14) {\r\n      return\r\n    }\r\n    setBoosterSeat((boosterSeat) => boosterSeat + 1)\r\n  }\r\n\r\n  const onDecreaseChildSafetySeat = () => {\r\n    if (childSafetySeat === 0) {\r\n      return\r\n    }\r\n    setChildSafetySeat((childSafetySeat) => childSafetySeat - 1)\r\n  }\r\n  const onIncreaseChildSafetySeat = () => {\r\n    if (childSafetySeat === 14) {\r\n      return\r\n    }\r\n    setChildSafetySeat((childSafetySeat) => childSafetySeat + 1)\r\n  }\r\n\r\n  //   React.useEffect(() => {\r\n  //     setPassengers(parseInt(passengersqState))\r\n  //   }, [passengersqState])\r\n  const isMobile = useMediaQuery(\"(max-width:340px)\")\r\n  const shouldSafetySeatBeColumnDirection = useMediaQuery(\"(max-width:420px)\")\r\n\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiuses,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    innerTextOnHover,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction={shouldSafetySeatBeColumnDirection ? \"column\" : \"row\"}\r\n      justify=\"space-between\"\r\n      alignItems={shouldSafetySeatBeColumnDirection ? \"flex-start\" : \"center\"}\r\n      style={{ paddingLeft: \"9px\" }}\r\n    >\r\n      {isBoosterSeatExistOnBackend && (\r\n        // <Grid\r\n        //   item\r\n        //   style={{\r\n        //     width: \"100%\",\r\n        //   }}\r\n        // >\r\n        //   <Grid\r\n        //     container\r\n        //     direction=\"row\"\r\n        //     justify=\"space-between\"\r\n        //     alignItems=\"center\"\r\n        //     style={{\r\n        //       marginTop: \"6px\",\r\n        //       marginBottom: \"15px\",\r\n        //       // width: isBoosterSeatExistOnBackend && \"100%\",\r\n        //     }}\r\n        //   >\r\n        //     <Grid item>\r\n        //       <Grid container direction=\"row\">\r\n        //         {/* <NumberOfPassengersIcon\r\n        //     style={{ paddingLeft: \"30px\" }}\r\n        //   ></NumberOfPassengersIcon> */}\r\n        //         <Typography\r\n        //           style={{\r\n        //             color: \"white\",\r\n        //             fontSize: \"12px\",\r\n        //             wordWrap: \"break-word\",\r\n        //             marginBottom: isBoosterSeatExistOnBackend ? \"2\" : \"8px\",\r\n        //             width: isMobile ? \"130px\" : \"none\",\r\n        //           }}\r\n        //         >\r\n        //           Youth Booster Seat\r\n        //         </Typography>\r\n        //       </Grid>\r\n        //     </Grid>\r\n        //     <Grid item>\r\n        //       <Grid\r\n        //         container\r\n        //         direction=\"row\"\r\n        //         justify=\"space-around\"\r\n        //         alignItems=\"center\"\r\n        //         className={classes.mainPlusMinusContainer}\r\n        //         // style={{\r\n        //         //   // background: \"#282828\",\r\n        //         //   // height: \"35px\",\r\n        //         //   // borderRadius: \"5px\",\r\n        //         //   height: \"34px\",\r\n        //         //   // paddingTop: \"-4px\",\r\n        //         // }}\r\n        //       >\r\n        //         <Grid item>\r\n        //           <span\r\n        //             onClick={onDecreaseBoosterSeat}\r\n        //             style={\r\n        //               {\r\n        //                 // marginRight: \"5px\",\r\n        //               }\r\n        //             }\r\n        //           >\r\n        //             <MinusIcon />\r\n        //           </span>\r\n        //         </Grid>\r\n        //         <Grid\r\n        //           item\r\n        //           style={{\r\n        //             textAlign: \"center\",\r\n        //             // borderBottom: \"2px solid #AC8159\",\r\n        //             // marginTop: \"6px\",\r\n        //             // paddingBottom: \"2px\",\r\n        //             // borderBottom: \"2px solid #AC8159\",\r\n        //             // height: \"105%\",\r\n        //           }}\r\n        //         >\r\n        //           <input\r\n        //             ref={register}\r\n        //             name=\"Youth Booster Seat\"\r\n        //             onChange={(e) => {\r\n        //               setBoosterSeat(e.target.value)\r\n        //             }}\r\n        //             className=\"passenger\"\r\n        //             value={boosterSeat}\r\n        //             size=\"1\"\r\n        //             style={{\r\n        //               // pointerEvents: \"none\",\r\n        //               minWidth: \"34px\",\r\n        //               maxWidth: \"34px\",\r\n        //               // marginLeft: \"2px\",\r\n        //               // marginRight: \"2.5px\",\r\n        //               // marginBottom: \"4px\",\r\n        //               backgroundColor: \"transparent\",\r\n        //               border: \"none\",\r\n        //               color: \"white\",\r\n        //               textAlign: \"center\",\r\n        //               fontFamily: \"Roboto\",\r\n        //               textTransform: \"none\",\r\n        //               fontWeight: \"400\",\r\n        //               fontSize: \"14px\",\r\n        //               height: \"100%\",\r\n        //             }}\r\n        //             type=\"number\"\r\n        //           />\r\n        //         </Grid>\r\n        //         <Grid item>\r\n        //           <span\r\n        //             onClick={onIncreaseBoosterSeat}\r\n        //             // style={{ marginLeft: \"4px\" }}\r\n        //           >\r\n        //             <PlusIcon />\r\n        //           </span>\r\n        //         </Grid>\r\n        //       </Grid>\r\n        //     </Grid>\r\n        //   </Grid>\r\n        // </Grid>\r\n\r\n        <div\r\n          // container\r\n          // direction=\"row\"\r\n          // justify=\"space-between\"\r\n          // alignItems=\"center\"\r\n          // style={{ marginTop: \"13px\" }}\r\n          className={styles.boosterSeatCounterWrapper}\r\n        >\r\n          <div\r\n            // item\r\n            className={styles.boosterSeatCounterIconAndTitleContainer}\r\n          >\r\n            {/* <div container direction=\"row\"> */}\r\n            {/* <NumberOfboosterSeatsIcon\r\n          style={{ paddingLeft: \"30px\" }}\r\n        ></NumberOfboosterSeatsIcon> */}\r\n\r\n            <span\r\n              // style={{\r\n              //   color: \"white\",\r\n              //   fontSize: \"14px\",\r\n              //   wordWrap: \"break-word\",\r\n\r\n              //   width: isMobile ? \"130px\" : \"none\",\r\n              // }}\r\n              className={styles.boosterSeatCounterTitle}\r\n              style={{ color: fontColor }}\r\n            >\r\n              Youth Booster Seat\r\n            </span>\r\n            {/* </div> */}\r\n          </div>\r\n          <div\r\n            // item\r\n            className={styles.boosterSeatCounterContainer}\r\n          >\r\n            {/* <div\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-around\"\r\n          alignItems=\"center\"\r\n          className={classes.mainPlusMinusContainer}\r\n          // style={{\r\n          //   // background: \"#282828\",\r\n          //   // height: \"35px\",\r\n          //   // borderRadius: \"5px\",\r\n\r\n          //   // paddingTop: \"-4px\",\r\n          // }}\r\n        > */}\r\n            <div\r\n              // item\r\n              className={styles.boosterSeatCounterMinusContainer}\r\n              // style={{\r\n              //   borderBottom: \"2px solid #AC8159\",\r\n              //   \"&:hover\": { borderBottom: \"2px solid white\" },\r\n              // }}\r\n            >\r\n              <button\r\n                onClick={onDecreaseBoosterSeat}\r\n                // style={\r\n                //   {\r\n                //     // marginRight: \"5px\",\r\n                //   }\r\n                // }\r\n                className={styles.boosterSeatCounterMinusSelf}\r\n                style={{\r\n                  background: backAndNextButtonsColor,\r\n                  border: `1px solid ${borderColorForInnerElements}`,\r\n                }}\r\n                type=\"button\"\r\n              >\r\n                <MinusIcon color={fontColor} />\r\n              </button>\r\n            </div>\r\n            <div\r\n              // style={{\r\n              //   textAlign: \"center\",\r\n              //   // borderBottom: \"2px solid #AC8159\",\r\n              //   // height: \"100%\",\r\n              // }}\r\n              className={styles.boosterSeatCounterInputContainer}\r\n            >\r\n              <input\r\n                ref={register}\r\n                name=\"Youth Booster Seat\"\r\n                onChange={(e) => {\r\n                  setBoosterSeat(e.target.value)\r\n                }}\r\n                // className=\"boosterSeat\"\r\n                value={boosterSeat}\r\n                size=\"1\"\r\n                // style={{\r\n                //   // pointerEvents: \"none\",\r\n                //   minWidth: \"34px\",\r\n                //   maxWidth: \"34px\",\r\n                //   // marginLeft: \"2px\",\r\n                //   // marginRight: \"2.5px\",\r\n                //   // marginBottom: \"4px\",\r\n                //   backgroundColor: \"transparent\",\r\n                //   border: \"none\",\r\n                //   color: \"white\",\r\n                //   textAlign: \"center\",\r\n                //   fontFamily: \"Roboto\",\r\n                //   textTransform: \"none\",\r\n                //   fontWeight: \"400\",\r\n                //   fontSize: \"14px\",\r\n                //   height: \"100%\",\r\n                // }}\r\n                type=\"number\"\r\n                className={styles.boosterSeatCounterInputSelf}\r\n                style={{\r\n                  background: backAndNextButtonsColor,\r\n                  border: `1px solid ${borderColorForInnerElements}`,\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              // item\r\n              className={styles.boosterSeatCounterPlusContainer}\r\n            >\r\n              <button\r\n                onClick={onIncreaseBoosterSeat}\r\n                // style={{ marginLeft: \"4px\" }}\r\n                className={styles.boosterSeatCounterPlusSelf}\r\n                style={{\r\n                  background: backAndNextButtonsColor,\r\n                  border: `1px solid ${borderColorForInnerElements}`,\r\n                }}\r\n                type=\"button\"\r\n              >\r\n                <PlusIcon color={fontColor} />\r\n              </button>\r\n            </div>\r\n            {/* </div> */}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isSafetySeatExistOnBackend && (\r\n        <div\r\n          // container\r\n          // direction=\"row\"\r\n          // justify=\"space-between\"\r\n          // alignItems=\"center\"\r\n          // style={{ marginTop: \"13px\" }}\r\n          className={styles.safetySeatCounterWrapper}\r\n        >\r\n          <div\r\n            // item\r\n            className={styles.safetySeatCounterIconAndTitleContainer}\r\n          >\r\n            {/* <div container direction=\"row\"> */}\r\n            {/* <NumberOfsafetySeatsIcon\r\n          style={{ paddingLeft: \"30px\" }}\r\n        ></NumberOfsafetySeatsIcon> */}\r\n\r\n            <span\r\n              // style={{\r\n              //   color: \"white\",\r\n              //   fontSize: \"14px\",\r\n              //   wordWrap: \"break-word\",\r\n\r\n              //   width: isMobile ? \"130px\" : \"none\",\r\n              // }}\r\n              className={styles.safetySeatCounterTitle}\r\n              style={{ color: fontColor }}\r\n            >\r\n              {\"Infant & Child Safety Seat\"}\r\n            </span>\r\n            {/* </div> */}\r\n          </div>\r\n          <div\r\n            // item\r\n            className={styles.safetySeatCounterContainer}\r\n          >\r\n            {/* <div\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-around\"\r\n          alignItems=\"center\"\r\n          className={classes.mainPlusMinusContainer}\r\n          // style={{\r\n          //   // background: \"#282828\",\r\n          //   // height: \"35px\",\r\n          //   // borderRadius: \"5px\",\r\n\r\n          //   // paddingTop: \"-4px\",\r\n          // }}\r\n        > */}\r\n            <div\r\n              // item\r\n              className={styles.safetySeatCounterMinusContainer}\r\n              // style={{\r\n              //   borderBottom: \"2px solid #AC8159\",\r\n              //   \"&:hover\": { borderBottom: \"2px solid white\" },\r\n              // }}\r\n            >\r\n              <button\r\n                onClick={onDecreaseChildSafetySeat}\r\n                // style={\r\n                //   {\r\n                //     // marginRight: \"5px\",\r\n                //   }\r\n                // }\r\n                className={styles.safetySeatCounterMinusSelf}\r\n                style={{\r\n                  background: backAndNextButtonsColor,\r\n                  border: `1px solid ${borderColorForInnerElements}`,\r\n                }}\r\n                type=\"button\"\r\n              >\r\n                <MinusIcon color={fontColor} />\r\n              </button>\r\n            </div>\r\n            <div\r\n              // style={{\r\n              //   textAlign: \"center\",\r\n              //   // borderBottom: \"2px solid #AC8159\",\r\n              //   // height: \"100%\",\r\n              // }}\r\n              className={styles.safetySeatCounterInputContainer}\r\n            >\r\n              <input\r\n                ref={register}\r\n                name={`Infant & Child Safety Seat`}\r\n                onChange={(e) => {\r\n                  setChildSafetySeat(e.target.value)\r\n                }}\r\n                // className=\"passenger\"\r\n                value={childSafetySeat}\r\n                size=\"1\"\r\n                // style={{\r\n                //   // pointerEvents: \"none\",\r\n                //   minWidth: \"34px\",\r\n                //   maxWidth: \"34px\",\r\n                //   // marginLeft: \"2px\",\r\n                //   // marginRight: \"2.5px\",\r\n                //   // marginBottom: \"4px\",\r\n                //   backgroundColor: \"transparent\",\r\n                //   border: \"none\",\r\n                //   color: \"white\",\r\n                //   textAlign: \"center\",\r\n                //   fontFamily: \"Roboto\",\r\n                //   textTransform: \"none\",\r\n                //   fontWeight: \"400\",\r\n                //   fontSize: \"14px\",\r\n                //   height: \"100%\",\r\n                // }}\r\n                type=\"number\"\r\n                className={styles.safetySeatCounterInputSelf}\r\n                style={{\r\n                  background: backAndNextButtonsColor,\r\n                  border: `1px solid ${borderColorForInnerElements}`,\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              // item\r\n              className={styles.safetySeatCounterPlusContainer}\r\n            >\r\n              <button\r\n                onClick={onIncreaseChildSafetySeat}\r\n                // style={{ marginLeft: \"4px\" }}\r\n                className={styles.safetySeatCounterPlusSelf}\r\n                style={{\r\n                  background: backAndNextButtonsColor,\r\n                  border: `1px solid ${borderColorForInnerElements}`,\r\n                }}\r\n                type=\"button\"\r\n              >\r\n                <PlusIcon color={fontColor} />\r\n              </button>\r\n            </div>\r\n            {/* </div> */}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Grid>\r\n  )\r\n})\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\PassengerQuantity\\PassengerQuantity.js",["408","409","410","411","412","413","414","415","416","417","418"],"import { makeStyles, useMediaQuery } from \"@material-ui/core\"\r\n// import Grid from \"@material-ui/core/Grid\"\r\n// import Typography from \"@material-ui/core/Typography\"\r\nimport React, { useContext } from \"react\"\r\nimport { useFormContext } from \"react-hook-form\"\r\nimport { NumberOfPassengersIcon } from \"../../../../../assets/icons\"\r\nimport ThemeContext from \"../../../../../context\"\r\nimport {\r\n  MinusIcon,\r\n  // NumberOfPassengers,\r\n  // NumberOfPassengersIcon,\r\n  PlusIcon,\r\n} from \"../../../../../assets/icons\"\r\nimport \"../../index.css\"\r\nimport styles from \"./PassengerQuantity.module.scss\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPlusMinusContainer: {\r\n    height: \"34px\",\r\n    borderBottom: \"2px solid #AC8159\",\r\n    transition: \"200ms\",\r\n    \"&:hover\": { borderBottom: \"2px solid white\", transition: \"200ms\" },\r\n  },\r\n}))\r\n\r\nexport default React.memo(function PassengerQuantity({\r\n  passengersqState,\r\n  setPassengers,\r\n  passengers,\r\n  passengersQuantityForBackStep,\r\n  setPassengersQuantityForBackStep,\r\n  redBorderOnSubmitForPassengers,\r\n}) {\r\n  const classes = useStyles()\r\n  const { register } = useFormContext()\r\n\r\n  const onDecrease = () => {\r\n    if (passengersQuantityForBackStep === 0) {\r\n      return\r\n    }\r\n    let progress = passengersQuantityForBackStep - 1\r\n    setPassengers((passengers) => passengers - 1)\r\n    setPassengersQuantityForBackStep(progress)\r\n  }\r\n  const onIncrease = (e) => {\r\n    if (passengersQuantityForBackStep === 14) {\r\n      return\r\n    }\r\n    let progress = passengersQuantityForBackStep + 1\r\n    setPassengers((passengers) => passengers + 1)\r\n    setPassengersQuantityForBackStep(progress)\r\n\r\n    console.log(passengersQuantityForBackStep)\r\n  }\r\n  // console.log(passengersQuantityForBackStep)\r\n  //   React.useEffect(() => {\r\n  //     setPassengers(parseInt(passengersqState))\r\n  //   }, [passengersqState])\r\n  const isMobile = useMediaQuery(\"(max-width:340px)\")\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiuses,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    innerTextOnHover,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div\r\n      // container\r\n      // direction=\"row\"\r\n      // justify=\"space-between\"\r\n      // alignItems=\"center\"\r\n      // style={{ marginTop: \"13px\" }}\r\n      className={styles.passengerQuantityWrapper}\r\n    >\r\n      <div\r\n        // item\r\n        className={styles.passengerQuantityIconAndTitleContainer}\r\n      >\r\n        {/* <div container direction=\"row\"> */}\r\n        {/* <NumberOfPassengersIcon\r\n          style={{ paddingLeft: \"30px\" }}\r\n        ></NumberOfPassengersIcon> */}\r\n        <NumberOfPassengersIcon color={fontColor} />\r\n        {/* <span className={styles.passengerQuantityIcon}></span> */}\r\n        <span\r\n          // style={{\r\n          //   color: \"white\",\r\n          //   fontSize: \"14px\",\r\n          //   wordWrap: \"break-word\",\r\n\r\n          //   width: isMobile ? \"130px\" : \"none\",\r\n          // }}\r\n          className={styles.passengerCounterTitle}\r\n          style={{ color: fontColor }}\r\n        >\r\n          Number of passengers\r\n        </span>\r\n        {/* </div> */}\r\n      </div>\r\n      <div\r\n        // item\r\n        className={styles.passengerQuantityCounterContainer}\r\n        style={{\r\n          borderRadius: `${borderRadiusesForInnerElements}`,\r\n          border: redBorderOnSubmitForPassengers\r\n            ? \"1px solid red\"\r\n            : \"1px solid transparent\",\r\n        }}\r\n      >\r\n        {/* <div\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-around\"\r\n          alignItems=\"center\"\r\n          className={classes.mainPlusMinusContainer}\r\n          // style={{\r\n          //   // background: \"#282828\",\r\n          //   // height: \"35px\",\r\n          //   // borderRadius: \"5px\",\r\n\r\n          //   // paddingTop: \"-4px\",\r\n          // }}\r\n        > */}\r\n        <div\r\n          // item\r\n          className={styles.passengerQuantityMinusContainer}\r\n          // style={{\r\n          //   borderBottom: \"2px solid #AC8159\",\r\n          //   \"&:hover\": { borderBottom: \"2px solid white\" },\r\n          // }}\r\n        >\r\n          <button\r\n            onClick={onDecrease}\r\n            // style={\r\n            //   {\r\n            //     // marginRight: \"5px\",\r\n            //   }\r\n            // }\r\n            type=\"button\"\r\n            className={styles.passengerQuantityMinusSelf}\r\n            style={{\r\n              background: backAndNextButtonsColor,\r\n              border: `1px solid ${borderColorForInnerElements}`,\r\n            }}\r\n          >\r\n            {/* - */}\r\n            <MinusIcon color={fontColor} />\r\n          </button>\r\n        </div>\r\n        <div\r\n          // style={{\r\n          //   textAlign: \"center\",\r\n          //   // borderBottom: \"2px solid #AC8159\",\r\n          //   // height: \"100%\",\r\n          // }}\r\n          className={styles.passengerQuantityInputContainer}\r\n          // style={{ border: `1px solid ${borderColorForInnerElements}` }}\r\n        >\r\n          <input\r\n            ref={register}\r\n            name=\"passengersQuantity\"\r\n            onChange={(e) => {\r\n              setPassengers(e.target.value)\r\n              setPassengersQuantityForBackStep(e.target.value)\r\n            }}\r\n            className=\"passenger\"\r\n            value={passengersQuantityForBackStep}\r\n            size=\"1\"\r\n            // style={{\r\n            //   // pointerEvents: \"none\",\r\n            //   minWidth: \"34px\",\r\n            //   maxWidth: \"34px\",\r\n            //   // marginLeft: \"2px\",\r\n            //   // marginRight: \"2.5px\",\r\n            //   // marginBottom: \"4px\",\r\n            //   backgroundColor: \"transparent\",\r\n            //   border: \"none\",\r\n            //   color: \"white\",\r\n            //   textAlign: \"center\",\r\n            //   fontFamily: \"Roboto\",\r\n            //   textTransform: \"none\",\r\n            //   fontWeight: \"400\",\r\n            //   fontSize: \"14px\",\r\n            //   // height: \"100%\",\r\n            //   // borderBottom: \"2px solid #AC8159\",\r\n            // }}\r\n            type=\"number\"\r\n            className={styles.passengerQuantityInputSelf}\r\n            style={{\r\n              background: backAndNextButtonsColor,\r\n              border: `1px solid ${borderColorForInnerElements}`,\r\n            }}\r\n          />\r\n        </div>\r\n        <div\r\n          // item\r\n          className={styles.passengerQuantityPlusContainer}\r\n        >\r\n          <button\r\n            onClick={(event) => {\r\n              onIncrease()\r\n              event.stopPropagation()\r\n            }}\r\n            // style={{ marginLeft: \"4px\" }}\r\n            className={styles.passengerQuantityPlusSelf}\r\n            style={{\r\n              background: backAndNextButtonsColor,\r\n              border: `1px solid ${borderColorForInnerElements}`,\r\n            }}\r\n            type=\"button\"\r\n          >\r\n            <PlusIcon color={fontColor} />\r\n          </button>\r\n        </div>\r\n        {/* </div> */}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm\\Hours\\Hours.js",["419","420","421","422","423","424","425","426","427","428"],"import { makeStyles } from \"@material-ui/core\"\r\n// import Grid from \"@material-ui/core/Grid\"\r\n// import Typography from \"@material-ui/core/Typography\"\r\nimport React, { useContext } from \"react\"\r\nimport { useFormContext } from \"react-hook-form\"\r\nimport { MinusIcon, PlusIcon } from \"../../../../../assets/icons\"\r\nimport styles from \"./Hours.module.scss\"\r\nimport \"../../index.css\"\r\nimport ThemeContext from \"../../../../../context\"\r\nimport { HourlyIcon } from \"../../../../../assets/icons\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPlusMinusContainer: {\r\n    height: \"34px\",\r\n\r\n    borderBottom: \"2px solid #AC8159\",\r\n    transition: \"200ms\",\r\n    \"&:hover\": { borderBottom: \"2px solid white\", transition: \"200ms\" },\r\n  },\r\n}))\r\n\r\nconst Hours = ({\r\n  hoursState,\r\n  setHourly,\r\n  hoursAddressForm,\r\n  setHoursAddressForm,\r\n}) => {\r\n  const classes = useStyles()\r\n\r\n  const { register } = useFormContext()\r\n\r\n  //   const [hoursAddressForm, setHoursAddressForm] = useState(0)\r\n\r\n  const onDecrease = () => {\r\n    if (hoursAddressForm === 1) {\r\n      return\r\n    }\r\n    setHoursAddressForm((hoursAddressForm) => hoursAddressForm - 1)\r\n  }\r\n  const onIncrease = () => {\r\n    setHoursAddressForm((hoursAddressForm) => hoursAddressForm + 1)\r\n  }\r\n\r\n  //   React.useEffect(() => {\r\n  //     if (hoursState !== 0) {\r\n  //       setHourly(true)\r\n  //       setHoursAddressForm(parseInt(hoursState))\r\n  //     }\r\n  //   }, [hoursState])\r\n\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiuses,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    innerTextOnHover,\r\n    borderRadiusesForInnerElements,\r\n    borderRadiusesForWholeApp,\r\n    borderColorForInnerElements,\r\n    borderColorForOuterApp,\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div\r\n      // container\r\n      // direction=\"row\"\r\n      // justify=\"space-between\"\r\n      // alignItems=\"center\"\r\n      // style={{ marginTop: \"-4px\" }}\r\n      className={styles.hoursCounterWrapper}\r\n    >\r\n      <div className={styles.hoursCounterIconAndTitleContainer}>\r\n        {/* <div container direction=\"row\" alignItems=\"center\"> */}\r\n        <HourlyIcon color={fontColor} />\r\n\r\n        {/* <span className={styles.hoursCounterIcon}></span> */}\r\n        <h3\r\n          // style={{ color: \"white\", fontSize: \"14px\", marginTop: \"4px\" }}\r\n          className={styles.hoursCounterTitle}\r\n          style={{ color: fontColor }}\r\n        >\r\n          Hours\r\n        </h3>\r\n        {/* </div> */}\r\n      </div>\r\n      <div className={styles.hoursCounterPlusMinusContainer}>\r\n        {/* <div\r\n          // container\r\n          // direction=\"row\"\r\n          // justify=\"space-around\"\r\n          // alignItems=\"center\"\r\n          // className={classes.mainPlusMinusContainer}\r\n          className={styles.hoursCounterPlusMinus}\r\n          // style={{\r\n          //   // background: \"#282828\",\r\n          //   // height: \"35px\",\r\n          //   // borderRadius: \"5px\",\r\n          //   height: \"34px\",\r\n          //   // paddingTop: \"-4px\",\r\n          // }}\r\n        > */}\r\n        <div className={styles.hoursCounterMinusContainer}>\r\n          <button\r\n            onClick={onDecrease}\r\n            className={styles.hoursCounterMinus}\r\n            style={{\r\n              background: backAndNextButtonsColor,\r\n              border: `1px solid ${borderColorForInnerElements}`,\r\n            }}\r\n            type=\"button\"\r\n            // style={{ marginRight: \"5px\" }}\r\n          >\r\n            <MinusIcon color={fontColor} />\r\n          </button>\r\n        </div>\r\n        <div\r\n          // item\r\n          // style={{\r\n          //   textAlign: \"center\",\r\n          //   // borderBottom: \"2px solid #AC8159\",\r\n          //   // marginTop: \"6px\",\r\n          //   // paddingBottom: \"2px\",\r\n          //   // borderBottom: \"2px solid #AC8159\",\r\n          //   // height: \"105%\",\r\n          // }}\r\n          className={styles.hoursCounterInputContainer}\r\n        >\r\n          <input\r\n            ref={register}\r\n            name=\"hours\"\r\n            // className=\"passenger\"\r\n            onChange={(e) => {\r\n              setHoursAddressForm(e.target.value)\r\n            }}\r\n            value={hoursAddressForm}\r\n            size=\"1\"\r\n            // style={{\r\n            //   // pointerEvents: \"none\",\r\n            //   minWidth: \"34px\",\r\n            //   maxWidth: \"34px\",\r\n            //   // marginLeft: \"2px\",\r\n            //   // marginRight: \"2.5px\",\r\n            //   // marginBottom: \"4px\",\r\n            //   backgroundColor: \"transparent\",\r\n            //   border: \"none\",\r\n            //   color: \"white\",\r\n            //   textAlign: \"center\",\r\n            //   fontFamily: \"Roboto\",\r\n            //   textTransform: \"none\",\r\n            //   fontWeight: \"400\",\r\n            //   fontSize: \"14px\",\r\n            //   height: \"100%\",\r\n            // }}\r\n            style={{\r\n              background: backAndNextButtonsColor,\r\n              border: `1px solid ${borderColorForInnerElements}`,\r\n            }}\r\n            type=\"number\"\r\n            className={styles.hoursCounterInput}\r\n          />\r\n        </div>\r\n        <div className={styles.hoursCounterPlusContainer}>\r\n          <button\r\n            className={styles.hoursCounterPlus}\r\n            onClick={onIncrease}\r\n            style={{\r\n              background: backAndNextButtonsColor,\r\n              border: `1px solid ${borderColorForInnerElements}`,\r\n            }}\r\n            type=\"button\"\r\n            // style={{ marginLeft: \"4px\" }}\r\n          >\r\n            <PlusIcon color={fontColor} />\r\n          </button>\r\n          {/* </div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Hours\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\GoogleMap\\GoogleMapContainer\\GoogleMap.js",["429","430","431","432","433","434","435","436","437","438","439","440","441"],"// import Grid from \"@material-ui/core/Grid\"\r\n// import InputAdornment from \"@material-ui/core/InputAdornment\"\r\n// import MenuItem from \"@material-ui/core/MenuItem\"\r\n// import { makeStyles } from \"@material-ui/core/styles\"\r\n// import { useForm, useFormContext } from \"react-hook-form\"\r\n// import TextField from \"@material-ui/core/TextField\"\r\nimport { GoogleApiWrapper, Map, Marker } from \"google-maps-react\"\r\nimport React, { forwardRef, useContext, useState } from \"react\"\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\"\r\nimport {\r\n  AddLocIcon,\r\n  DeleteLocIcon,\r\n  EndLocationIcon,\r\n  StartLocationIcon,\r\n  // EndLocationIcon,\r\n  // StartLocationIcon,\r\n} from \"../../../assets/icons\"\r\n// import rideCheckPointErrors from \"../../CheckoutForm/CheckOut/AdressForm/AdressFormUIComponent\"\r\nimport MapStyles from \"../mapStyles\"\r\nimport { connect } from \"react-redux\"\r\nimport { useStyles } from \"./GoogleMapStyles\"\r\nimport styles from \"./GoogleMap.module.scss\"\r\nimport {\r\n  CSSTransition,\r\n  // SwitchTransition,\r\n  // Transition,\r\n  TransitionGroup,\r\n} from \"react-transition-group\"\r\nimport \"./animationForGoogleMap.css\"\r\nimport ThemeContext from \"../../../context\"\r\n\r\nconst GoogleMap = React.memo(\r\n  forwardRef(\r\n    ({\r\n      setDestinations,\r\n      destinations,\r\n      orderAddressDetails,\r\n      ref,\r\n      errors,\r\n      redBorderOnSubmit,\r\n      redBorderOnSubmit2,\r\n      resetInputs,\r\n      formData,\r\n      flagForGotAddressError,\r\n      ...props\r\n    }) => {\r\n      // const classes = useStyles(redBorderOnSubmit)\r\n\r\n      const [condition, setCondition] = useState([])\r\n\r\n      const handleChanger = (e) => {\r\n        setCondition(e.event.target)\r\n        console.log(condition)\r\n      }\r\n      const [markers, setMarkers] = useState([])\r\n      const [mapCenter, setMapCenter] = useState({\r\n        lat: 33.1507,\r\n        lng: -96.8236,\r\n      })\r\n\r\n      const setUseHookState = (value, id) => {\r\n        let newArr = [...destinations]\r\n        newArr[id].rideCheckPoint = value\r\n        setDestinations(newArr)\r\n      }\r\n\r\n      const handleChange = (value, id) => {\r\n        setUseHookState(value, id)\r\n      }\r\n\r\n      let selectedArray = null\r\n\r\n      const handleSelect = async (value, id) => {\r\n        setUseHookState(value, id)\r\n        const results = await geocodeByAddress(value)\r\n        const latLng = await getLatLng(results[0])\r\n        const placeId = results[0].place_id\r\n        let placeType = 0\r\n        if (results[0].types.some((types) => types === \"airport\")) {\r\n          placeType = 2\r\n        }\r\n        selectedArray = [...destinations]\r\n        selectedArray[id] = {\r\n          ...selectedArray[id],\r\n          latitude: latLng.lat,\r\n          longitude: latLng.lng,\r\n          placeId: placeId,\r\n          placeType: placeType,\r\n        }\r\n\r\n        setDestinations(selectedArray)\r\n\r\n        setMapCenter({ lat: latLng.lat, lng: latLng.lng })\r\n        if (markers.length >= 1) {\r\n          markers.splice(0, 2)\r\n          setMarkers([...markers, { lat: latLng.lat, lng: latLng.lng }])\r\n        } else {\r\n          setMarkers([...markers, { lat: latLng.lat, lng: latLng.lng }])\r\n        }\r\n      }\r\n\r\n      const addEndPoint = () => {\r\n        let newArr = [\r\n          ...destinations,\r\n          {\r\n            rideCheckPoint: \"\",\r\n            latitude: 0,\r\n            longitude: 0,\r\n            placeType: 0,\r\n            placeId: \"\",\r\n          },\r\n        ]\r\n        setDestinations(newArr)\r\n      }\r\n\r\n      const airportCenter4 = [\r\n        \"Daniel K. Inouye International Airport (HNL), Rodgers Blvd, Honolulu, HI, USA\",\r\n        \"Honolulu Airport (HNL), Rodgers Blvd, Honolulu, HI, USA\",\r\n      ]\r\n      var nothing = null\r\n      const removeEndPoint = (index) => {\r\n        let newArr = [...destinations]\r\n        newArr.splice(index, 1)\r\n        setDestinations(newArr)\r\n      }\r\n      // const searchOptions = {\r\n      //   location: new google.maps.LatLng(-34, 151),\r\n      //   radius: 2000,\r\n      //   types: [\"address\"],\r\n      // }\r\n      var copiedSuggestions = null\r\n      var copiedLoading = null\r\n      React.useEffect(() => {}, [orderAddressDetails])\r\n      React.useEffect(() => {\r\n        // console.log(destinations[0]?.rideCheckPoint.includes(\"Airport\"))\r\n        if (Boolean(formData.orderAddressDetails[0]?.rideCheckPoint)) {\r\n          setDestinations(formData.orderAddressDetails)\r\n        }\r\n        if (resetInputs) {\r\n          setDestinations(destinations)\r\n        }\r\n      }, [])\r\n\r\n      const {\r\n        ThemeProviderAppBackgroundColor,\r\n        fontColor,\r\n        borderRadiuses,\r\n        carsTypeColor,\r\n        hoverColor,\r\n        iconsColor,\r\n        backAndNextButtonsColor,\r\n        innerTextOnHover,\r\n        inputsFontColor,\r\n        borderRadiusesForInnerElements,\r\n        borderRadiusesForWholeApp,\r\n        borderColorForInnerElements,\r\n        borderColorForOuterApp,\r\n        inputsBackground,\r\n      } = useContext(ThemeContext)\r\n\r\n      const setDestinationsIcons = (id, destinations) => {\r\n        if (id === 0) {\r\n          return styles.destinationsInputWithFROMIcon\r\n        } else if (id === destinations.length - 1) {\r\n          return styles.destinationsInputWithTOIcon\r\n        }\r\n        if (id > 0 && id < destinations.length - 1) {\r\n          return styles.destinationsInputWithNumberIcon\r\n        }\r\n      }\r\n      const getDestinationsIcons = (id, destinations) => {\r\n        if (id === 0) {\r\n          return <StartLocationIcon color={fontColor} />\r\n        } else if (id === destinations.length - 1) {\r\n          return <EndLocationIcon color={fontColor} />\r\n        }\r\n      }\r\n\r\n      return (\r\n        <>\r\n          <div\r\n            // container\r\n            // direction=\"column\"\r\n            // className={classes.mapMainContainer}\r\n            className={styles.mapWithInputsWrapper}\r\n          >\r\n            <div\r\n              // item\r\n              className={styles.mapContainer}\r\n            >\r\n              <div className={styles.mapContainerForHideMapsTagsPositioning}>\r\n                <Map\r\n                  google={props.google}\r\n                  disableDefaultUI={true}\r\n                  initialCenter={{\r\n                    lat: mapCenter.lat,\r\n                    lng: mapCenter.lng,\r\n                  }}\r\n                  center={{\r\n                    lat: mapCenter.lat,\r\n                    lng: mapCenter.lng,\r\n                  }}\r\n                  styles={MapStyles}\r\n                  zoom={12}\r\n                >\r\n                  {markers.map((marker, id) => (\r\n                    <Marker\r\n                      key={`${id}${marker.lat}`}\r\n                      lat={marker.lat}\r\n                      lng={marker.lng}\r\n                    />\r\n                  ))}\r\n                </Map>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={styles.mapInputsContainerForHideMapsTagsPositioning}\r\n              style={{ background: ThemeProviderAppBackgroundColor }}\r\n            >\r\n              <div\r\n                // item\r\n                // className={\r\n                //   flagForGotAddressError\r\n                //     ? classes.destinationContainerred\r\n                //     : classes.destinationContainer\r\n                // }\r\n                className={styles.mapInputsContainer}\r\n                style={{\r\n                  border: flagForGotAddressError\r\n                    ? \"1px solid red\"\r\n                    : \"1px solid transparent\",\r\n                }}\r\n              >\r\n                <TransitionGroup>\r\n                  {destinations.map((destination, id) => {\r\n                    console.log(destinations)\r\n                    if (!airportCenter4.includes(destination?.rideCheckPoint)) {\r\n                      nothing = destinations[id]?.rideCheckPoint\r\n                    }\r\n\r\n                    return (\r\n                      <CSSTransition\r\n                        key={id}\r\n                        classNames={{\r\n                          enter: \"enter\",\r\n                          enterActive: \"enterActive\",\r\n                          exit: \"exit\",\r\n                          exitActive: \"exitActive\",\r\n                          // leave: \"leave\",\r\n                          // leaveActive: \"leaveActive\",\r\n                          // appear: \"appear\",\r\n                          // appearActive: \"appearActive\",\r\n                        }}\r\n                        timeout={300}\r\n                      >\r\n                        <PlacesAutocomplete\r\n                          value={\r\n                            formData.orderAddressDetails[id]?.rideCheckPoint &&\r\n                            !resetInputs\r\n                              ? formData.orderAddressDetails[id]?.rideCheckPoint\r\n                              : nothing\r\n                          }\r\n                          onChange={(value) => handleChange(value, id)}\r\n                          onSelect={(value) => {\r\n                            handleSelect(value, id)\r\n                          }}\r\n                          key={`${destination.id}${id}`}\r\n                          // searchOptions={searchOptions}\r\n                        >\r\n                          {({\r\n                            getInputProps,\r\n                            suggestions,\r\n                            getSuggestionItemProps,\r\n                            loading,\r\n                          }) => {\r\n                            copiedSuggestions = [...suggestions].filter(\r\n                              (item) => {\r\n                                return !airportCenter4.includes(\r\n                                  item.description\r\n                                )\r\n                              }\r\n                            )\r\n\r\n                            return (\r\n                              <>\r\n                                <div\r\n                                  className={styles.destinationsInputContainer}\r\n                                >\r\n                                  {/* <div\r\n                                className={\r\n                                  redBorderOnSubmit || redBorderOnSubmit2\r\n                                    ? classes.noBorderRed\r\n                                    : classes.noBorderDefault\r\n                                }\r\n                                className={classes.normalInputClass}\r\n                              > */}\r\n                                  {id > 0 && id < destinations.length - 1 && (\r\n                                    <span\r\n                                      className={\r\n                                        styles.numberOfDestinationPoint\r\n                                      }\r\n                                      style={{ color: inputsFontColor }}\r\n                                    >\r\n                                      {id}\r\n                                    </span>\r\n                                  )}\r\n                                  {getDestinationsIcons(id, destinations)}\r\n                                  <input\r\n                                    // position=\"start\"\r\n                                    // style={{\r\n                                    //   height: \"40px\",\r\n                                    //   // border: \"none\",\r\n                                    //   // marginTop: \"-4px\",\r\n                                    //   boxShadow: \"4px 5px 30px rgba(0, 0, 0, 0.1)\",\r\n                                    // }}\r\n                                    // variant=\"standard\"\r\n                                    value={\r\n                                      formData.orderAddressDetails[id]\r\n                                        ?.rideCheckPoint && !resetInputs\r\n                                        ? formData.orderAddressDetails[id]\r\n                                            ?.rideCheckPoint\r\n                                        : nothing\r\n                                    }\r\n                                    name=\"rideCheckPoint\"\r\n                                    defaultValue={\r\n                                      destinations[id]?.rideCheckPoint\r\n                                    }\r\n                                    // fullWidth\r\n                                    // className={classes.normalInputClass}\r\n                                    inputRef={ref}\r\n                                    // className={styles.destinationsInputContainer}\r\n                                    // InputProps={{\r\n                                    //   startAdornment: (\r\n                                    //     <InputAdornment\r\n                                    //       style={{\r\n                                    //         marginRight: \"10px\",\r\n                                    //         marginLeft: \"15px\",\r\n                                    //       }}\r\n                                    //     >\r\n                                    //       {id === 0 && <StartLocationIcon />}\r\n                                    //       {id === destinations.length - 1 && (\r\n                                    //         <EndLocationIcon />\r\n                                    //       )}\r\n                                    //       {id > 0 &&\r\n                                    //         id < destinations.length - 1 && (\r\n                                    //           <span\r\n                                    //             style={{\r\n                                    //               borderRadius: \"50%\",\r\n                                    //               width: \"24px\",\r\n                                    //               height: \"25px\",\r\n                                    //               backgroundColor: \"transparent\",\r\n                                    //               border: \"2px solid #FFFFFF\",\r\n                                    //               textAlign: \"center\",\r\n                                    //               fontFamily: \"Roboto\",\r\n                                    //               fontWeight: \"700\",\r\n                                    //               fontSize: \"0.9rem\",\r\n                                    //               paddingTop: \"2px\",\r\n                                    //               marginLeft: \"-5px\",\r\n                                    //               marginRight: \"-5px\",\r\n                                    //             }}\r\n                                    //           >\r\n                                    //             {id}\r\n                                    //           </span>\r\n                                    //         )}\r\n                                    //     </InputAdornment>\r\n                                    //   ),\r\n                                    // endAdornment: (\r\n                                    //   <InputAdornment\r\n                                    //     style={{\r\n                                    //       cursor: \"pointer\",\r\n                                    //       // marginRight: \"10px\",\r\n                                    //     }}\r\n                                    //     position=\"end\"\r\n                                    //   >\r\n                                    //     {id === destinations.length - 1 && (\r\n                                    //       <span\r\n                                    //         onClick={addEndPoint}\r\n                                    //         style={{\r\n                                    //           marginTop: \"5px\",\r\n                                    //         }}\r\n                                    //       >\r\n                                    //         <AddLocIcon />\r\n                                    //       </span>\r\n                                    //     )}\r\n                                    //     {id > 0 && id < destinations.length - 1 && (\r\n                                    //       <span\r\n                                    //         onClick={() => removeEndPoint(id)}\r\n                                    //         style={{ marginBottom: \"6px\" }}\r\n                                    //       >\r\n                                    //         <DeleteLocIcon />\r\n                                    //       </span>\r\n                                    //     )}\r\n                                    //   </InputAdornment>\r\n                                    // ),\r\n                                    // classes: {\r\n                                    //   root: classes.inputRoot,\r\n                                    //   underline:\r\n                                    //     redBorderOnSubmit || redBorderOnSubmit2\r\n                                    //       ? classes.noBorderRed\r\n                                    //       : classes.noBorderDefault,\r\n                                    //   input: classes.input,\r\n                                    // },\r\n                                    // }}\r\n                                    style={{\r\n                                      height: \"33px\",\r\n                                      color: inputsFontColor,\r\n                                      border:\r\n                                        redBorderOnSubmit || redBorderOnSubmit2\r\n                                          ? `1px solid red`\r\n                                          : `1px solid ${borderColorForInnerElements}`,\r\n                                      background: inputsBackground,\r\n                                    }}\r\n                                    placeholder={id === 0 ? \"From\" : \"To\"}\r\n                                    className={setDestinationsIcons(\r\n                                      id,\r\n                                      destinations\r\n                                    )}\r\n                                    {...getInputProps()}\r\n                                  />\r\n                                  {id === destinations.length - 1 && (\r\n                                    <span\r\n                                      onClick={addEndPoint}\r\n                                      className={styles.addLocationIcon}\r\n                                    >\r\n                                      <AddLocIcon color={fontColor} />\r\n                                    </span>\r\n                                  )}\r\n                                  {id > 0 && id < destinations.length - 1 && (\r\n                                    <span\r\n                                      onClick={() => removeEndPoint(id)}\r\n                                      className={styles.deleteLocationIcon}\r\n                                    >\r\n                                      <DeleteLocIcon color={fontColor} />\r\n                                    </span>\r\n                                  )}\r\n                                  {/* </div> */}\r\n                                  <div className={styles.dropDown}>\r\n                                    {loading && (\r\n                                      <div\r\n                                        // style={{\r\n                                        //   alignItems: \"center\",\r\n                                        //   color: \"green\",\r\n                                        // }}\r\n                                        className={styles.dropDownLoadingText}\r\n                                      >\r\n                                        Loading...\r\n                                      </div>\r\n                                    )}\r\n                                    {copiedSuggestions.map((suggestion, id) => {\r\n                                      // console.log(copiedSuggestions)\r\n\r\n                                      // inline style for demonstration purpose\r\n                                      // const style = suggestion.active\r\n                                      //   ? {\r\n                                      //       backgroundColor: \"#bababa\",\r\n                                      //       cursor: \"pointer\",\r\n                                      //       textTransform: \"none\",\r\n                                      //       justifyContent: \"center\",\r\n\r\n                                      //       width: \"340px\",\r\n                                      //     }\r\n                                      //   : {\r\n                                      //       backgroundColor: \"white\",\r\n                                      //       cursor: \"pointer\",\r\n                                      //       textTransform: \"none\",\r\n                                      //       width: \"340px\",\r\n\r\n                                      //       justifyContent: \"center\",\r\n                                      //     }\r\n\r\n                                      return (\r\n                                        <div\r\n                                          key={`${id}${suggestion.description}`}\r\n                                          {...getSuggestionItemProps(\r\n                                            suggestion\r\n                                          )}\r\n                                          className={styles.itemInsideDropDown}\r\n                                        >\r\n                                          {/* <MenuItem\r\n                                        onMouseEnter={(e) => (\r\n                                          (e.target.style.backgroundColor =\r\n                                            \"black\"),\r\n                                          (e.target.style.color = \"white\")\r\n                                        )}\r\n                                        onMouseLeave={(e) => (\r\n                                          (e.target.style.backgroundColor =\r\n                                            \"#ededed\"),\r\n                                          (e.target.style.color = \"black\")\r\n                                        )}\r\n                                        style={{\r\n                                          backgroundColor: \"#ededed\",\r\n                                          whiteSpace: \"pre-line\",\r\n                                          fontSize: \"14px\",\r\n                                          color: \"black\",\r\n                                        }}\r\n                                      > */}\r\n                                          {suggestion.description}\r\n                                          {/* </MenuItem> */}\r\n                                        </div>\r\n                                      )\r\n                                    })}\r\n                                  </div>\r\n                                </div>\r\n                              </>\r\n                            )\r\n                          }}\r\n                        </PlacesAutocomplete>\r\n                      </CSSTransition>\r\n                    )\r\n                  })}\r\n                </TransitionGroup>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )\r\n    }\r\n  )\r\n)\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // profile: state.companyProfile.profile,\r\n    formData: state.formData,\r\n    resetInputs: state.resetWidgetInputs.resetInputs,\r\n    flagForGotAddressError: state.companyProfile.gotAddressError,\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyCmKhi_5V_pulQtm6DFJ8teDZpR9I5hJoM\",\r\n  libraries: [\"places\", \"drawing\", \"geometry\"],\r\n})(connect(mapStateToProps, {})(GoogleMap))\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\GoogleMap\\GoogleMapContainer\\GoogleMapStyles.js",[],"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\GoogleMap\\mapStyles.js",["442"],"// console.log(window)\r\n\r\nexport default [...window.mapsStyles]\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\GoogleMap\\Directions\\Directions.js",["443"],"import { useMediaQuery } from \"@material-ui/core\"\r\n// import Grid from \"@material-ui/core/Grid\"\r\n// import { makeStyles } from \"@material-ui/core/styles\"\r\n// import { styles } from \"@material-ui/pickers/views/Calendar/Calendar\"\r\nimport { GoogleApiWrapper, Map } from \"google-maps-react\"\r\nimport React from \"react\"\r\nimport MapStyles from \"../mapStyles\"\r\nimport styles from \"./Directions.module.scss\"\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   mapContainer: {\r\n//     width: \"91.3%\",\r\n//     marginLeft: \"17px\",\r\n//     height: \"250px\",\r\n//     position: \"relative\",\r\n//   },\r\n//   mapContainerForMobile: {\r\n//     width: \"92%\",\r\n//     marginLeft: \"17px\",\r\n//     height: \"250px\",\r\n//     position: \"relative\",\r\n//   },\r\n// }))\r\n\r\nconst Directions = ({ destinations, setDistance, ...props }) => {\r\n  // const classes = useStyles()\r\n\r\n  const handleMapReady = (mapProps, map) => {\r\n    calculateAndDisplayRoute(map)\r\n  }\r\n\r\n  const calculateAndDisplayRoute = (map) => {\r\n    const directionsService = new window.google.maps.DirectionsService()\r\n    const directionsDisplay = new window.google.maps.DirectionsRenderer()\r\n\r\n    directionsDisplay.setMap(map)\r\n    const waypoints = []\r\n    destinations.map((item) =>\r\n      waypoints.push({\r\n        location: { lat: item.latitude, lng: item.longitude },\r\n        stopover: true,\r\n      })\r\n    )\r\n    const origin = waypoints.shift().location\r\n    const destination = waypoints.pop().location\r\n\r\n    directionsService.route(\r\n      {\r\n        origin: origin,\r\n        destination: destination,\r\n        waypoints: waypoints,\r\n        travelMode: \"DRIVING\",\r\n      },\r\n      (response, status) => {\r\n        if (status === \"OK\") {\r\n          directionsDisplay.setDirections(response)\r\n          let distance = 0\r\n          response.routes[0].legs.forEach((element) => {\r\n            distance += element.distance.value\r\n          })\r\n          const miles = (distance / 1000) * 0.621371\r\n          setDistance(miles.toFixed(2))\r\n        } else {\r\n          window.alert(\"Directions request failed due to \" + status)\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  const isMobile = useMediaQuery(\"(max-width:650px)\")\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        // container\r\n        // direction=\"column\"\r\n        className={styles.directionsWrapper}\r\n      >\r\n        <div\r\n          // item\r\n          // className={\r\n          //   !isMobile ? classes.mapContainer : classes.mapContainerForMobile\r\n          // }\r\n          className={styles.directionsContainer}\r\n        >\r\n          <Map\r\n            google={props.google}\r\n            styles={MapStyles}\r\n            disableDefaultUI={true}\r\n            className={\"map\"}\r\n            onReady={handleMapReady}\r\n          ></Map>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyCmKhi_5V_pulQtm6DFJ8teDZpR9I5hJoM\",\r\n  libraries: [\"geometry\"],\r\n})(Directions)\r\n","C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\FleetForm\\FleetFormStyles.js",[],"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\CheckOut\\CustomFormInput\\CustomFormInput.js",[],"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\CheckoutForm\\IncorrectAdressError\\IncorrectAddressError.js",[],"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\TermsOfUse\\PrivacyPolicy\\PrivacyPolicy.js",["444","445","446","447","448","449","450"],"C:\\Emir's folder\\Refactored-widget\\highness-limo-widget-without-webpack-for-refactoring — копия\\src\\Components\\TermsOfUse\\TermOfUse\\TermOfUse.js",["451","452","453","454","455","456","457","458","459","460","461","462","463"],"import React, { useContext } from \"react\"\r\n// import Button from \"@material-ui/core/Button\"\r\n// import Dialog from \"@material-ui/core/Dialog\"\r\n// import DialogActions from \"@material-ui/core/DialogActions\"\r\n// import DialogContent from \"@material-ui/core/DialogContent\"\r\n// import DialogContentText from \"@material-ui/core/DialogContentText\"\r\n// import DialogTitle from \"@material-ui/core/DialogTitle\"\r\n// import { termsApi } from \"../../../api/api\"\r\n// import { p } from \"@material-ui/core\"\r\nimport styles from \"./TermOfUse.module.scss\"\r\nimport { Modal } from \"../../Helpers/Modal/Modal\"\r\nimport ThemeContext from \"../../../context\"\r\n\r\nexport default function TermsOfUse() {\r\n  const [open, setOpen] = React.useState(false)\r\n  const [term, setTerm] = React.useState(\"\")\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n  const [show, setShow] = React.useState(false)\r\n  // React.useEffect(() => {\r\n  //   let componentMounted = true\r\n  //   if (open) {\r\n  //     const fetchTerms = async () => {\r\n  //       const data = await termsApi.getTermOfUse()\r\n  //       if (componentMounted) {\r\n  //         setTerm(data)\r\n  //       }\r\n  //       fetchTerms()\r\n  //     }\r\n  //   }\r\n  //   return () => {\r\n  //     componentMounted = false\r\n  //   }\r\n  // }, [])\r\n\r\n  // let descriptionElementRef = React.useRef(null)\r\n  // React.useEffect(() => {\r\n  //   if (open) {\r\n  //     const { current: descriptionElement } = descriptionElementRef\r\n  //     if (descriptionElement !== null) {\r\n  //       descriptionElement.focus()\r\n  //     }\r\n  //   }\r\n  // }, [open])\r\n\r\n  const {\r\n    ThemeProviderAppBackgroundColor,\r\n    fontColor,\r\n    borderRadiuses,\r\n    carsTypeColor,\r\n    hoverColor,\r\n    iconsColor,\r\n    backAndNextButtonsColor,\r\n    innerTextOnHover,\r\n    inputsFontColor,\r\n  } = useContext(ThemeContext)\r\n  return (\r\n    <>\r\n      <span\r\n        onClick={() => setShow(true)}\r\n        // disableRipple\r\n        // style={{\r\n        //   height: '50px',\r\n        //   textTransform: 'none',\r\n        //   padding: 0,\r\n        //   backgroundColor: 'transparent',\r\n        //   color: 'white',\r\n        // }}\r\n        className={styles.termOfUseOpenButton}\r\n        style={{ color: fontColor }}\r\n      >\r\n        Terms&nbsp;\r\n      </span>\r\n      <Modal\r\n        onClose={() => setShow(false)}\r\n        show={show}\r\n        // aria-labelledby='scroll-dialog-title'\r\n        // aria-describedby='scroll-dialog-description'\r\n      >\r\n        {/* <DialogTitle\r\n          id='scroll-dialog-title'\r\n          style={{ height: '55px', backgroundColor: 'black' }}\r\n        > */}\r\n        <div style={{ width: \"600px\", height: \"100%\" }}>\r\n          <p>Terms Of Use</p>\r\n          {/* </DialogTitle> */}\r\n          {/* <DialogContent style={{ backgroundColor: 'black' }}>\r\n          <DialogContentText\r\n            id='scroll-dialog-description'\r\n            ref={descriptionElementRef}\r\n            tabIndex={-1}\r\n            style={{ overflowX: 'hidden', backgroundColor: 'black' }}\r\n          > */}\r\n          <>\r\n            <p>Terms and Conditions of Bookinglane Manager</p>\r\n            <p>\r\n              These Terms governa the use of Bookinglane Manager, and, any other\r\n              related Agreement or legal relationship with the Owner in a\r\n              legally binding way. Capitalized words are defined in the relevant\r\n              dedicated section of this document. The User must read this\r\n              document carefully. Any other contract or agreement entered into\r\n              between the Owner and the Sellers shall always prevail over the\r\n              provisions of these Terms. Therefore, in such cases, these Terms\r\n              shall apply only residually and in accordance with applicable\r\n              provisions in such agreements or contracts. Although the entire\r\n              contractual relationship relating to these Products is entered\r\n              into solely by the Owner and Users, Users acknowledge and agree\r\n              that, where Bookinglane Manager has been provided to them via the\r\n              Apple App Store, Apple may enforce these Terms as a third-party\r\n              beneficiary. Nothing in these Terms creates any relationship of\r\n              employment, agency, or partnership between the involved parties.\r\n              Bookinglane Manager is provided by: Bookinglane LLC 1905 Concord\r\n              Blvd, Concord, CA, 94520, USA Owner contact email:\r\n              info@bookinglane.com\r\n            </p>\r\n\r\n            <p>What the User should know at a glance</p>\r\n            <p>\r\n              Bookinglane Manager uses automatic renewal for Product\r\n              subscriptions. Information about the a) renewal period, b)\r\n              termination details and c) termination notice can be found in the\r\n              relevant section of these Terms. Please note that some provisions\r\n              in these Terms may only apply to certain categories of Users. In\r\n              particular, certain provisions may only apply to Consumers or to\r\n              those Users that do not qualify as Consumers. Such limitations are\r\n              always explicitly mentioned within each affected clause. In the\r\n              absence of any such mention, clauses apply to all Users. How\r\n              Bookinglane Manager works By accepting the Terms, Users fully and\r\n              unconditionally release and forever discharge the Owner, its\r\n              officers, directors, employees and agents from any and all claims,\r\n              demands and damages (actual or consequential, direct or indirect),\r\n              whether now known or unknown, of every kind and nature relating\r\n              to, arising out of or in any way connected with: disputes between\r\n              Users, or any other person or entity, the Products’ use,\r\n              including, without limitation, any and all claims that such use\r\n              violates any of Seller’s intellectual property rights, copyrights,\r\n              rights of publicity or privacy, “moral rights,” or rights of\r\n              attribution and integrity, or Users’ activity on Bookinglane\r\n              Manager, including, but not limited to, Users’ legal capacity,\r\n              ability to complete a transaction, or pay the associated costs.\r\n              User acknowledges and agrees that the Owner has no control over,\r\n              and shall have no liability for any damages resulting from, the\r\n              use or misuse by any other person or entity of any Products. If\r\n              the Owner becomes aware of any Products that allegedly may not\r\n              conform to the Terms, the Owner may investigate the allegation and\r\n              determine in its sole discretion whether to take action in\r\n              accordance with the Terms. The Owner has no liability or\r\n              responsibility to Users for performance or nonperformance of such\r\n              activities. The Owner has the absolute right to remove and/or\r\n              delete without notice any Products within its control that it\r\n              deems objectionable. Users consent to such removal and/or deletion\r\n              and waive any claim against the Owner for such removal and/or\r\n              deletion. The Owner is not responsible or liable for failure to\r\n              store posted content or other materials Users may transmit through\r\n              Bookinglane Manager. Users shall take measures to preserve copies\r\n              of any data, material, content or information such User posts on\r\n              Bookinglane Manager. Any identity verification methods the Owner\r\n              employs is strictly on a best efforts basis and shall not be\r\n              relied upon by Users. Without prejudice to its role as a mere\r\n              technical intermediary as described above, the Owner may provide\r\n              additional services to either party of such interaction, such as\r\n              providing packaging, shipping or facilitating dispute resolution.\r\n              Bookinglane Manager merely serves as a technical infrastructure or\r\n              platform to allow Users to interact with each other. The Owner\r\n              therefore is not directly involved in any such interactions\r\n              between Users. These Terms only apply to the described usage of\r\n              Bookinglane Manager as a platform. Terms, conditions and any other\r\n              provision applying specifically to transactions between Buyers and\r\n              Sellers are specified by each Seller.\r\n            </p>\r\n\r\n            <p>TERMS OF USE</p>\r\n            <p>\r\n              Unless otherwise specified, the terms of use detailed in this\r\n              section apply generally when using Bookinglane Manager. Single or\r\n              additional conditions of use or access may apply in specific\r\n              scenarios and in such cases are additionally indicated within this\r\n              document. By using Bookinglane Manager, Users confirm to meet the\r\n              following requirements: There are no restrictions for Users in\r\n              terms of being Consumers or Business Users; Users aren’t located\r\n              in a country that is subject to a U.S. Government embargo, or that\r\n              has been designated by the U.S. Government as a\r\n              “terrorist-supporting” country; Users aren’t listed on any U.S.\r\n              Government list of prohibited or restricted parties;\r\n            </p>\r\n\r\n            <p>Account registration</p>\r\n\r\n            <p>\r\n              To use the Service Users must register or create a User account,\r\n              providing all required data or information in a complete and\r\n              truthful manner. Failure to do so will cause unavailability of the\r\n              Service. Users are responsible for keeping their login credentials\r\n              confidential and safe. For this reason, Users are also required to\r\n              choose passwords that meet the highest standards of strength\r\n              permitted by Bookinglane Manager. By registering, Users agree to\r\n              be fully responsible for all activities that occur under their\r\n              username and password. Users are required to immediately and\r\n              unambiguously inform the Owner via the contact details indicated\r\n              in this document, if they think their personal information,\r\n              including but not limited to User accounts, access credentials or\r\n              personal data, have been violated, unduly disclosed or stolen.\r\n            </p>\r\n\r\n            <p>Conditions for account registration</p>\r\n\r\n            <p>\r\n              Registration of User accounts on Bookinglane Manager is subject to\r\n              the conditions outlined below. By registering, Users agree to meet\r\n              such conditions. Accounts registered by bots or any other\r\n              automated methods are not permitted. Unless otherwise specified,\r\n              each User must register only one account. Unless explicitly\r\n              permitted, a User account may not be shared with other persons.\r\n            </p>\r\n\r\n            <p>Account termination</p>\r\n\r\n            <p>\r\n              Users can terminate their account and stop using the Service at\r\n              any time by doing the following: By directly contacting the Owner\r\n              at the contact details provided in this document. However,\r\n              termination of the account will not be possible until the\r\n              subscription period paid for by the User has expired.\r\n            </p>\r\n\r\n            <p>Account suspension and deletion</p>\r\n\r\n            <p>\r\n              The Owner reserves the right, at its sole discretion, to suspend\r\n              or delete at any time and without notice, User accounts which it\r\n              deems inappropriate, offensive or in violation of these Terms. The\r\n              suspension or deletion of User accounts shall not entitle Users to\r\n              any claims for compensation, damages or reimbursement. The\r\n              suspension or deletion of accounts due to causes attributable to\r\n              the User does not exempt the User from paying any applicable fees\r\n              or prices.\r\n            </p>\r\n\r\n            <p>Content on Bookinglane Manager</p>\r\n\r\n            <p>\r\n              Unless where otherwise specified or clearly recognizable, all\r\n              content available on Bookinglane Manager is owned or provided by\r\n              the Owner or its licensors. The Owner undertakes its utmost effort\r\n              to ensure that the content provided on Bookinglane Manager\r\n              infringes no applicable legal provisions or third-party rights.\r\n              However, it may not always be possible to achieve such a result.\r\n              In such cases, without prejudice to any legal prerogatives of\r\n              Users to enforce their rights, Users are kindly asked to\r\n              preferably report related complaints using the contact details\r\n              provided in this document.\r\n            </p>\r\n\r\n            <p>\r\n              Rights regarding content on Bookinglane Manager - All rights\r\n              reserved\r\n            </p>\r\n\r\n            <p>\r\n              The Owner holds and reserves all intellectual property rights for\r\n              any such content. Users may not therefore use such content in any\r\n              way that is not necessary or implicit in the proper use of the\r\n              Service. In particular, but without limitation, Users may not\r\n              copy, download, share (beyond the limits set forth below), modify,\r\n              translate, transform, publish, transmit, sell, sublicense, edit,\r\n              transfer/assign to third parties or create derivative works from\r\n              the content available on Bookinglane Manager, nor allow any third\r\n              party to do so through the User or their device, even without the\r\n              User's knowledge. Where explicitly stated on Bookinglane Manager,\r\n              the User may download, copy and/or share some content available\r\n              through Bookinglane Manager for its sole personal and\r\n              non-commercial use and provided that the copyright attributions\r\n              and all the other attributions requested by the Owner are\r\n              correctly implemented. Any applicable statutory limitation or\r\n              exception to copyright shall stay unaffected.\r\n            </p>\r\n\r\n            <p>Content provided by Users</p>\r\n\r\n            <p>\r\n              The Owner allows Users to upload, share or provide their own\r\n              content to Bookinglane Manager. By providing content to\r\n              Bookinglane Manager, Users confirm that they are legally allowed\r\n              to do so and that they are not infringing any statutory provisions\r\n              and/or third-party rights. Further insights regarding acceptable\r\n              content can be found inside the respective section on Bookinglane\r\n              Manager which details the acceptable uses.\r\n            </p>\r\n\r\n            <p>Rights regarding content provided by Users</p>\r\n\r\n            <p>\r\n              Users acknowledge and accept that by providing their own content\r\n              on Bookinglane Manager they grant the Owner a non-exclusive, fully\r\n              paid-up and royalty-free license to process such content solely\r\n              for the operation and maintenance of Bookinglane Manager as\r\n              contractually required. To the extent permitted by applicable law,\r\n              Users waive any moral rights in connection with content they\r\n              provide to Bookinglane Manager. Users acknowledge, accept and\r\n              confirm that all content they provide through Bookinglane Manager\r\n              is provided subject to the same general conditions set forth for\r\n              content on Bookinglane Manager.\r\n            </p>\r\n\r\n            <p>Liability for provided content</p>\r\n            <p>\r\n              Users are solely liable for any content they upload, post, share,\r\n              or provide through Bookinglane Manager. Users acknowledge and\r\n              accept that the Owner does not filter or moderate such content.\r\n              However, the Owner reserves the right to remove, delete, block or\r\n              rectify such content at its own discretion and to, without prior\r\n              notice, deny the uploading User access to Bookinglane Manager: if\r\n              any complaint based on such content is received; if a notice of\r\n              infringement of intellectual property rights is received; upon\r\n              order of a public authority; or where the Owner is made aware that\r\n              the content, while being accessible via Bookinglane Manager, may\r\n              represent a risk for Users, third parties and/or the availability\r\n              of the Service. The removal, deletion, blocking or rectification\r\n              of content shall not entitle Users that have provided such content\r\n              or that are liable for it, to any claims for compensation, damages\r\n              or reimbursement. Users agree to hold the Owner harmless from and\r\n              against any claim asserted and/or damage suffered due to content\r\n              they provided to or provided through Bookinglane Manager.\r\n            </p>\r\n\r\n            <p>Access to external resources</p>\r\n            <p>\r\n              Through Bookinglane Manager Users may have access to external\r\n              resources provided by third parties. Users acknowledge and accept\r\n              that the Owner has no control over such resources and is therefore\r\n              not responsible for their content and availability. Conditions\r\n              applicable to any resources provided by third parties, including\r\n              those applicable to any possible grant of rights in content,\r\n              result from each such third parties’ terms and conditions or, in\r\n              the absence of those, applicable statutory law.\r\n            </p>\r\n\r\n            <p>Acceptable use</p>\r\n            <p>\r\n              Bookinglane Manager and the Service may only be used within the\r\n              scope of what they are provided for, under these Terms and\r\n              applicable law. Users are solely responsible for making sure that\r\n              their use of Bookinglane Manager and/or the Service violates no\r\n              applicable law, regulations or third-party rights. Therefore, the\r\n              Owner reserves the right to take any appropriate measure to\r\n              protect its legitimate interests including by denying Users access\r\n              to Bookinglane Manager or the Service, terminating contracts,\r\n              reporting any misconduct performed through Bookinglane Manager or\r\n              the Service to the competent authorities – such as judicial or\r\n              administrative authorities - whenever Users engage or are\r\n              suspected to engage in any of the following activities: violate\r\n              laws, regulations and/or these Terms; infringe any third-party\r\n              rights; considerably impair the Owner’s legitimate interests;\r\n              offend the Owner or any third party.\r\n            </p>\r\n\r\n            <p>Software license</p>\r\n            <p>\r\n              The software embedded in or related to Bookinglane Manager is\r\n              provided under a some-rights-reserved license. This means that\r\n              Users are granted broad rights, including but not limited to the\r\n              rights to use, execute, copy or distribute the software, to the\r\n              extent determined by such license. The terms of such license shall\r\n              always prevail upon conflicting, divergent or inconsistent\r\n              provisions of these Terms. Users may find further information\r\n              regarding the license terms in the relevant section of Bookinglane\r\n              Manager.\r\n            </p>\r\n\r\n            <p variant=\"h5\" color=\"textPrimary\" paragraph={true}>\r\n              TERMS AND CONDITIONS OF SALE\r\n            </p>\r\n\r\n            <p>Paid Products</p>\r\n            <p>\r\n              Some of the Products provided on Bookinglane Manager, as part of\r\n              the Service, are provided on the basis of payment. The fees,\r\n              duration and conditions applicable to the purchase of such\r\n              Products are described below and in the dedicated sections of\r\n              Bookinglane Manager.\r\n            </p>\r\n            <p>Product description</p>\r\n            <p>\r\n              Prices, descriptions or availability of Products are outlined in\r\n              the respective sections of Bookinglane Manager and are subject to\r\n              change without notice. While Products on Bookinglane Manager are\r\n              presented with the greatest accuracy technically possible,\r\n              representation on Bookinglane Manager through any means\r\n              (including, as the case may be, graphic material, images, colors,\r\n              sounds) is for reference only and implies no warranty as to the\r\n              characteristics of the purchased Product. The characteristics of\r\n              the chosen Product will be outlined during the purchasing process.\r\n            </p>\r\n            <p>Purchasing process</p>\r\n            <p>\r\n              Any steps taken from choosing a Product to order submission form\r\n              part of the purchasing process. The purchasing process includes\r\n              these steps: By clicking on the checkout button, Users open the\r\n              Stripe checkout section, wherein they will have to specify their\r\n              contact details and a payment method of their choice. After\r\n              providing all the required information, Users must carefully\r\n              review the order and, subsequently, confirm and submit it by using\r\n              the relevant button or mechanism on Bookinglane Manager, hereby\r\n              accepting these Terms and committing to pay the agreed-upon price.\r\n            </p>\r\n            <p>Order submission</p>\r\n            <p>\r\n              When the User submits an order, the following applies: The\r\n              submission of an order determines contract conclusion and\r\n              therefore creates for the User the obligation to pay the price,\r\n              taxes and possible further fees and expenses, as specified on the\r\n              order page. In case the purchased Product requires active input\r\n              from the User, such as the provision of personal information or\r\n              data, specifications or special wishes, the order submission\r\n              creates an obligation for the User to cooperate accordingly. Upon\r\n              submission of the order, Users will receive a receipt confirming\r\n              that the order has been received. All notifications related to the\r\n              described purchasing process shall be sent to the email address\r\n              provided by the User for such purposes.\r\n            </p>\r\n\r\n            <p>Prices</p>\r\n            <p>\r\n              Users are informed during the purchasing process and before order\r\n              submission, about any fees, taxes and costs (including, if any,\r\n              delivery costs) that they will be charged. Prices on Bookinglane\r\n              Manager are displayed: either exclusive or inclusive of any\r\n              applicable fees, taxes and costs, depending on the section the\r\n              User is browsing.\r\n            </p>\r\n\r\n            <p>Methods of payment</p>\r\n            <p>\r\n              Information related to accepted payment methods are made available\r\n              during the purchasing process. Some payment methods may only be\r\n              available subject to additional conditions or fees. In such cases\r\n              related information can be found in the dedicated section of\r\n              Bookinglane Manager. All payments are independently processed\r\n              through third-party services. Therefore, Bookinglane Manager does\r\n              not collect any payment information – such as credit card details\r\n              – but only receives a notification once the payment has been\r\n              successfully completed. If payment through the available methods\r\n              fail or is refused by the payment service provider, the Owner\r\n              shall be under no obligation to fulfil the purchase order. Any\r\n              possible costs or fees resulting from the failed or refused\r\n              payment shall be borne by the User.\r\n            </p>\r\n            <p>Purchase via app store</p>\r\n            <p>\r\n              Bookinglane Manager or specific Products available for sale on\r\n              Bookinglane Manager must be purchased via a third-party app store.\r\n              To access such purchases, Users must follow the instructions\r\n              provided on the relevant online store (such as \"Apple App Store\"\r\n              or \"Google Play\"), which may vary depending on the particular\r\n              device in use. Unless otherwise specified, purchases done via\r\n              third-party online stores are also subject to such third-parties’\r\n              terms and conditions, which, in case of any inconsistency or\r\n              conflict, shall always prevail upon these Terms. Users purchasing\r\n              through such third-party online stores must therefore read such\r\n              terms and conditions of sale carefully and accept them.\r\n            </p>\r\n            <p>Retention of usage rights</p>\r\n            <p>\r\n              Users do not acquire any rights to use the purchased Product until\r\n              the total purchase price is received by the Owner.\r\n            </p>\r\n            <p>Delivery</p>\r\n            <p>\r\n              Performance of services The purchased service shall be performed\r\n              or made available within the timeframe specified on Bookinglane\r\n              Manager or as communicated before the order submission.\r\n            </p>\r\n            <p>Contract duration</p>\r\n            <p>\r\n              Trial period Users have the option to test Bookinglane Manager or\r\n              selected Products during a limited and non-renewable trial period,\r\n              at no cost. Some features or functions of Bookinglane Manager may\r\n              not be available to Users during the trial period. Further\r\n              conditions applicable to the trial period, including its duration,\r\n              will be specified on Bookinglane Manager. The trial period shall\r\n              automatically convert into the equivalent paid Product, unless the\r\n              User cancels the purchase before the trial period expires.\r\n              Subscriptions Subscriptions allow Users to receive a Product\r\n              continuously or regularly over a determined period of time. Paid\r\n              subscriptions begin on the day the payment is received by the\r\n              Owner. In order to maintain subscriptions, Users must pay the\r\n              required recurring fee in a timely manner. Failure to do so may\r\n              cause service interruptions. Fixed-term subscriptions Paid\r\n              fixed-term subscriptions start on the day the payment is received\r\n              by the Owner and last for the subscription period chosen by the\r\n              User or otherwise specified during the purchasing process. Once\r\n              the subscription period expires, the Product shall no longer be\r\n              accessible, unless the User renews the subscription by paying the\r\n              relevant fee. Fixed-term subscriptions may not be terminated\r\n              prematurely and shall run out upon expiration of the subscription\r\n              term. Subscriptions handled via Apple ID Users may subscribe to a\r\n              Product using the Apple ID associated with their Apple App Store\r\n              account by using the relevant process on Bookinglane Manager. When\r\n              doing so, Users acknowledge and accept that any payment due shall\r\n              be charged to their Apple ID account; subscriptions are\r\n              automatically renewed for the same duration unless the User\r\n              cancels at least 24 hours before the current period expires; any\r\n              and all fees or payments due for renewal will be charged within\r\n              24-hours before the end of the current period; subscriptions can\r\n              be managed or cancelled in the Users’ Apple App Store account\r\n              settings. The above shall prevail upon any conflicting or\r\n              diverging provision of these Terms. Automatic renewal\r\n              Subscriptions are automatically renewed through the payment method\r\n              that the User chose during purchase, unless the User cancels the\r\n              subscription within the deadlines for termination specified in the\r\n              relevant section of these Terms and/or Bookinglane Manager. The\r\n              renewed subscription will last for a period equal to the original\r\n              term. The User shall receive a reminder of the upcoming renewal\r\n              with reasonable advance, outlining the procedure to be followed in\r\n              order to cancel the automatic renewal. Termination Recurring\r\n              subscriptions may be terminated at any time by sending a clear and\r\n              unambiguous termination notice to the Owner using the contact\r\n              details provided in this document, or — if applicable — by using\r\n              the corresponding controls inside Bookinglane Manager. Termination\r\n              notice If the notice of termination is received by the Owner\r\n              before the subscription renews, the termination shall take effect\r\n              as soon as the current period is completed.\r\n            </p>\r\n            <p>User rights</p>\r\n            <p>Right of withdrawal</p>\r\n            <p>\r\n              Unless exceptions apply, the User may be eligible to withdraw from\r\n              the contract within the period specified below (generally 14\r\n              days), for any reason and without justification. Users can learn\r\n              more about the withdrawal conditions within this section. The\r\n              right of withdrawal does not apply on Bookinglane Manager Users\r\n              acknowledge and accept that the right of withdrawal does not apply\r\n              to contracts concluded over Bookinglane Manager due to the nature\r\n              of its offering.\r\n            </p>\r\n            <p>Liability and indemnification</p>\r\n            <p>EU Users</p>\r\n            <p>\r\n              Indemnification The User agrees to indemnify and hold the Owner\r\n              and its subsidiaries, affiliates, officers, directors, agents,\r\n              co-branders, partners and employees harmless from and against any\r\n              claim or demand ⁠— including but not limited to lawyer's fees and\r\n              costs ⁠— made by any third party due to or in relation with any\r\n              culpable use of or connection to the Service, violation of these\r\n              Terms, infringement of any third-party rights or statutory\r\n              provision by the User or its affiliates, officers, directors,\r\n              agents, co-branders, partners and employees to the extent allowed\r\n              by applicable law. Users acknowledge and accept that the Owner\r\n              merely provides Users with the technical infrastructure and\r\n              features incorporated in Bookinglane Manager. The Owner does not\r\n              intermediate, moderate, promote or intervene in interactions,\r\n              agreements or transactions between Users and therefore bears no\r\n              liability for any such interactions among Users, including the\r\n              performance of any Users' obligations. Users, in particular,\r\n              acknowledge and accept that the Owner is not involved in sales and\r\n              purchases by Users qualifying respectively as Sellers or Buyers\r\n              over Bookinglane Manager. This means that Sellers and Buyers are\r\n              solely liable for respectively offering and purchasing through\r\n              Bookinglane Manager and for the obligations resulting thereof. In\r\n              particular, the Owner shall bear no liability for: any\r\n              pre-contractual statement, claim or description of the Products\r\n              offered through/via Bookinglane Manager; the existence of any\r\n              applicable license, authorization, qualification or other official\r\n              permit allowing Sellers to offer specific goods or services, as\r\n              may be required by applicable law; the Buyers' eligibility (e.g.\r\n              in terms of age, solvency etc.) for purchase according to\r\n              applicable law; any obligation stipulated by Users over\r\n              Bookinglane Manager, including but not limited to product\r\n              guarantees and product safety; any claim based on partial,\r\n              incorrect or failed performance of binding agreements entered into\r\n              on Bookinglane Manager. Limitation of liability Unless otherwise\r\n              explicitly stated and without prejudice to applicable statutory\r\n              product liability provisions, Users shall have no right to claim\r\n              damages against the Owner (or any natural or legal person acting\r\n              on its behalf). This does not apply to damages to life, health or\r\n              physical integrity, damages resulting from the breach of an\r\n              essential contractual obligation such as any obligation strictly\r\n              necessary to achieve the purpose of the contract, and/or damages\r\n              resulting from intent or gross negligence, as long as Bookinglane\r\n              Manager has been appropriately and correctly used by the User.\r\n              Unless damages have been caused by way of intent or gross\r\n              negligence, or they affect life, health or physical integrity, the\r\n              Owner shall only be liable to the extent of typical and\r\n              foreseeable damages at the moment the contract was entered into.\r\n              In particular, within the limits stated above, the Owner shall not\r\n              be liable for: any loss of business opportunities and any other\r\n              loss, even indirect, that may be incurred by the User (such as,\r\n              but not limited to, trading losses, loss of revenue, income,\r\n              profits or anticipated savings, loss of contracts or business\r\n              relationships, loss of reputation or goodwill, etc.); damages or\r\n              losses resulting from interruptions or malfunctions of Bookinglane\r\n              Manager due to acts of force majeure, or unforeseen and\r\n              unforeseeable events and, in any case, independent of the will and\r\n              beyond the control of the Owner, such as, but not limited to,\r\n              failures or disruptions of telephone or electrical lines, the\r\n              Internet and / or other means of transmission, unavailability of\r\n              websites, strikes, natural disasters, viruses and cyber attacks,\r\n              interruptions in the delivery of products, third-party services or\r\n              applications; any losses that are not the direct consequence of a\r\n              breach of the Terms by the Owner; Notwithstanding the above, the\r\n              following limitation applies to all Users not qualifying as\r\n              Consumers: In any event of liability, the compensation may not\r\n              exceed the total payments that have been, will be or would be\r\n              received by the Owner from the User based on the contract over a\r\n              period of 12 months, or the period of the duration of the\r\n              Agreement, if shorter.\r\n            </p>\r\n            <p>Australian Users</p>\r\n            <p>Limitation of liability</p>\r\n            <p>\r\n              Nothing in these Terms excludes, restricts or modifies any\r\n              guarantee, condition, warranty, right or remedy which the User may\r\n              have under the Competition and Consumer Act 2010 (Cth) or any\r\n              similar State and Territory legislation and which cannot be\r\n              excluded, restricted or modified (non-excludable right). To the\r\n              fullest extent permitted by law, our liability to the User,\r\n              including liability for a breach of a non-excludable right and\r\n              liability which is not otherwise excluded under these Terms of\r\n              Use, is limited, at the Owner’s sole discretion, to the\r\n              re-performance of the services or the payment of the cost of\r\n              having the services supplied again.\r\n            </p>\r\n\r\n            <p>US Users</p>\r\n            <p>\r\n              Disclaimer of Warranties Bookinglane Manager is provided strictly\r\n              on an “as is” and “as available” basis. Use of the Service is at\r\n              Users’ own risk. To the maximum extent permitted by applicable\r\n              law, the Owner expressly disclaims all conditions,\r\n              representations, and warranties — whether express, implied,\r\n              statutory or otherwise, including, but not limited to, any implied\r\n              warranty of merchantability, fitness for a particular purpose, or\r\n              non-infringement of third-party rights. No advice or information,\r\n              whether oral or written, obtained by user from owner or through\r\n              the Service will create any warranty not expressly stated herein.\r\n              Without limiting the foregoing, the Owner, its subsidiaries,\r\n              affiliates, licensors, officers, directors, agents, co-branders,\r\n              partners, suppliers and employees do not warrant that the content\r\n              is accurate, reliable or correct; that the Service will meet\r\n              Users’ requirements; that the Service will be available at any\r\n              particular time or location, uninterrupted or secure; that any\r\n              defects or errors will be corrected; or that the Service is free\r\n              of viruses or other harmful components. Any content downloaded or\r\n              otherwise obtained through the use of the Service is downloaded at\r\n              users own risk and users shall be solely responsible for any\r\n              damage to Users’ computer system or mobile device or loss of data\r\n              that results from such download or Users’ use of the Service. The\r\n              Owner does not warrant, endorse, guarantee, or assume\r\n              responsibility for any product or service advertised or offered by\r\n              a third party through the Service or any hyperlinked website or\r\n              service, and the Owner shall not be a party to or in any way\r\n              monitor any transaction between Users and third-party providers of\r\n              products or services. The Service may become inaccessible or it\r\n              may not function properly with Users’ web browser, mobile device,\r\n              and/or operating system. The owner cannot be held liable for any\r\n              perceived or actual damages arising from Service content,\r\n              operation, or use of this Service. Federal law, some states, and\r\n              other jurisdictions, do not allow the exclusion and limitations of\r\n              certain implied warranties. The above exclusions may not apply to\r\n              Users. This Agreement gives Users specific legal rights, and Users\r\n              may also have other rights which vary from state to state. The\r\n              disclaimers and exclusions under this agreement shall not apply to\r\n              the extent prohibited by applicable law.\r\n            </p>\r\n            <p>Limitations of liability</p>\r\n            <p>\r\n              To the maximum extent permitted by applicable law, in no event\r\n              shall the Owner, and its subsidiaries, affiliates, officers,\r\n              directors, agents, co-branders, partners, suppliers and employees\r\n              be liable for any indirect, punitive, incidental, special,\r\n              consequential or exemplary damages, including without limitation\r\n              damages for loss of profits, goodwill, use, data or other\r\n              intangible losses, arising out of or relating to the use of, or\r\n              inability to use, the Service; and any damage, loss or injury\r\n              resulting from hacking, tampering or other unauthorized access or\r\n              use of the Service or User account or the information contained\r\n              therein; any errors, mistakes, or inaccuracies of content;\r\n              personal injury or property damage, of any nature whatsoever,\r\n              resulting from User access to or use of the Service; any\r\n              unauthorized access to or use of the Owner’s secure servers and/or\r\n              any and all personal information stored therein; any interruption\r\n              or cessation of transmission to or from the Service; any bugs,\r\n              viruses, trojan horses, or the like that may be transmitted to or\r\n              through the Service; any errors or omissions in any content or for\r\n              any loss or damage incurred as a result of the use of any content\r\n              posted, emailed, transmitted, or otherwise made available through\r\n              the Service; and/or the defamatory, offensive, or illegal conduct\r\n              of any User or third party. In no event shall the Owner, and its\r\n              subsidiaries, affiliates, officers, directors, agents,\r\n              co-branders, partners, suppliers and employees be liable for any\r\n              claims, proceedings, liabilities, obligations, damages, losses or\r\n              costs in an amount exceeding the amount paid by User to the Owner\r\n              hereunder in the preceding 12 months, or the period of duration of\r\n              this agreement between the Owner and User, whichever is shorter.\r\n              This limitation of liability section shall apply to the fullest\r\n              extent permitted by law in the applicable jurisdiction whether the\r\n              alleged liability is based on contract, tort, negligence, strict\r\n              liability, or any other basis, even if company has been advised of\r\n              the possibility of such damage. Some jurisdictions do not allow\r\n              the exclusion or limitation of incidental or consequential\r\n              damages, therefore the above limitations or exclusions may not\r\n              apply to User. The terms give User specific legal rights, and User\r\n              may also have other rights which vary from jurisdiction to\r\n              jurisdiction. The disclaimers, exclusions, and limitations of\r\n              liability under the terms shall not apply to the extent prohibited\r\n              by applicable law.\r\n            </p>\r\n            <p>Indemnification</p>\r\n            <p>\r\n              The User agrees to defend, indemnify and hold the Owner and its\r\n              subsidiaries, affiliates, officers, directors, agents,\r\n              co-branders, partners, suppliers and employees harmless from and\r\n              against any and all claims or demands, damages, obligations,\r\n              losses, liabilities, costs or debt, and expenses, including, but\r\n              not limited to, legal fees and expenses, arising from User’s use\r\n              of and access to the Service, including any data or content\r\n              transmitted or received by User; User’s violation of these terms,\r\n              including, but not limited to, User’s breach of any of the\r\n              representations and warranties set forth in these terms; User’s\r\n              violation of any third-party rights, including, but not limited\r\n              to, any right of privacy or intellectual property rights; User’s\r\n              violation of any statutory law, rule, or regulation; any content\r\n              that is submitted from User’s account, including third party\r\n              access with User’s unique username, password or other security\r\n              measure, if applicable, including, but not limited to, misleading,\r\n              false, or inaccurate information; User’s willful misconduct; or\r\n              statutory provision by User or its affiliates, officers,\r\n              directors, agents, co-branders, partners, suppliers and employees\r\n              to the extent allowed by applicable law.\r\n            </p>\r\n            <p>Common provisions</p>\r\n            <p>No Waiver</p>\r\n            <p>\r\n              The Owner’s failure to assert any right or provision under these\r\n              Terms shall not constitute a waiver of any such right or\r\n              provision. No waiver shall be considered a further or continuing\r\n              waiver of such term or any other term.\r\n            </p>\r\n            <p>Service interruption</p>\r\n            <p>\r\n              To ensure the best possible service level, the Owner reserves the\r\n              right to interrupt the Service for maintenance, system updates or\r\n              any other changes, informing the Users appropriately. Within the\r\n              limits of law, the Owner may also decide to suspend or terminate\r\n              the Service altogether. If the Service is terminated, the Owner\r\n              will cooperate with Users to enable them to withdraw Personal Data\r\n              or information in accordance with applicable law. Additionally,\r\n              the Service might not be available due to reasons outside the\r\n              Owner’s reasonable control, such as “force majeure” (eg. labor\r\n              actions, infrastructural breakdowns or blackouts etc).\r\n            </p>\r\n            <p>Service reselling</p>\r\n            <p>\r\n              Users may not reproduce, duplicate, copy, sell, resell or exploit\r\n              any portion of Bookinglane Manager and of its Service without the\r\n              Owner’s express prior written permission, granted either directly\r\n              or through a legitimate reselling program.\r\n            </p>\r\n            <p>Privacy policy</p>\r\n            <p>\r\n              To learn more about the use of their Personal Data, Users may\r\n              refer to the privacy policy of Bookinglane Manager.\r\n            </p>\r\n\r\n            <p>Intellectual property rights</p>\r\n            <p>\r\n              Without prejudice to any more specific provision of these Terms,\r\n              any intellectual property rights, such as copyrights, trademark\r\n              rights, patent rights and design rights related to Bookinglane\r\n              Manager are the exclusive property of the Owner or its licensors\r\n              and are subject to the protection granted by applicable laws or\r\n              international treaties relating to intellectual property. All\r\n              trademarks — nominal or figurative — and all other marks, trade\r\n              names, service marks, word marks, illustrations, images, or logos\r\n              appearing in connection with Bookinglane Manager are, and remain,\r\n              the exclusive property of the Owner or its licensors and are\r\n              subject to the protection granted by applicable laws or\r\n              international treaties related to intellectual property.\r\n            </p>\r\n            <p>Changes to these Terms</p>\r\n            <p>\r\n              The Owner reserves the right to amend or otherwise modify these\r\n              Terms at any time. In such cases, the Owner will appropriately\r\n              inform the User of these changes. Such changes will only affect\r\n              the relationship with the User for the future. The continued use\r\n              of the Service will signify the User’s acceptance of the revised\r\n              Terms. If Users do not wish to be bound by the changes, they must\r\n              stop using the Service. Failure to accept the revised Terms, may\r\n              entitle either party to terminate the Agreement. The applicable\r\n              previous version will govern the relationship prior to the User's\r\n              acceptance. The User can obtain any previous version from the\r\n              Owner. If required by applicable law, the Owner will specify the\r\n              date by which the modified Terms will enter into force.\r\n            </p>\r\n            <p>Assignment of contract</p>\r\n            <p>\r\n              The Owner reserves the right to transfer, assign, dispose of by\r\n              novation, or subcontract any or all rights or obligations under\r\n              these Terms, taking the User’s legitimate interests into account.\r\n              Provisions regarding changes of these Terms will apply\r\n              accordingly. Users may not assign or transfer their rights or\r\n              obligations under these Terms in any way, without the written\r\n              permission of the Owner.\r\n            </p>\r\n            <p>Contacts</p>\r\n            <p>\r\n              All communications relating to the use of Bookinglane Manager must\r\n              be sent using the contact information stated in this document.\r\n            </p>\r\n            <p>Severability</p>\r\n            <p>\r\n              Should any provision of these Terms be deemed or become invalid or\r\n              unenforceable under applicable law, the invalidity or\r\n              unenforceability of such provision shall not affect the validity\r\n              of the remaining provisions, which shall remain in full force and\r\n              effect.\r\n            </p>\r\n            <p>US Users</p>\r\n            <p>\r\n              Any such invalid or unenforceable provision will be interpreted,\r\n              construed and reformed to the extent reasonably required to render\r\n              it valid, enforceable and consistent with its original intent.\r\n              These Terms constitute the entire Agreement between Users and the\r\n              Owner with respect to the subject matter hereof, and supersede all\r\n              other communications, including but not limited to all prior\r\n              agreements, between the parties with respect to such subject\r\n              matter. These Terms will be enforced to the fullest extent\r\n              permitted by law.\r\n            </p>\r\n            <p>EU Users</p>\r\n            <p>\r\n              Should any provision of these Terms be or be deemed void, invalid\r\n              or unenforceable, the parties shall do their best to find, in an\r\n              amicable way, an agreement on valid and enforceable provisions\r\n              thereby substituting the void, invalid or unenforceable parts. In\r\n              case of failure to do so, the void, invalid or unenforceable\r\n              provisions shall be replaced by the applicable statutory\r\n              provisions, if so permitted or stated under the applicable law.\r\n              Without prejudice to the above, the nullity, invalidity or the\r\n              impossibility to enforce a particular provision of these Terms\r\n              shall not nullify the entire Agreement, unless the severed\r\n              provisions are essential to the Agreement, or of such importance\r\n              that the parties would not have entered into the contract if they\r\n              had known that the provision would not be valid, or in cases where\r\n              the remaining provisions would translate into an unacceptable\r\n              hardship on any of the parties.\r\n            </p>\r\n            <p>Governing law</p>\r\n            <p>\r\n              These Terms are governed by the law of the place where the Owner\r\n              is based, as disclosed in the relevant section of this document,\r\n              without regard to conflict of laws principles. Exception for\r\n              European Consumers However, regardless of the above, if the User\r\n              qualifies as a European Consumer and has their habitual residence\r\n              in a country where the law provides for a higher consumer\r\n              protection standard, such higher standards shall prevail.\r\n            </p>\r\n            <p>Venue of jurisdiction</p>\r\n            <p>\r\n              The exclusive competence to decide on any controversy resulting\r\n              from or connected to these Terms lies with the courts of the place\r\n              where the Owner is based, as displayed in the relevant section of\r\n              this document. Exception for European Consumers The above does not\r\n              apply to any Users that qualify as European Consumers, nor to\r\n              Consumers based in Switzerland, Norway or Iceland.\r\n            </p>\r\n\r\n            <p>Dispute resolution</p>\r\n            <p>Amicable dispute resolution</p>\r\n            <p>\r\n              Users may bring any disputes to the Owner who will try to resolve\r\n              them amicably. While Users' right to take legal action shall\r\n              always remain unaffected, in the event of any controversy\r\n              regarding the use of Bookinglane Manager or the Service, Users are\r\n              kindly asked to contact the Owner at the contact details provided\r\n              in this document. The User may submit the complaint including a\r\n              brief description and if applicable, the details of the related\r\n              order, purchase, or account, to the Owner’s email address\r\n              specified in this document. The Owner will process the complaint\r\n              without undue delay and within 21 days of receiving it.\r\n            </p>\r\n            <p>Definitions and legal references</p>\r\n            <p>\r\n              Bookinglane Manager (or this Application) The property that\r\n              enables the provision of the Service.\r\n            </p>\r\n\r\n            <p>Agreement</p>\r\n            <p>\r\n              Any legally binding or contractual relationship between the Owner\r\n              and the User, governed by these Terms.\r\n            </p>\r\n            <p>Business User</p>\r\n            <p>Any User that does not qualify as a Consumer.</p>\r\n            <p>Buyer</p>\r\n            <p>\r\n              Indicates any User who buys goods or services from Sellers through\r\n              Bookinglane Manager, regardless of whether or not the actual\r\n              transaction takes place through Bookinglane Manager.\r\n            </p>\r\n            <p>European (or Europe)</p>\r\n            <p>\r\n              Applies where a User is physically present or has their registered\r\n              offices within the EU, regardless of nationality.\r\n            </p>\r\n            <p>Example withdrawal form</p>\r\n            <p>\r\n              Addressed to: Bookinglane LLC 1905 Concord Blvd, Concord, CA,\r\n              94520, USA info@bookinglane.com\r\n            </p>\r\n            <p>\r\n              I/We hereby give notice that I/we withdraw from my/our contract of\r\n              sale of the following goods/for the provision of the following\r\n              service: _____________________________________________ (insert a\r\n              description of the goods/services that are subject to the\r\n              respective withdrawal) Ordered on:\r\n              _____________________________________________ (insert the date)\r\n              Received on: _____________________________________________ (insert\r\n              the date) Name of\r\n              consumer(s):_____________________________________________ Address\r\n              of consumer(s):_____________________________________________ Date:\r\n              _____________________________________________ (sign if this form\r\n              is notified on paper)\r\n            </p>\r\n            <p>Owner (or We)</p>\r\n            <p>\r\n              Indicates the natural person(s) or legal entity that provides\r\n              Bookinglane Manager and/or the Service to Users.\r\n            </p>\r\n            <p>Product</p>\r\n            <p>\r\n              A good or service available for purchase through Bookinglane\r\n              Manager, such as e.g. physical goods, digital files, software,\r\n              booking services etc. The sale of Products may be part of the\r\n              Service.\r\n            </p>\r\n            <p>Seller</p>\r\n            <p>\r\n              Indicates any User who sells goods or services to Buyers through\r\n              Bookinglane Manager, regardless of whether or not the actual\r\n              transaction takes place through Bookinglane Manager.\r\n            </p>\r\n            <p>Service</p>\r\n            <p>\r\n              The service provided by Bookinglane Manager as described in these\r\n              Terms and on Bookinglane Manager.\r\n            </p>\r\n            <p>Terms</p>\r\n            <p>\r\n              All provisions applicable to the use of Bookinglane Manager and/or\r\n              the Service as described in this document, including any other\r\n              related documents or agreements, and as updated from time to time.\r\n            </p>\r\n            <p>User (or You)</p>\r\n            <p>\r\n              Indicates any natural person or legal entity using Bookinglane\r\n              Manager.\r\n            </p>\r\n            <p>Consumer</p>\r\n            <p>\r\n              Any User qualifying as a natural person who accesses goods or\r\n              services for personal use, or more generally, acts for purposes\r\n              outside their trade, business, craft or profession. Latest update:\r\n              April 19, 2021 iubenda hosts this content and only collects the\r\n              Personal Data strictly necessary for it to be provided.\r\n            </p>\r\n          </>\r\n        </div>\r\n        {/* </DialogContentText>\r\n        </DialogContent> */}\r\n        {/* <DialogActions>\r\n          <Button onClick={handleClose} color='primary'>\r\n            OK\r\n          </Button>\r\n        </DialogActions> */}\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n",{"ruleId":"464","replacedBy":"465"},{"ruleId":"466","replacedBy":"467"},{"ruleId":"468","severity":1,"message":"469","line":9,"column":29,"nodeType":"470","messageId":"471","endLine":9,"endColumn":38},{"ruleId":"468","severity":1,"message":"472","line":9,"column":40,"nodeType":"470","messageId":"471","endLine":9,"endColumn":48},{"ruleId":"468","severity":1,"message":"473","line":21,"column":3,"nodeType":"470","messageId":"471","endLine":21,"endColumn":15},{"ruleId":"468","severity":1,"message":"474","line":26,"column":45,"nodeType":"470","messageId":"471","endLine":26,"endColumn":54},{"ruleId":"468","severity":1,"message":"475","line":27,"column":10,"nodeType":"470","messageId":"471","endLine":27,"endColumn":16},{"ruleId":"468","severity":1,"message":"476","line":66,"column":5,"nodeType":"470","messageId":"471","endLine":66,"endColumn":38},{"ruleId":"468","severity":1,"message":"477","line":67,"column":5,"nodeType":"470","messageId":"471","endLine":67,"endColumn":41},{"ruleId":"478","severity":1,"message":"479","line":82,"column":3,"nodeType":"480","messageId":"481","endLine":84,"endColumn":4},{"ruleId":"478","severity":1,"message":"479","line":104,"column":5,"nodeType":"480","messageId":"481","endLine":106,"endColumn":6},{"ruleId":"478","severity":1,"message":"479","line":123,"column":5,"nodeType":"480","messageId":"481","endLine":125,"endColumn":6},{"ruleId":"468","severity":1,"message":"482","line":191,"column":9,"nodeType":"470","messageId":"471","endLine":191,"endColumn":19},{"ruleId":"468","severity":1,"message":"483","line":195,"column":9,"nodeType":"470","messageId":"471","endLine":195,"endColumn":17},{"ruleId":"468","severity":1,"message":"484","line":239,"column":5,"nodeType":"470","messageId":"471","endLine":239,"endColumn":14},{"ruleId":"468","severity":1,"message":"485","line":240,"column":5,"nodeType":"470","messageId":"471","endLine":240,"endColumn":35},{"ruleId":"468","severity":1,"message":"486","line":241,"column":5,"nodeType":"470","messageId":"471","endLine":241,"endColumn":30},{"ruleId":"468","severity":1,"message":"487","line":242,"column":5,"nodeType":"470","messageId":"471","endLine":242,"endColumn":32},{"ruleId":"468","severity":1,"message":"488","line":243,"column":5,"nodeType":"470","messageId":"471","endLine":243,"endColumn":27},{"ruleId":"468","severity":1,"message":"489","line":244,"column":5,"nodeType":"470","messageId":"471","endLine":244,"endColumn":18},{"ruleId":"468","severity":1,"message":"490","line":245,"column":5,"nodeType":"470","messageId":"471","endLine":245,"endColumn":15},{"ruleId":"468","severity":1,"message":"491","line":246,"column":5,"nodeType":"470","messageId":"471","endLine":246,"endColumn":15},{"ruleId":"468","severity":1,"message":"492","line":247,"column":5,"nodeType":"470","messageId":"471","endLine":247,"endColumn":28},{"ruleId":"468","severity":1,"message":"493","line":248,"column":5,"nodeType":"470","messageId":"471","endLine":248,"endColumn":21},{"ruleId":"468","severity":1,"message":"494","line":249,"column":5,"nodeType":"470","messageId":"471","endLine":249,"endColumn":20},{"ruleId":"468","severity":1,"message":"495","line":250,"column":5,"nodeType":"470","messageId":"471","endLine":250,"endColumn":21},{"ruleId":"496","severity":1,"message":"497","line":286,"column":33,"nodeType":"498","messageId":"499","endLine":286,"endColumn":35},{"ruleId":"496","severity":1,"message":"497","line":382,"column":35,"nodeType":"498","messageId":"499","endLine":382,"endColumn":37},{"ruleId":"496","severity":1,"message":"497","line":535,"column":33,"nodeType":"498","messageId":"499","endLine":535,"endColumn":35},{"ruleId":"468","severity":1,"message":"500","line":6,"column":7,"nodeType":"470","messageId":"471","endLine":6,"endColumn":30},{"ruleId":"468","severity":1,"message":"501","line":1,"column":10,"nodeType":"470","messageId":"471","endLine":1,"endColumn":17},{"ruleId":"468","severity":1,"message":"501","line":1,"column":10,"nodeType":"470","messageId":"471","endLine":1,"endColumn":17},{"ruleId":"496","severity":1,"message":"497","line":68,"column":21,"nodeType":"498","messageId":"499","endLine":68,"endColumn":23},{"ruleId":"496","severity":1,"message":"497","line":74,"column":21,"nodeType":"498","messageId":"499","endLine":74,"endColumn":23},{"ruleId":"468","severity":1,"message":"501","line":1,"column":10,"nodeType":"470","messageId":"471","endLine":1,"endColumn":17},{"ruleId":"468","severity":1,"message":"502","line":94,"column":9,"nodeType":"470","messageId":"471","endLine":94,"endColumn":21},{"ruleId":"468","severity":1,"message":"503","line":96,"column":9,"nodeType":"470","messageId":"471","endLine":96,"endColumn":26},{"ruleId":"468","severity":1,"message":"504","line":110,"column":5,"nodeType":"470","messageId":"471","endLine":110,"endColumn":19},{"ruleId":"468","severity":1,"message":"489","line":111,"column":5,"nodeType":"470","messageId":"471","endLine":111,"endColumn":18},{"ruleId":"468","severity":1,"message":"490","line":112,"column":5,"nodeType":"470","messageId":"471","endLine":112,"endColumn":15},{"ruleId":"468","severity":1,"message":"491","line":113,"column":5,"nodeType":"470","messageId":"471","endLine":113,"endColumn":15},{"ruleId":"468","severity":1,"message":"492","line":114,"column":5,"nodeType":"470","messageId":"471","endLine":114,"endColumn":28},{"ruleId":"468","severity":1,"message":"493","line":115,"column":5,"nodeType":"470","messageId":"471","endLine":115,"endColumn":21},{"ruleId":"468","severity":1,"message":"494","line":116,"column":5,"nodeType":"470","messageId":"471","endLine":116,"endColumn":20},{"ruleId":"468","severity":1,"message":"505","line":211,"column":7,"nodeType":"470","messageId":"471","endLine":211,"endColumn":25},{"ruleId":"468","severity":1,"message":"484","line":18,"column":5,"nodeType":"470","messageId":"471","endLine":18,"endColumn":14},{"ruleId":"468","severity":1,"message":"504","line":19,"column":5,"nodeType":"470","messageId":"471","endLine":19,"endColumn":19},{"ruleId":"468","severity":1,"message":"489","line":20,"column":5,"nodeType":"470","messageId":"471","endLine":20,"endColumn":18},{"ruleId":"468","severity":1,"message":"490","line":21,"column":5,"nodeType":"470","messageId":"471","endLine":21,"endColumn":15},{"ruleId":"468","severity":1,"message":"491","line":22,"column":5,"nodeType":"470","messageId":"471","endLine":22,"endColumn":15},{"ruleId":"468","severity":1,"message":"492","line":23,"column":5,"nodeType":"470","messageId":"471","endLine":23,"endColumn":28},{"ruleId":"468","severity":1,"message":"493","line":24,"column":5,"nodeType":"470","messageId":"471","endLine":24,"endColumn":21},{"ruleId":"468","severity":1,"message":"494","line":25,"column":5,"nodeType":"470","messageId":"471","endLine":25,"endColumn":20},{"ruleId":"468","severity":1,"message":"506","line":19,"column":11,"nodeType":"470","messageId":"471","endLine":19,"endColumn":22},{"ruleId":"468","severity":1,"message":"472","line":2,"column":10,"nodeType":"470","messageId":"471","endLine":2,"endColumn":18},{"ruleId":"468","severity":1,"message":"507","line":3,"column":8,"nodeType":"470","messageId":"471","endLine":3,"endColumn":17},{"ruleId":"508","severity":1,"message":"509","line":330,"column":7,"nodeType":"510","messageId":"499","endLine":330,"endColumn":16},{"ruleId":"468","severity":1,"message":"511","line":51,"column":5,"nodeType":"470","messageId":"471","endLine":51,"endColumn":11},{"ruleId":"512","severity":1,"message":"513","line":40,"column":6,"nodeType":"514","endLine":40,"endColumn":8,"suggestions":"515"},{"ruleId":"468","severity":1,"message":"516","line":41,"column":9,"nodeType":"470","messageId":"471","endLine":41,"endColumn":18},{"ruleId":"468","severity":1,"message":"517","line":3,"column":10,"nodeType":"470","messageId":"471","endLine":3,"endColumn":22},{"ruleId":"468","severity":1,"message":"518","line":109,"column":9,"nodeType":"470","messageId":"471","endLine":109,"endColumn":19},{"ruleId":"519","severity":1,"message":"520","line":127,"column":18,"nodeType":"521","messageId":"522","endLine":127,"endColumn":19},{"ruleId":"496","severity":1,"message":"497","line":179,"column":27,"nodeType":"498","messageId":"499","endLine":179,"endColumn":29},{"ruleId":"496","severity":1,"message":"497","line":187,"column":27,"nodeType":"498","messageId":"499","endLine":187,"endColumn":29},{"ruleId":"468","severity":1,"message":"469","line":1,"column":29,"nodeType":"470","messageId":"471","endLine":1,"endColumn":38},{"ruleId":"468","severity":1,"message":"523","line":5,"column":8,"nodeType":"470","messageId":"471","endLine":5,"endColumn":16},{"ruleId":"468","severity":1,"message":"474","line":11,"column":10,"nodeType":"470","messageId":"471","endLine":11,"endColumn":19},{"ruleId":"468","severity":1,"message":"524","line":29,"column":8,"nodeType":"470","messageId":"471","endLine":29,"endColumn":14},{"ruleId":"468","severity":1,"message":"525","line":81,"column":10,"nodeType":"470","messageId":"471","endLine":81,"endColumn":23},{"ruleId":"468","severity":1,"message":"526","line":89,"column":10,"nodeType":"470","messageId":"471","endLine":89,"endColumn":26},{"ruleId":"468","severity":1,"message":"527","line":89,"column":28,"nodeType":"470","messageId":"471","endLine":89,"endColumn":47},{"ruleId":"468","severity":1,"message":"528","line":91,"column":10,"nodeType":"470","messageId":"471","endLine":91,"endColumn":22},{"ruleId":"468","severity":1,"message":"529","line":92,"column":10,"nodeType":"470","messageId":"471","endLine":92,"endColumn":22},{"ruleId":"468","severity":1,"message":"530","line":92,"column":24,"nodeType":"470","messageId":"471","endLine":92,"endColumn":40},{"ruleId":"468","severity":1,"message":"531","line":100,"column":37,"nodeType":"470","messageId":"471","endLine":100,"endColumn":65},{"ruleId":"496","severity":1,"message":"497","line":136,"column":27,"nodeType":"498","messageId":"499","endLine":136,"endColumn":29},{"ruleId":"468","severity":1,"message":"532","line":147,"column":18,"nodeType":"470","messageId":"471","endLine":147,"endColumn":24},{"ruleId":"468","severity":1,"message":"533","line":151,"column":9,"nodeType":"470","messageId":"471","endLine":151,"endColumn":15},{"ruleId":"468","severity":1,"message":"534","line":162,"column":9,"nodeType":"470","messageId":"471","endLine":162,"endColumn":29},{"ruleId":"496","severity":1,"message":"497","line":256,"column":29,"nodeType":"498","messageId":"499","endLine":256,"endColumn":31},{"ruleId":"496","severity":1,"message":"497","line":283,"column":30,"nodeType":"498","messageId":"499","endLine":283,"endColumn":32},{"ruleId":"468","severity":1,"message":"535","line":310,"column":10,"nodeType":"470","messageId":"471","endLine":310,"endColumn":24},{"ruleId":"468","severity":1,"message":"536","line":310,"column":26,"nodeType":"470","messageId":"471","endLine":310,"endColumn":43},{"ruleId":"537","severity":1,"message":"538","line":324,"column":34,"nodeType":"498","messageId":"539","endLine":324,"endColumn":35},{"ruleId":"468","severity":1,"message":"540","line":333,"column":5,"nodeType":"470","messageId":"471","endLine":333,"endColumn":36},{"ruleId":"468","severity":1,"message":"504","line":335,"column":5,"nodeType":"470","messageId":"471","endLine":335,"endColumn":19},{"ruleId":"468","severity":1,"message":"489","line":336,"column":5,"nodeType":"470","messageId":"471","endLine":336,"endColumn":18},{"ruleId":"468","severity":1,"message":"490","line":337,"column":5,"nodeType":"470","messageId":"471","endLine":337,"endColumn":15},{"ruleId":"468","severity":1,"message":"491","line":338,"column":5,"nodeType":"470","messageId":"471","endLine":338,"endColumn":15},{"ruleId":"468","severity":1,"message":"493","line":340,"column":5,"nodeType":"470","messageId":"471","endLine":340,"endColumn":21},{"ruleId":"468","severity":1,"message":"485","line":341,"column":5,"nodeType":"470","messageId":"471","endLine":341,"endColumn":35},{"ruleId":"468","severity":1,"message":"486","line":342,"column":5,"nodeType":"470","messageId":"471","endLine":342,"endColumn":30},{"ruleId":"468","severity":1,"message":"488","line":344,"column":5,"nodeType":"470","messageId":"471","endLine":344,"endColumn":27},{"ruleId":"468","severity":1,"message":"541","line":346,"column":26,"nodeType":"470","messageId":"471","endLine":346,"endColumn":43},{"ruleId":"468","severity":1,"message":"542","line":400,"column":10,"nodeType":"470","messageId":"471","endLine":400,"endColumn":29},{"ruleId":"468","severity":1,"message":"543","line":400,"column":31,"nodeType":"470","messageId":"471","endLine":400,"endColumn":53},{"ruleId":"468","severity":1,"message":"544","line":401,"column":7,"nodeType":"470","messageId":"471","endLine":401,"endColumn":17},{"ruleId":"468","severity":1,"message":"518","line":402,"column":9,"nodeType":"470","messageId":"471","endLine":402,"endColumn":19},{"ruleId":"468","severity":1,"message":"545","line":408,"column":9,"nodeType":"470","messageId":"471","endLine":408,"endColumn":13},{"ruleId":"468","severity":1,"message":"546","line":424,"column":7,"nodeType":"470","messageId":"471","endLine":424,"endColumn":19},{"ruleId":"496","severity":1,"message":"497","line":434,"column":28,"nodeType":"498","messageId":"499","endLine":434,"endColumn":30},{"ruleId":"496","severity":1,"message":"497","line":437,"column":28,"nodeType":"498","messageId":"499","endLine":437,"endColumn":30},{"ruleId":"468","severity":1,"message":"547","line":496,"column":13,"nodeType":"470","messageId":"471","endLine":496,"endColumn":20},{"ruleId":"537","severity":1,"message":"538","line":501,"column":42,"nodeType":"498","messageId":"539","endLine":501,"endColumn":43},{"ruleId":"512","severity":1,"message":"548","line":541,"column":3,"nodeType":"549","endLine":541,"endColumn":18,"suggestions":"550"},{"ruleId":"468","severity":1,"message":"475","line":18,"column":10,"nodeType":"470","messageId":"471","endLine":18,"endColumn":16},{"ruleId":"468","severity":1,"message":"551","line":63,"column":9,"nodeType":"470","messageId":"471","endLine":63,"endColumn":15},{"ruleId":"468","severity":1,"message":"552","line":65,"column":9,"nodeType":"470","messageId":"471","endLine":65,"endColumn":21},{"ruleId":"468","severity":1,"message":"553","line":66,"column":9,"nodeType":"470","messageId":"471","endLine":66,"endColumn":12},{"ruleId":"468","severity":1,"message":"504","line":71,"column":5,"nodeType":"470","messageId":"471","endLine":71,"endColumn":19},{"ruleId":"468","severity":1,"message":"489","line":72,"column":5,"nodeType":"470","messageId":"471","endLine":72,"endColumn":18},{"ruleId":"468","severity":1,"message":"490","line":73,"column":5,"nodeType":"470","messageId":"471","endLine":73,"endColumn":15},{"ruleId":"468","severity":1,"message":"491","line":74,"column":5,"nodeType":"470","messageId":"471","endLine":74,"endColumn":15},{"ruleId":"468","severity":1,"message":"493","line":76,"column":5,"nodeType":"470","messageId":"471","endLine":76,"endColumn":21},{"ruleId":"468","severity":1,"message":"494","line":77,"column":5,"nodeType":"470","messageId":"471","endLine":77,"endColumn":20},{"ruleId":"468","severity":1,"message":"485","line":78,"column":5,"nodeType":"470","messageId":"471","endLine":78,"endColumn":35},{"ruleId":"468","severity":1,"message":"486","line":79,"column":5,"nodeType":"470","messageId":"471","endLine":79,"endColumn":30},{"ruleId":"468","severity":1,"message":"488","line":81,"column":5,"nodeType":"470","messageId":"471","endLine":81,"endColumn":27},{"ruleId":"496","severity":1,"message":"497","line":193,"column":49,"nodeType":"498","messageId":"499","endLine":193,"endColumn":51},{"ruleId":"496","severity":1,"message":"497","line":194,"column":49,"nodeType":"498","messageId":"499","endLine":194,"endColumn":51},{"ruleId":"496","severity":1,"message":"497","line":242,"column":48,"nodeType":"498","messageId":"499","endLine":242,"endColumn":50},{"ruleId":"496","severity":1,"message":"497","line":243,"column":49,"nodeType":"498","messageId":"499","endLine":243,"endColumn":51},{"ruleId":"468","severity":1,"message":"472","line":1,"column":17,"nodeType":"470","messageId":"471","endLine":1,"endColumn":25},{"ruleId":"468","severity":1,"message":"469","line":1,"column":27,"nodeType":"470","messageId":"471","endLine":1,"endColumn":36},{"ruleId":"468","severity":1,"message":"554","line":3,"column":24,"nodeType":"470","messageId":"471","endLine":3,"endColumn":31},{"ruleId":"468","severity":1,"message":"518","line":112,"column":9,"nodeType":"470","messageId":"471","endLine":112,"endColumn":19},{"ruleId":"468","severity":1,"message":"504","line":125,"column":5,"nodeType":"470","messageId":"471","endLine":125,"endColumn":19},{"ruleId":"468","severity":1,"message":"489","line":126,"column":5,"nodeType":"470","messageId":"471","endLine":126,"endColumn":18},{"ruleId":"468","severity":1,"message":"490","line":127,"column":5,"nodeType":"470","messageId":"471","endLine":127,"endColumn":15},{"ruleId":"468","severity":1,"message":"491","line":128,"column":5,"nodeType":"470","messageId":"471","endLine":128,"endColumn":15},{"ruleId":"468","severity":1,"message":"493","line":130,"column":5,"nodeType":"470","messageId":"471","endLine":130,"endColumn":21},{"ruleId":"468","severity":1,"message":"485","line":132,"column":5,"nodeType":"470","messageId":"471","endLine":132,"endColumn":35},{"ruleId":"468","severity":1,"message":"486","line":133,"column":5,"nodeType":"470","messageId":"471","endLine":133,"endColumn":30},{"ruleId":"468","severity":1,"message":"488","line":135,"column":5,"nodeType":"470","messageId":"471","endLine":135,"endColumn":27},{"ruleId":"555","severity":1,"message":"556","line":946,"column":21,"nodeType":"557","messageId":"558","endLine":948,"endColumn":22},{"ruleId":"496","severity":1,"message":"497","line":1027,"column":36,"nodeType":"498","messageId":"499","endLine":1027,"endColumn":38},{"ruleId":"468","severity":1,"message":"559","line":12,"column":20,"nodeType":"470","messageId":"471","endLine":12,"endColumn":26},{"ruleId":"468","severity":1,"message":"504","line":64,"column":5,"nodeType":"470","messageId":"471","endLine":64,"endColumn":19},{"ruleId":"468","severity":1,"message":"489","line":65,"column":5,"nodeType":"470","messageId":"471","endLine":65,"endColumn":18},{"ruleId":"468","severity":1,"message":"490","line":66,"column":5,"nodeType":"470","messageId":"471","endLine":66,"endColumn":15},{"ruleId":"468","severity":1,"message":"491","line":67,"column":5,"nodeType":"470","messageId":"471","endLine":67,"endColumn":15},{"ruleId":"468","severity":1,"message":"493","line":69,"column":5,"nodeType":"470","messageId":"471","endLine":69,"endColumn":21},{"ruleId":"468","severity":1,"message":"494","line":70,"column":5,"nodeType":"470","messageId":"471","endLine":70,"endColumn":20},{"ruleId":"468","severity":1,"message":"485","line":71,"column":5,"nodeType":"470","messageId":"471","endLine":71,"endColumn":35},{"ruleId":"468","severity":1,"message":"486","line":72,"column":5,"nodeType":"470","messageId":"471","endLine":72,"endColumn":30},{"ruleId":"468","severity":1,"message":"488","line":74,"column":5,"nodeType":"470","messageId":"471","endLine":74,"endColumn":27},{"ruleId":"496","severity":1,"message":"497","line":1771,"column":41,"nodeType":"498","messageId":"499","endLine":1771,"endColumn":43},{"ruleId":"496","severity":1,"message":"497","line":1846,"column":40,"nodeType":"498","messageId":"499","endLine":1846,"endColumn":42},{"ruleId":"468","severity":1,"message":"560","line":2,"column":10,"nodeType":"470","messageId":"471","endLine":2,"endColumn":18},{"ruleId":"468","severity":1,"message":"561","line":2,"column":20,"nodeType":"470","messageId":"471","endLine":2,"endColumn":29},{"ruleId":"468","severity":1,"message":"562","line":14,"column":10,"nodeType":"470","messageId":"471","endLine":14,"endColumn":20},{"ruleId":"468","severity":1,"message":"554","line":14,"column":36,"nodeType":"470","messageId":"471","endLine":14,"endColumn":43},{"ruleId":"468","severity":1,"message":"559","line":39,"column":20,"nodeType":"470","messageId":"471","endLine":39,"endColumn":26},{"ruleId":"468","severity":1,"message":"563","line":46,"column":8,"nodeType":"470","messageId":"471","endLine":46,"endColumn":22},{"ruleId":"468","severity":1,"message":"564","line":48,"column":10,"nodeType":"470","messageId":"471","endLine":48,"endColumn":19},{"ruleId":"468","severity":1,"message":"474","line":48,"column":21,"nodeType":"470","messageId":"471","endLine":48,"endColumn":30},{"ruleId":"468","severity":1,"message":"565","line":64,"column":3,"nodeType":"470","messageId":"471","endLine":64,"endColumn":24},{"ruleId":"478","severity":1,"message":"566","line":72,"column":1,"nodeType":"480","messageId":"567","endLine":74,"endColumn":2},{"ruleId":"468","severity":1,"message":"483","line":160,"column":9,"nodeType":"470","messageId":"471","endLine":160,"endColumn":17},{"ruleId":"468","severity":1,"message":"504","line":165,"column":5,"nodeType":"470","messageId":"471","endLine":165,"endColumn":19},{"ruleId":"468","severity":1,"message":"491","line":168,"column":5,"nodeType":"470","messageId":"471","endLine":168,"endColumn":15},{"ruleId":"468","severity":1,"message":"486","line":174,"column":5,"nodeType":"470","messageId":"471","endLine":174,"endColumn":30},{"ruleId":"468","severity":1,"message":"488","line":176,"column":5,"nodeType":"470","messageId":"471","endLine":176,"endColumn":27},{"ruleId":"468","severity":1,"message":"568","line":179,"column":10,"nodeType":"470","messageId":"471","endLine":179,"endColumn":14},{"ruleId":"468","severity":1,"message":"569","line":179,"column":16,"nodeType":"470","messageId":"471","endLine":179,"endColumn":23},{"ruleId":"468","severity":1,"message":"570","line":181,"column":9,"nodeType":"470","messageId":"471","endLine":181,"endColumn":22},{"ruleId":"496","severity":1,"message":"497","line":299,"column":33,"nodeType":"498","messageId":"499","endLine":299,"endColumn":35},{"ruleId":"512","severity":1,"message":"571","line":333,"column":6,"nodeType":"514","endLine":333,"endColumn":8,"suggestions":"572"},{"ruleId":"496","severity":1,"message":"497","line":798,"column":34,"nodeType":"498","messageId":"499","endLine":798,"endColumn":36},{"ruleId":"496","severity":1,"message":"497","line":817,"column":36,"nodeType":"498","messageId":"499","endLine":817,"endColumn":38},{"ruleId":"496","severity":1,"message":"497","line":818,"column":43,"nodeType":"498","messageId":"499","endLine":818,"endColumn":45},{"ruleId":"496","severity":1,"message":"497","line":826,"column":34,"nodeType":"498","messageId":"499","endLine":826,"endColumn":36},{"ruleId":"508","severity":1,"message":"573","line":845,"column":29,"nodeType":"510","messageId":"499","endLine":845,"endColumn":39},{"ruleId":"496","severity":1,"message":"497","line":846,"column":36,"nodeType":"498","messageId":"499","endLine":846,"endColumn":38},{"ruleId":"496","severity":1,"message":"497","line":847,"column":43,"nodeType":"498","messageId":"499","endLine":847,"endColumn":45},{"ruleId":"496","severity":1,"message":"497","line":1152,"column":46,"nodeType":"498","messageId":"499","endLine":1152,"endColumn":48},{"ruleId":"555","severity":1,"message":"556","line":1157,"column":29,"nodeType":"557","messageId":"558","endLine":1157,"endColumn":56},{"ruleId":"496","severity":1,"message":"497","line":1159,"column":55,"nodeType":"498","messageId":"499","endLine":1159,"endColumn":57},{"ruleId":"468","severity":1,"message":"574","line":12,"column":9,"nodeType":"470","messageId":"471","endLine":12,"endColumn":25},{"ruleId":"512","severity":1,"message":"575","line":22,"column":6,"nodeType":"514","endLine":22,"endColumn":8,"suggestions":"576"},{"ruleId":"496","severity":1,"message":"497","line":46,"column":51,"nodeType":"498","messageId":"499","endLine":46,"endColumn":53},{"ruleId":"496","severity":1,"message":"497","line":53,"column":34,"nodeType":"498","messageId":"499","endLine":53,"endColumn":36},{"ruleId":"468","severity":1,"message":"472","line":1,"column":10,"nodeType":"470","messageId":"471","endLine":1,"endColumn":18},{"ruleId":"468","severity":1,"message":"577","line":28,"column":9,"nodeType":"470","messageId":"471","endLine":28,"endColumn":16},{"ruleId":"468","severity":1,"message":"540","line":45,"column":5,"nodeType":"470","messageId":"471","endLine":45,"endColumn":36},{"ruleId":"468","severity":1,"message":"504","line":47,"column":5,"nodeType":"470","messageId":"471","endLine":47,"endColumn":19},{"ruleId":"468","severity":1,"message":"489","line":48,"column":5,"nodeType":"470","messageId":"471","endLine":48,"endColumn":18},{"ruleId":"468","severity":1,"message":"490","line":49,"column":5,"nodeType":"470","messageId":"471","endLine":49,"endColumn":15},{"ruleId":"468","severity":1,"message":"491","line":50,"column":5,"nodeType":"470","messageId":"471","endLine":50,"endColumn":15},{"ruleId":"468","severity":1,"message":"493","line":52,"column":5,"nodeType":"470","messageId":"471","endLine":52,"endColumn":21},{"ruleId":"468","severity":1,"message":"485","line":53,"column":5,"nodeType":"470","messageId":"471","endLine":53,"endColumn":35},{"ruleId":"468","severity":1,"message":"486","line":54,"column":5,"nodeType":"470","messageId":"471","endLine":54,"endColumn":30},{"ruleId":"468","severity":1,"message":"488","line":56,"column":5,"nodeType":"470","messageId":"471","endLine":56,"endColumn":27},{"ruleId":"468","severity":1,"message":"577","line":33,"column":9,"nodeType":"470","messageId":"471","endLine":33,"endColumn":16},{"ruleId":"468","severity":1,"message":"483","line":65,"column":9,"nodeType":"470","messageId":"471","endLine":65,"endColumn":17},{"ruleId":"468","severity":1,"message":"540","line":69,"column":5,"nodeType":"470","messageId":"471","endLine":69,"endColumn":36},{"ruleId":"468","severity":1,"message":"504","line":71,"column":5,"nodeType":"470","messageId":"471","endLine":71,"endColumn":19},{"ruleId":"468","severity":1,"message":"489","line":72,"column":5,"nodeType":"470","messageId":"471","endLine":72,"endColumn":18},{"ruleId":"468","severity":1,"message":"490","line":73,"column":5,"nodeType":"470","messageId":"471","endLine":73,"endColumn":15},{"ruleId":"468","severity":1,"message":"491","line":74,"column":5,"nodeType":"470","messageId":"471","endLine":74,"endColumn":15},{"ruleId":"468","severity":1,"message":"493","line":76,"column":5,"nodeType":"470","messageId":"471","endLine":76,"endColumn":21},{"ruleId":"468","severity":1,"message":"485","line":77,"column":5,"nodeType":"470","messageId":"471","endLine":77,"endColumn":35},{"ruleId":"468","severity":1,"message":"486","line":78,"column":5,"nodeType":"470","messageId":"471","endLine":78,"endColumn":30},{"ruleId":"468","severity":1,"message":"488","line":80,"column":5,"nodeType":"470","messageId":"471","endLine":80,"endColumn":27},{"ruleId":"468","severity":1,"message":"577","line":34,"column":9,"nodeType":"470","messageId":"471","endLine":34,"endColumn":16},{"ruleId":"468","severity":1,"message":"483","line":59,"column":9,"nodeType":"470","messageId":"471","endLine":59,"endColumn":17},{"ruleId":"468","severity":1,"message":"540","line":61,"column":5,"nodeType":"470","messageId":"471","endLine":61,"endColumn":36},{"ruleId":"468","severity":1,"message":"504","line":63,"column":5,"nodeType":"470","messageId":"471","endLine":63,"endColumn":19},{"ruleId":"468","severity":1,"message":"489","line":64,"column":5,"nodeType":"470","messageId":"471","endLine":64,"endColumn":18},{"ruleId":"468","severity":1,"message":"490","line":65,"column":5,"nodeType":"470","messageId":"471","endLine":65,"endColumn":15},{"ruleId":"468","severity":1,"message":"491","line":66,"column":5,"nodeType":"470","messageId":"471","endLine":66,"endColumn":15},{"ruleId":"468","severity":1,"message":"493","line":68,"column":5,"nodeType":"470","messageId":"471","endLine":68,"endColumn":21},{"ruleId":"468","severity":1,"message":"486","line":70,"column":5,"nodeType":"470","messageId":"471","endLine":70,"endColumn":30},{"ruleId":"468","severity":1,"message":"488","line":72,"column":5,"nodeType":"470","messageId":"471","endLine":72,"endColumn":27},{"ruleId":"555","severity":1,"message":"556","line":197,"column":13,"nodeType":"557","messageId":"558","endLine":197,"endColumn":58},{"ruleId":"468","severity":1,"message":"577","line":28,"column":9,"nodeType":"470","messageId":"471","endLine":28,"endColumn":16},{"ruleId":"468","severity":1,"message":"540","line":52,"column":5,"nodeType":"470","messageId":"471","endLine":52,"endColumn":36},{"ruleId":"468","severity":1,"message":"504","line":54,"column":5,"nodeType":"470","messageId":"471","endLine":54,"endColumn":19},{"ruleId":"468","severity":1,"message":"489","line":55,"column":5,"nodeType":"470","messageId":"471","endLine":55,"endColumn":18},{"ruleId":"468","severity":1,"message":"490","line":56,"column":5,"nodeType":"470","messageId":"471","endLine":56,"endColumn":15},{"ruleId":"468","severity":1,"message":"491","line":57,"column":5,"nodeType":"470","messageId":"471","endLine":57,"endColumn":15},{"ruleId":"468","severity":1,"message":"493","line":59,"column":5,"nodeType":"470","messageId":"471","endLine":59,"endColumn":21},{"ruleId":"468","severity":1,"message":"485","line":60,"column":5,"nodeType":"470","messageId":"471","endLine":60,"endColumn":35},{"ruleId":"468","severity":1,"message":"486","line":61,"column":5,"nodeType":"470","messageId":"471","endLine":61,"endColumn":30},{"ruleId":"468","severity":1,"message":"488","line":63,"column":5,"nodeType":"470","messageId":"471","endLine":63,"endColumn":27},{"ruleId":"468","severity":1,"message":"474","line":24,"column":10,"nodeType":"470","messageId":"471","endLine":24,"endColumn":19},{"ruleId":"468","severity":1,"message":"578","line":54,"column":13,"nodeType":"470","messageId":"471","endLine":54,"endColumn":26},{"ruleId":"468","severity":1,"message":"579","line":135,"column":11,"nodeType":"470","messageId":"471","endLine":135,"endColumn":24},{"ruleId":"512","severity":1,"message":"580","line":145,"column":10,"nodeType":"514","endLine":145,"endColumn":12,"suggestions":"581"},{"ruleId":"468","severity":1,"message":"504","line":150,"column":9,"nodeType":"470","messageId":"471","endLine":150,"endColumn":23},{"ruleId":"468","severity":1,"message":"489","line":151,"column":9,"nodeType":"470","messageId":"471","endLine":151,"endColumn":22},{"ruleId":"468","severity":1,"message":"490","line":152,"column":9,"nodeType":"470","messageId":"471","endLine":152,"endColumn":19},{"ruleId":"468","severity":1,"message":"491","line":153,"column":9,"nodeType":"470","messageId":"471","endLine":153,"endColumn":19},{"ruleId":"468","severity":1,"message":"492","line":154,"column":9,"nodeType":"470","messageId":"471","endLine":154,"endColumn":32},{"ruleId":"468","severity":1,"message":"493","line":155,"column":9,"nodeType":"470","messageId":"471","endLine":155,"endColumn":25},{"ruleId":"468","severity":1,"message":"485","line":157,"column":9,"nodeType":"470","messageId":"471","endLine":157,"endColumn":39},{"ruleId":"468","severity":1,"message":"486","line":158,"column":9,"nodeType":"470","messageId":"471","endLine":158,"endColumn":34},{"ruleId":"468","severity":1,"message":"488","line":160,"column":9,"nodeType":"470","messageId":"471","endLine":160,"endColumn":31},{"ruleId":"582","severity":1,"message":"583","line":3,"column":1,"nodeType":"584","endLine":3,"endColumn":38},{"ruleId":"468","severity":1,"message":"483","line":70,"column":9,"nodeType":"470","messageId":"471","endLine":70,"endColumn":17},{"ruleId":"468","severity":1,"message":"585","line":1,"column":17,"nodeType":"470","messageId":"471","endLine":1,"endColumn":27},{"ruleId":"468","severity":1,"message":"586","line":2,"column":8,"nodeType":"470","messageId":"471","endLine":2,"endColumn":20},{"ruleId":"468","severity":1,"message":"587","line":15,"column":10,"nodeType":"470","messageId":"471","endLine":15,"endColumn":14},{"ruleId":"468","severity":1,"message":"588","line":16,"column":10,"nodeType":"470","messageId":"471","endLine":16,"endColumn":23},{"ruleId":"468","severity":1,"message":"589","line":16,"column":25,"nodeType":"470","messageId":"471","endLine":16,"endColumn":41},{"ruleId":"468","severity":1,"message":"590","line":18,"column":9,"nodeType":"470","messageId":"471","endLine":18,"endColumn":24},{"ruleId":"468","severity":1,"message":"591","line":22,"column":9,"nodeType":"470","messageId":"471","endLine":22,"endColumn":20},{"ruleId":"468","severity":1,"message":"587","line":15,"column":10,"nodeType":"470","messageId":"471","endLine":15,"endColumn":14},{"ruleId":"468","severity":1,"message":"592","line":16,"column":10,"nodeType":"470","messageId":"471","endLine":16,"endColumn":14},{"ruleId":"468","severity":1,"message":"593","line":16,"column":16,"nodeType":"470","messageId":"471","endLine":16,"endColumn":23},{"ruleId":"468","severity":1,"message":"590","line":18,"column":9,"nodeType":"470","messageId":"471","endLine":18,"endColumn":24},{"ruleId":"468","severity":1,"message":"591","line":22,"column":9,"nodeType":"470","messageId":"471","endLine":22,"endColumn":20},{"ruleId":"468","severity":1,"message":"540","line":53,"column":5,"nodeType":"470","messageId":"471","endLine":53,"endColumn":36},{"ruleId":"468","severity":1,"message":"504","line":55,"column":5,"nodeType":"470","messageId":"471","endLine":55,"endColumn":19},{"ruleId":"468","severity":1,"message":"489","line":56,"column":5,"nodeType":"470","messageId":"471","endLine":56,"endColumn":18},{"ruleId":"468","severity":1,"message":"490","line":57,"column":5,"nodeType":"470","messageId":"471","endLine":57,"endColumn":15},{"ruleId":"468","severity":1,"message":"491","line":58,"column":5,"nodeType":"470","messageId":"471","endLine":58,"endColumn":15},{"ruleId":"468","severity":1,"message":"492","line":59,"column":5,"nodeType":"470","messageId":"471","endLine":59,"endColumn":28},{"ruleId":"468","severity":1,"message":"493","line":60,"column":5,"nodeType":"470","messageId":"471","endLine":60,"endColumn":21},{"ruleId":"468","severity":1,"message":"494","line":61,"column":5,"nodeType":"470","messageId":"471","endLine":61,"endColumn":20},"no-native-reassign",["594"],"no-negated-in-lhs",["595"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'initializing' is defined but never used.","'useStyles' is defined but never used.","'AppBar' is defined but never used.","'backgroundScrollStopForTimePicker' is assigned a value but never used.","'setBackgroundScrollStopForTimePicker' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Transition' is assigned a value but never used.","'isMobile' is assigned a value but never used.","'fontColor' is assigned a value but never used.","'borderRadiusesForInnerElements' is assigned a value but never used.","'borderRadiusesForWholeApp' is assigned a value but never used.","'borderColorForInnerElements' is assigned a value but never used.","'borderColorForOuterApp' is assigned a value but never used.","'carsTypeColor' is assigned a value but never used.","'hoverColor' is assigned a value but never used.","'iconsColor' is assigned a value but never used.","'backAndNextButtonsColor' is assigned a value but never used.","'innerTextOnHover' is assigned a value but never used.","'inputsFontColor' is assigned a value but never used.","'inputsBackground' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'backgroundColorOnScroll' is assigned a value but never used.","'authApi' is defined but never used.","'smallDevices' is assigned a value but never used.","'resetWidgetInputs' is assigned a value but never used.","'borderRadiuses' is assigned a value but never used.","'mapDispatchToProps' is assigned a value but never used.","'company0Key' is assigned a value but never used.","'Draggable' is defined but never used.","no-dupe-keys","Duplicate key 'boxShadow'.","ObjectExpression","'result' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createReservation' and 'formSummary'. Either include them or remove the dependency array. If 'createReservation' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["596"],"'textColor' is assigned a value but never used.","'FormProvider' is defined but never used.","'inputStyle' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Carousel' is defined but never used.","'styles' is defined but never used.","'disableHourly' is assigned a value but never used.","'timePickerOpened' is assigned a value but never used.","'setTimePickerOpened' is assigned a value but never used.","'selectedDate' is assigned a value but never used.","'selectedTime' is assigned a value but never used.","'handleTimeChange' is assigned a value but never used.","'setRedBorderOnSubmitForTime2' is assigned a value but never used.","'errors' is assigned a value but never used.","'schema' is assigned a value but never used.","'handleDateChangeFunc' is assigned a value but never used.","'openTimePicker' is assigned a value but never used.","'setOpenTimePicker' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'ThemeProviderAppBackgroundColor' is assigned a value but never used.","'setFontColorState' is assigned a value but never used.","'triggerToTimePicker' is assigned a value but never used.","'setTriggerToTimePicker' is assigned a value but never used.","'eventCount' is assigned a value but never used.","'mask' is assigned a value but never used.","'formatChars2' is assigned a value but never used.","'resData' is assigned a value but never used.","React Hook useEffect contains a call to 'setBookingType'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [hourly, firstAirline] as a second argument to the useEffect Hook.","MemberExpression",["597"],"'isiPad' is assigned a value but never used.","'carTextColor' is assigned a value but never used.","'car' is assigned a value but never used.","'useForm' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'consts' is defined but never used.","'ListItem' is defined but never used.","'TextField' is defined but never used.","'Controller' is defined but never used.","'ReactInputMask' is defined but never used.","'AntSwitch' is defined but never used.","'MeetAndGreetIconWhite' is defined but never used.","Block is redundant.","redundantBlock","'card' is assigned a value but never used.","'setCard' is assigned a value but never used.","'startsWithTwo' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'fetchAirlines'. Either include it or remove the dependency array. If 'fetchAirlines' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["598"],"Duplicate key 'background'.","'closeOnBodyClick' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'closeOnEscapeKeyDown'. Either include it or remove the dependency array.",["599"],"'classes' is assigned a value but never used.","'handleChanger' is assigned a value but never used.","'copiedLoading' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'destinations', 'formData.orderAddressDetails', 'resetInputs', and 'setDestinations'. Either include them or remove the dependency array. If 'setDestinations' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["600"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'useContext' is defined but never used.","'ThemeContext' is defined but never used.","'open' is assigned a value but never used.","'privacyPolicy' is assigned a value but never used.","'setPrivacyPolicy' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'term' is assigned a value but never used.","'setTerm' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"601","fix":"602"},{"desc":"603","fix":"604"},{"desc":"605","fix":"606"},{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},"Update the dependencies array to be: [createReservation, formSummary]",{"range":"611","text":"612"},"Add dependencies array: [hourly, firstAirline]",{"range":"613","text":"614"},"Update the dependencies array to be: [fetchAirlines]",{"range":"615","text":"616"},"Update the dependencies array to be: [closeOnEscapeKeyDown]",{"range":"617","text":"618"},"Update the dependencies array to be: [destinations, formData.orderAddressDetails, resetInputs, setDestinations]",{"range":"619","text":"620"},[1182,1184],"[createReservation, formSummary]",[16796,16796],", [hourly, firstAirline]",[10636,10638],"[fetchAirlines]",[610,612],"[closeOnEscapeKeyDown]",[4506,4508],"[destinations, formData.orderAddressDetails, resetInputs, setDestinations]"]